######################################
#  Adventuron                        #
######################################

game_information {
   game_name                    = CC's Road to Stardom
   game_version                 = 1.0.0
   game_shortname               = CC Star
   written_by                   = OK Feather
   uuid                         = 910e5474-beef-11ec-9d64-0242ac120002
   year_of_release              = 2022
   short_synopsis               = Help 50% cat, 50% bunny, 100% cute CC become an online idol!
}

themes {
  theme_base : theme {
      colors {
         exit_list_item_pen = #fdd
      }
      lister_exits {
         is_list_enter = true
      }
  }
  theme_mono : theme {
      theme_settings {
         font = daad
      }
   }
}

######################################
#  Game Settings                     #
######################################

game_settings {
   auto_ask_sound_permissions = false
   enable_standard_all_behaviour = false
}


loading_screen = loading_screen
redescribe = auto_beta

start_at = cc_room

vocabulary {
   : verb / aliases = [examine, check, regarde, touch]
   : verb / aliases = [give, show]
   : verb / aliases = [up, upstair, upstairs]
   : verb / aliases = [down, downstair, downstairs]
   : verb / aliases = [talk, say, speak, tell, ask, wave, discuss, chat]
   : verb / aliases = [get, take, pocket]
   : verb / aliases = [comment, comments, note, notes]
   : verb / aliases = [exchange, exchanging]
   : verb / aliases = [exit, leave, outside, out, flee, escape, no, refuse]
   : verb / aliases = [enter, inside, in]
   : verb / aliases = [use, drink, eat, consume, swallow]
   : verb / aliases = [throw, discard, vomit, puke]
   : verb / aliases = [ring,strike]
   : verb / aliases = [move, go]
   : verb / aliases = [guess, reply]
   : verb / aliases = [thank, thanks]
   : verb / aliases = [happy, merry, feliz, joyous, feathery, great, joyeux, enjoy, warmest, jolly, cheerful, 행복한, 메리, meli]
   : verb / aliases = [kill,threaten,menace,intimidate,browbeat,bully,scare,frighten,terrorize,murder,assassinate,beat,fight,combat,hurt,kick,harm,injure,insult]
   : verb / aliases = ["cry", ":(","=(", "='(", ":'("]
   : verb / aliases = ["smile", "grin", "laugh", ":)","=)",":D","=D"]
   : verb / aliases = [blue, black, yellow, pink, white, colorless, rainbow, purple, green]
   : verb / aliases = [unlock, password, pass, type, write, input]
   : noun      / aliases = [bread, croissant, pain, cookie, loaf, biscuit]
   : noun      / aliases = [cafe, coocoo, shop, restaurant]
   : noun      / aliases = [owner, vendor]
   : noun      / aliases = [pigeon]
   : noun      / aliases = [child, children, kid]
   : noun      / aliases = [comment, note]
   : noun      / aliases = [bird, dove]
   : noun      / aliases = [door, entrance]
   : noun      / aliases = [energy, drink, beverage, redgull, can, red, potion, barrel, taurine, juice, clayrox, clorox]
   : noun      / aliases = [mirror, reflection]
   : noun      / aliases = [garden, park, yard, lawn, land, plot, greenhouse, orchard]
   : noun      / aliases = [fight, combat, conflict]
   : noun      / aliases = [floor, ground, flooring]
   : noun      / aliases = [up, upstair, upstairs]
   : noun      / aliases = [laptop, computer]
   : noun      / aliases = [screen, display]
   : noun      / aliases = [porthole, window, view, sky, scenery]
   : noun      / aliases = [snow, white, snowwhite]
   : noun      / aliases = [bull, cow, bouncy, bouncybull, bluecow]
   : noun      / aliases = [plush, plushie, stuffedanimal, animal, stuffed, lion, bear, teddy, teddybear, stuffie, plushtoy, stuffy]
   : noun      / aliases = [boat, ship, barge, gondola, yacht, sailboat, ark, bateau]
   : noun      / aliases = [python, pighon, pygeon, pyghon]
   : noun      / aliases = [puzzle, enigma, riddle, mystery, problem]
   : noun      / aliases = [guitar, music, bass, instrument]
   : noun      / aliases = [tool, machine, gadget, appliance, kirby, device, toolbox, furniture]
   : noun      / aliases = [tree, pine, forest]
   : noun      / aliases = [room, chamber, place, here]
   : noun      / aliases = [joystick, trackball, gamepad, joypad, trackpad, stick]
   : noun      / aliases = [blue, black, yellow, pink, white, colorless, rainbow, purple, green]
   : noun      / aliases = [seven, 7, 7C, 7Cs, sevenseas, daphne, robot, bot]
   : noun      / aliases = [necklace, chain, jewel, euro, gold]
   : noun      / aliases = [rud, ru, duri, dhxp, gamer, r]
   : noun      / aliases = [wool, woolion, mechanic, lion, w]
   : noun      / aliases = [june, inventor, jjyy, j]
   : noun      / aliases = [florrie, flora, f]
   : noun      / aliases = [e, ee, etana]
   : noun      / aliases = [yourself, cc, myself, me, you]
}

######################################
#  Variables                         #
######################################

booleans {
   can_leave_crispy_garden : boolean "false";
   help_about_commands : boolean "false";
   is_sound_muted : boolean "true";
   music_ever_enabled : boolean "false";
   solved_wool_riddle : boolean "false";
   can_create_june_e : boolean "false";
   is_seven_seas_crispy : boolean "true";
   is_wool_wheeled : boolean "true";
   is_laptop_unlocked : boolean "false";
   is_rud_sad : boolean "true" ;
   is_hero_cc : boolean "false" ;
   is_everybody_here : boolean "false" ;
   is_june_in_living_room : boolean "false" ;
   is_e_in_living_room : boolean "false" ;
   is_florrie_in_living_room : boolean "false" ;
   is_florrie_in_living_room_with_cake : boolean "false" ;
   is_puzzle_rud_in_progress : boolean "false" ;
   is_puzzle_seven_seas_now : boolean "false" ;
   is_puzzle_ee_solved : boolean "false" ;
   is_puzzle_florrie_now : boolean "false" ;
   is_puzzle_florrie_solved : boolean "false" ;
   has_florrie_drank : boolean "false" ;
   you_win : boolean "false" ;
   talked_to_june : boolean "false" ;
   talked_to_e : boolean "false" ;
   talked_to_rud : boolean "false" ;
   talked_to_mirror_and_solved_puzzles : boolean "false" ;
   rud_sad_talked : dynamic_boolean {(
      talked_to_rud &&
      is_rud_sad
   )}
}

integers {
   pitch_random : integer "0";
   inventory_limit : integer "30" ;
}

strings {
   next_track : string "";
   current_track : string "";
   sound_volume : string "normal";
   string_tmp : string "";
   comments : string "";
   nothing_message : string "";
   string_correction : string "";
}

######################################
#  Locations                         #
######################################

locations {

   cc_room : location "Hello CC! This is your bedroom, typical of rooms in spaceships nowadays. Today is your birthday, so your inventor friend <June<#fee>> made a custom magic <mirror<#fee>> that answers your questions. Feel free to <TALK<#fee>> to the mirror." ;

   cc_hero_june : location "June helped you transform into HeroCC thanks to her magic <beak<#fee>>." ;

   cc_win : location "Everybody is here, finally we can eat cake!" ;

   crispy_garden : location "You are in the Crispy Garden. You see trees where <chicken wings<#fee>> grow.";

   living_room : location "You are in the common living room." ;

   party_planet : location "You are in front of Party Game Planet, the gaming room. Maybe you should ENTER?" ;

   party_planet_inside : location "You are inside the gaming room." ;

   wools_wheels : location "You are at Wool's Wheels, <Wool<#fee>>'s vehicle and ship repair area." ;

   puzzle_florrie_laptop : location "You are in front of Florrie's laptop. Can you <UNLOCK<#fee>> or <TYPE<#fee>> her password?";

   puzzle_channels : location "TODO";

   puzzle_hat : location "Wool says: \'I can show you my favorite puzzle of when I was your age. <TALK<#fee>> to me whenever you are ready.\'";

   puzzle_rud : location "TODO";

   puzzle_ship : location "TODO";

   puzzle_labyrinth : location "TODO";

}

######################################
#  Connections                       #
######################################

connections {

   from, direction, to = [
   cc_room, south, living_room,
   living_room, west, wools_wheels,
   wools_wheels, south, party_planet,
   party_planet, enter, party_planet_inside,
   party_planet, east, crispy_garden,
   crispy_garden, north, living_room,
   ]

}

######################################
#  Objects                           #
######################################

objects {

chicken_tree : object "a typical <chicken tree<#fee>>" at = "crispy_garden" ;

ee : scenery "<pigeon E<#fee>>, a friend of June who made a few viral videos" ;

florrie : scenery "programmer <Florrie<#fee>>" ;

june : scenery "inventor <June<#fee>>, who made you the custom <mirror<#fee>>" ;

laptop : scenery "a <laptop<#fee>> computer" at = "living_room";

screen : scenery "a large digital <screen<#fee>>" at = "living_room";

map : object "a <map<#fdd>> of the ship" at = "cc_room";

energy_drink : object "a brand new can of energy <drink<#fee>>";

mirror : object "the <mirror<#fee>> June made for you" at = "cc_room";

rud_happy : scenery "<RuD<#fee>>, who looks way more energized now";

rud_sad : scenery "<RuD<#fee>>, who is almost always there" at = "party_planet_inside";

seven_seas : scenery "one of the most data savvy robots, called <SevenSeas<#fee>> or <7Cs<#fee>>" ;

wool : scenery "mechanic <Wool<#fee>>, who does all kinds of repair work here" at = "wools_wheels";

wool_puzzled : scenery "mechanic <Wool<#fee>>, showing his favorite puzzle";

wool_kitchen : scenery "<Wool<#fee>>" ;
sevenseas_kitchen : scenery "<SevenSeas<#fee>>" ;
rud_kitchen : scenery "<RuD<#fee>>" ;
june_kitchen : scenery "<June<#fee>>" ;
ee_kitchen : scenery "<E<#fee>>" ;

}

######################################
#  Barriers                          #
######################################

barriers {
   block_laptop_wools_wheels : block_path {
      from = living_room
      to = wools_wheels
      message  = Curiosity makes your mind more active and open to new ideas. That's why health professionals would recommend unlocking this computer for your personal growth.
      block_when_not = is_laptop_unlocked

   }

   block_wool : block_path {
      from = wools_wheels
      to = party_planet
      message  = You should talk to Wool first, he spends way too much time alone, that's not healthy at all.
      block_when_not = solved_wool_riddle
      show_blocked_exit = true

   }

   block_leave_party_planet : block_path {
      from = party_planet_inside
      to = party_planet
      message  = Please assist RuD and show some compassion, he has to finish his game and cannot lose face.
      block_when = rud_sad_talked
      show_blocked_exit = true

   }

   block_rud_sad : block_path {
      from = party_planet
      to = crispy_garden
      message  = The yard is still chilly, let's stay here for a bit.
      block_when = is_rud_sad
      show_blocked_exit = true

   }

   block_seven_seas : block_path {
      from = crispy_garden
      to = living_room
      message  = You should enjoy the view a little longer.
      block_when_not = can_leave_crispy_garden
      show_blocked_exit = true
   }

block_living_room_to_crispy_garden : block_path {
      from = living_room
      to = crispy_garden
      message  = The yard is too chilly, let's stay here for a bit.
      block_when = is_rud_sad
      show_blocked_exit = true
   }
}

######################################
#  On Startup                        #
######################################

on_startup {
   : if (!sysvar_bool "sysvar_has_asked_sound") {
      : print "CC's Road to Stardom uses background music.\n\nYou can lower the volume or stop the music at any moment using <SOUND LOWEST<#fdd>> or <SOUND OFF<#fdd>>.\n\nDo you wish to enable the music?\n";
      : gosub "set_sound_on";
      : if (!sysvar_bool "sysvar_music_enabled") {
         : print "You can enable the music at any moment with <SOUND ON<#fdd>>.";
         : press_any_key;
      }
      : clear_screen;
   }
   : else_if (sysvar_bool "sysvar_music_enabled") {
      : set_true "music_ever_enabled";
      : if (sysvar_bool "sysvar_sound_enabled") {
         : set_false "is_sound_muted";
         : print "You can lower or stop the sound at any moment with <SOUND LOWEST<#fdd>> or <SOUND OFF<#fdd>>.\n";
         : press_any_key;
      }
      : else {
         : print "CC's Road to Stardom uses background music. You can enable the music at any moment with <SOUND ON<#fdd>> or <SOUND LOWEST<#fdd>> for lower volume.\n";
         : press_any_key;
      }
   }
   : gosub "update_volume";
   : play_music "music_beat_2";
   : print "Type <VERB NOUN<#fdd>> with the keyboard to advance in the game." ;
   : if (is_mobile()) {
      : print "You can touch some coloured words to copy them, or touch and hold to choose an action.";
   }
   : else {
      : print "You can click some coloured words to copy them, or right-click to choose an action.";
   }
   : print "e.g. <EXAMINE PIGEON<#fdd>> (or <X<#fdd>>) to take a closer look at a PIGEON." ;
   : print "<GET CHICKEN<#fdd>> to take CHICKEN and add it to your inventory." ;
   : press_any_key ;
   : print "To travel, type <NORTH<#fdd>>, <EAST<#fdd>>, <SOUTH<#fdd>>, <WEST<#fdd>> (or <N<#fdd>>, <E<#fdd>>, <S<#fdd>>, <W<#fdd>>), <ENTER<#fdd>>, <EXIT<#fdd>>, <UP<#fdd>>, <DOWN<#fdd>>." ;
   : press_any_key ;
   : print "To check your inventory, type <INVENTORY<#fdd>> (or <I<#fdd>>)." ;
   : press_any_key ;
   : print "To see available commands at a location, type <HELP<#fdd>>." ;
   : press_any_key ;

}

######################################
#  Subroutines                       #
######################################

subroutines {
   set_sound_on : subroutine {
      : if (!sysvar_bool "sysvar_sound_enabled") {
         : ask_permission ask_again_and_again = "true" category = "sound" ;
      }
      : if (sysvar_bool "sysvar_sound_enabled" && !sysvar_bool "sysvar_music_enabled") {
            : ask_permission ask_again_and_again = "true" category = "music" ;
      }
      : if (sysvar_bool "sysvar_music_enabled") {
         : set_false "is_sound_muted";
         : gosub "update_volume";
         : set_true "music_ever_enabled";
      }
   }
   random_music : subroutine {
      : if (is_sound_muted) {
         : return;
      }
      : store_random var = "pitch_random";
      : if (pitch_random < 20) {
        :  beep millis="200" pitch="30";
      }
      : else_if (pitch_random < 40) {
        :  beep millis="200" pitch="33";
      }
      : else_if (pitch_random < 60) {
        :  beep millis="200" pitch="36";
      }
      : else_if (pitch_random < 80) {
        :  beep millis="200" pitch="39";
      }
      : else {
        :  beep millis="200" pitch="42";
      }
   }
   play_music : subroutine {
      : if (is_sound_muted) {
         : return;
      }
      : if (is_at "cc_room") {
         : set_string var="next_track" text="music_beat_2";
         : if (next_track != current_track) {
            : play_music "music_beat_2";
         }
      }
      : else_if (is_at "party_planet") {
         : set_string var="next_track" text="music_party_planet_outside";
         : if (next_track != current_track) {
            : play_music "music_party_planet_outside";
         }
      }
      : else_if (is_at "puzzle_florrie_laptop") {
         : set_string var="next_track" text="music_short";
         : if (next_track != current_track) {
            : play_music "music_wools_wheels";
         }
      }
      : else_if (is_at "wools_wheels") {
         : set_string var="next_track" text="music_beat_1";
         : if (next_track != current_track) {
            : play_music "music_beat_1";
         }
      }
      : else_if (is_at "crispy_garden") {
         : set_string var="next_track" text="music_crispy_garden";
         : if (next_track != current_track) {
            : play_music "music_crispy_garden";
         }
      }
      : else_if (is_at "living_room") {
         : set_string var="next_track" text="music_living_room";
         : if (next_track != current_track) {
            : play_music "music_living_room";
         }
      }
      : else_if (is_at "party_planet_inside") {
         : set_string var="next_track" text="music_party_planet_inside";
         : if (next_track != current_track) {
            : play_music "music_party_planet_inside";
         }
      }
      : else_if (is_at "cc_win") {
         : set_string var="next_track" text="music_win";
         : if (next_track != current_track) {
            : play_music "music_win";
         }
      }

      : set_string var="current_track" {(next_track)}
   }
   update_volume : subroutine {
      : if (is_sound_muted) {
         : set_music_vol volume="0";
      }
      : else_if (sound_volume == "lowest") {
         : set_music_vol volume="3";
      }
      : else_if (sound_volume == "low") {
         : set_music_vol volume="7";
      }
      : else_if (sound_volume == "normal") {
         : set_music_vol volume="16";
      }
      : else_if (sound_volume == "high") {
         : set_music_vol volume="40";
      }
      : else_if (sound_volume == "highest") {
         : set_music_vol volume="100";
      }
   }
}

######################################
#  On Describe                       #
######################################

on_describe {
   : gosub "play_music";
   : if (is_at "cc_win" ) {
      : print "CONGRATULATIONS!" ;
      : print "YOU FINISHED THE GAME! C-C YOU LATER!!!!" ;
      : press_any_key ;
      : clear_screen;
      : stop_music;
      : win_game ;
   }
}

######################################
#  On Command                        #
######################################

on_command {
   : match "follow _;about _; credit _; credits _; readme _; examine cosmoose; cosmoose - ; dhxp -"  {
      : if ((verb_is "about" || verb_is "follow") && is_exists (s1())) {
         : set_sentence {("examine "+ rationalized "noun1")};
      }
      : else {
          : print "YOU CAN FOLLOW OR CHECK COSMOOSE EVERYWHERE: <cosmoose.org>[https://cosmoose.org]." ;
      }
   }
   : match "get all" {
      : if (is_at "cc_room") {
         : print "You are not a baby anymore. No need to take all these toys with you." ;
      }
      : else {
        : print "You don't have proper pockets, that's a little too much.";
      }
   }
   : match "refresh _" {
      : set_sentence "look";
   }
   : match "verb noun" {
      : print "You need to type commands consisting in one verb or one verb and one noun, for example:\n\n>><EXAMINE<#fdd>>\n>><LOOK PIGEON<#fdd>>\n\nType <HELP<#fdd>> to have a summary of useful commands.";
   }
   : match "save cc; help cc" {
      : print "We will do it!";
   }
   : match "examine mirror"  {
      : if (is_at "cc_room") {
         : print "A mirror inspired by antique Venetian aesthetics. Except the usual floral details have been replaced with feathers and bird shapes." ;
      }
   }
   : match "examine star"  {
      : if (is_at "cc_room") {
         : print "You are definitely going to become the number one idol of the Cosmooverse! This star is a gentle reminder." ;
      }
   }
   : match "examine bull"  {
      : if (is_at "cc_room") {
         : print "One of the bouncy bulls you can find in the Cosmooverse." ;
      }
   }
   : match "examine bed"  {
      : if (is_at "cc_room") {
         : print "A bed that is easy to disassemble and transport, made by company IDEA." ;
      }
   }
   : match "examine porthole"  {
      : if (is_at "cc_room" || is_at "cc_hero_june") {
         : print "A small view on the stars and planets nearby." ;
      }
      : if (is_at "living_room"|| is_at "puzzle_florrie_laptop") {
         : print "A premium view on the stars and planets nearby." ;
      }
      : if (is_at "wools_wheels") {
         : print "A nice view on the stars and planets nearby." ;
      }
      : if (is_at "crispy_garden") {
         : print "It's so sunny here." ;
      }
      : if (is_at "party_planet" || is_at "party_planet_inside") {
         : print "Not much to see here." ;
      }
   }
   : match "examine cube; examine toys"  {
      : if (is_at "cc_room") {
         : print "We all need our toys, no matter how grown up we are." ;
      }
   }
   : match "examine plushie"  {
      : if (is_at "cc_room") {
         : print "An old gift from Wool. Is it a bear, a lion? Who cares, you're too old to play with it." ;
      }
   }
   : match "examine boat"  {
      : if (is_at "cc_room") {
         : print "This boat is an old gift from RuD, a self-proclaimed space pirate who loves Earth pirates too." ;
      }
   }
   : if (is_present "map" && !is_carried "map" && is_at "cc_room") {
      : match "get map" {
        : print "You may be growing up quickly, you still have a lot to learn. This <map<#fee>> may be useful. You take it!";
        : pocket "map";
        : press_any_key;
      }
      : match "exit _" {
         : mask {
            : print "You may be growing up quickly, you still have a lot to learn. This <map<#fee>> may be useful. You take it!";
            : pocket "map";
            : press_any_key;

         }
      }
   }
   : match "examine map; map _; use map" {
      : if (is_carried "map") {
          : set_theme "theme_mono";
          : clear_screen;
          : print {("^n^^c^<______<#000>><________<#000>>|<CC's Bedroom<#" + (is_at "cc_room"?"afa" : "faa")+">>|")};
          : print "^n^^c^--------------------------";
          : print {("^n^^c^|<Wool's Wheels<#" + (is_at "wools_wheels"?"afa" : "faa")+">>| <Common Room<#" + (is_at "living_room"?"afa" : "faa")+">>|")};
          : print "^n^^c^--------------------------";
          : print {("^n^^c^|<Party Planet<#" + (is_at "party_planet"?"afa" : "faa")+">><_<#000>>| <Crispy Yard<#" + (is_at "crispy_garden"?"afa" : "faa")+">>|")};
          : print "^n^^c^--------------------------";
          : print {("^n^^c^⬇<_____________<#000>>")};
          : print {("^n^^c^<Inside<#" + (is_at "party_planet_inside"?"afa" : "aaf")+">><_____________<#000>>")};

          : press_any_key;
          : set_theme "theme_base";
          : redescribe;
      }
      : else_if (is_present "map") {
         : print "A <map<#fee>> of the ship, could it be useful?";
      }
   }
   : match "sound _; music _; volume _" {
      : if (preposition_is "on" || noun1_is "lowest" || noun1_is "low" || noun1_is "normal" || noun1_is "high" || noun1_is "highest") {
         : mask {
            : set_string var="string_tmp" {(rationalized "noun1")}
            : set_sentence "nothing";
            : if (music_ever_enabled) {
               : if (!sysvar_bool "sysvar_sound_enabled") {
                  : set_sentence "sound on";
                  : set_false "is_sound_muted";
               }
            }
            : else {
               : gosub "set_sound_on";
               : if (music_ever_enabled) {
                  : gosub "play_music";
               }
               : else {
                  : set_string var="nothing_message" text="You have not enabled the music";
               }
            }
            : if (string_tmp != "") {
               : set_string var="sound_volume" {(string_tmp)};
               : print "Sound volume set to {sound_volume}.";
            }
            : gosub "update_volume";
         }
      }
      : else_if(noun1_is "off") {
         : mask {
           : set_sentence "sound off";
           # to prevent not restarting on SOUND ON
           : play_music "music_win";
           : set_string var = "current_track" text="";
           : set_true "is_sound_muted";
           : gosub "update_volume";
         }
      }
      : else {
         : if (sysvar_bool "sysvar_sound_enabled") {
            : print "<SOUND OFF<#fdd>> | <LOWEST<#fdd>> | <LOW<#fdd>> | <NORMAL<#fdd>> | <HIGH<#fdd>> | <HIGHEST<#fdd>> to disable sound or change volume.";
         }
         : else {
            : print "<SOUND ON<#fdd>> | <LOWEST<#fdd>> | <LOW<#fdd>> | <NORMAL<#fdd>> | <HIGH<#fdd>> | <HIGHEST<#fdd>> to enable sound and change volume.";
         }
     }
   }
   : match "talk mirror; talk -"   {
      : if (is_at "cc_room" && !talked_to_mirror_and_solved_puzzles) {
         : print "The mirror says:" ;
         : print "\'To answer your question: " ;
         : print "Will you become the most famous superstar of the Cosmooverse?" ;
         : press_any_key ;
         : clear_screen;
         : print "No, the most famous superstar of the <Cosmooverse<#fee>> will be a <pigeon<#fee>>. Either musician <OK Feather<#fee>> or bling foodie traveller <E<#fee>>." ;
         : print "That being said, I'm just a talking mirror, whereas you are the true master of your destiny. Follow your dreams or die trying! That's the lesson I learned from <SnowWhite<#fee>>." ;
         : print "Wow I'm tired after talking so much, I'll take a break. You can replay my previous answer any time. Ciao!\'" ;
         : press_any_key ;
         : clear_screen;
         : print "You wonder: why pigeons though? You need to investigate and make sure to become the most famous idol of the Cosmooverse! Let's go." ;
         : press_any_key ;
         : redescribe;
      }
      : else_if (is_at "cc_room" && talked_to_mirror_and_solved_puzzles) {
         : print "The mirror says:" ;
         : print "\'The stars are watching you CC. You crave security and stability. " ;
         : print "This is exactly what you will get this month. " ;
         : print "Your career graph looks as promising as your deepest wishes, but beware of boredom. " ;
         : print "What? This wasn't your question? Well, this is my answer anyways. I feel exhausted, I'm taking a break. \'" ;
         : print "A study shows that kids get bored of a new toy after a month, but you are already tired of this mirror." ;
      }
   }
   : match "examine cosmooverse"   {
      : print "The universe where you live." ;
   }
   : match "examine ok"   {
      : print "YOU CAN FOLLOW OR CHECK OK FEATHER EVERYWHERE: <okfeather.com>[https://www.okfeather.com]." ;
   }
   : match "examine e"   {
      : print "E is a pigeon influencer. A good friend of June." ;
   }
   : match "examine florrie"  {
       : print "Florrie is an AI programmer, she is currently busy preparing for a <Pyghon<#fee>> programming certification." ;
   }
   : match "examine pyghon"  {
       : print "One of the most popular programming languages, along with Lava, Rudy, Purrl, E and CC+ (your favorite)." ;
   }
   : match "examine june"   {
      : print "June is your inventor friend. She also makes a lot of music." ;
   }
   : match "examine pigeon; examine dove"   {
      : print "Pigeons are wonderful creatures. If you are not convinced yet, check out how they saved Christmas here: <okfeather.itch.io/feathery-christmas>[https://okfeather.itch.io/feathery-christmas]." ;
   }
   : match "examine snow"   {
      : print "Everyone in the Cosmooverse knows the story of SnowWhite. The shared destiny of two women wth seemingly nothing in common. One had unlimited beauty and ambition, while the other became a major figure of survivalism after pulling through a severe case of food poisoning." ;
   }
   : match "kill *" {
      : if (is_carried (s1())) {
         : print {("It would be a waste to "+original "verb" + " what I have taken!!!")};
      }
      : else_if (is_present (s1())) {
         : print "The thought could never even start to cross my mind.";
      }
      : else {
        : print "Violence is never the solution";
      }
   }
   : match "examine comment" {
      : set_sentence "comment";
   }
   : match "comment _" {
      : set_string var="string_tmp" {(substring {offset -> (strlen {(original "verb")}) string -> (command_text())})};
      : if (string_tmp == "") {
        : if (comments == "") {
            : print "I have not made any <comment<#fdd>> yet";
        }
        : else {
            : print "Here are all the comments I have made:{comments}";
        }
     }
     : else {
        : print "I'm adding that to my list of <comments<#fee>>.";
        : set_string var="comments" {(comments + "\n<_<#000>>" + string_tmp)};
     }

   }
   : match "drop *" {
      : print "You don't need to drop anything.";
   }
   : match "cheat *" {
      : print "Unknown verb - \"cheat\".";
   }

   : match "examine puzzle" {
      : if (is_at "puzzle_florrie_laptop") {
        : print "The screen displays:" ;
        : print "Password = answer to this riddle: " ;
        : print "\'My feathers take me anywhere. Everywhere I go there are admirers of my shiny iridescent neck. The tones of grey in my plumage are reminiscent of everyone's favorite weather. " ;
        : print "Who am I? UNLOCK me!\' " ;
      }
      : else_if (is_at "puzzle_hat" && !solved_wool_riddle) {
        : print "An albatross, a bald eagle and a chicken each wear a hat. They see the colors of the others’ hats but not their own. " ;
        : print "Their hats were randomly drawn among 5 hats, 3 RED ones and 2 BLUE ones. " ;
        : print "The albatross is asked to guess its hat color, but responds \'No idea\'. The bald eagle cannot guess its color either." ;
        : print "Then the chicken says \'I know my color\'. Which one is it? Type GUESS color." ;
      }
      : else {
        : print "Puzzles strengthen connections between brain cells, improves short-term memory and mental speed.";
      }
   }

   : match "clear -; redescribe -" {
        : redescribe;
   }

   : match "examine laptop; read laptop; use laptop"  {
      : if (is_at "living_room" && !is_laptop_unlocked) {
         : print "This laptop belongs to <Florrie<#fee>>." ;
         : goto "puzzle_florrie_laptop";
      }
      : if (is_at "living_room" && is_laptop_unlocked) {
         : print "You swore not to touch Florrie's laptop ever again." ;
      }
      : if (is_at "puzzle_florrie_laptop") {
        : print "The screen displays:" ;
        : print "Password = answer to this riddle: " ;
        : print "\'My feathers take me anywhere. Everywhere I go there are admirers of my shiny iridescent neck. The tones of grey in my plumage are reminiscent of everyone's favorite weather. " ;
        : print "Who am I? UNLOCK me!\' " ;
      }
      : if (is_at "party_planet_inside") {
         : print "The computer seems a bit sticky with all the spilled energy drink." ;
      }
   }

   : match "examine tree"  {
      : if (is_at "living_room" || is_at "puzzle_florrie_laptop") {
        : print "How can so many trees grow indoors?" ;
      }
   }
   : match "examine bench; examine table; examine chair "  {
      : if (is_at "living_room"|| is_at "puzzle_florrie_laptop") {
        : print "The perfect place to work, chat and drink coffee." ;
      }
   }
   : match "examine screen"  {
      : if (is_at "living_room" && !is_exists "june" ) {
        : print "This screen sometimes displays important information." ;
      }
      : if (is_at "living_room" && is_exists "june" ) {
        : print "This screen sometimes displays important information." ;
      }
      : if (is_at "puzzle_florrie_laptop") {
        : print "This laptop may be expensive, but you mainly notice the bread and chocolate crumbs stuck inside the keyboard. Florrie is a gourmet." ;
        : print "The screen displays:" ;
        : print "Password = answer to this riddle: " ;
        : print "\'My feathers take me anywhere. Everywhere I go there are admirers of my shiny iridescent neck. The tones of grey in my plumage are reminiscent of everyone's favorite weather. " ;
        : print "Who am I? UNLOCK me!\' " ;
      }
      : if (is_at "party_planet_inside" ) {
        : print "The screen displays what looks like a space game." ;
      }
   }

   : match "unlock pigeon; pigeon -"  {
      : if (is_at "puzzle_florrie_laptop") {
        : print "How can Florrie need clues to remember such an easy password??? " ;
        : print "You wish you had never seen this... Florrie's browser history is nothing but..." ;
        : print "PIGEONS!!!" ;
        : print "Video \'TEQ Talk: Improve Office Efficiency\' shows a pigeon at a desk drinking a protein-packed cheese beverage, and then there's \'Learn Programming in Pyghon with E\'... " ;
        : print "How can you compete? So unfair!!! You quickly lock the computer and swear not to touch it ever again." ;
        : press_any_key;
        : set_true "is_laptop_unlocked" ;
        : goto "living_room";
        : redescribe;
      }
    }

    : match "unlock dove"  {
      : if (is_at "puzzle_florrie_laptop") {
        : print "Almost there, too bad there can only be one password." ;
        : press_any_key;
      }
    }

    : match "unlock - "  {
      : if (is_at "puzzle_florrie_laptop") {
        : print "Try again." ;
        : press_any_key;
      }
    }

    : match "examine penguin"  {
      : if (is_at "puzzle_florrie_laptop") {
        : print "This logo was inspired by a scientist contracting penguinitis after a penguin bite. The most notable symptom is unconditional love towards penguins. Similar to pigeonitis." ;
      }
    }

   : match "get laptop"  {
      : if (is_at "living_room" || is_at "puzzle_florrie_laptop") {
        : print "This is not your <laptop<#fee>>. <Florrie<#fee>> should need it soon." ;
      }
   }

   : match "talk wool; talk - ; puzzle -"   {
      : if (is_at "wools_wheels" && !solved_wool_riddle) {
         : print "You ask Wool about pigeons. He replies: \'Why are pigeons so popular?" ;
         : print "I don't know, as I am not interested in physical entities. Only logic moves me.\'" ;
         : goto "puzzle_hat" ;
         : redescribe ;
      }
      : if (is_at "puzzle_hat") {
         : print "An albatross, a bald eagle and a chicken each wear a hat. They see the colors of the others’ hats but not their own. " ;
         : print "Their hats were randomly drawn among 5 hats, 3 RED ones and 2 BLUE ones. " ;
         : print "The albatross is asked to guess its hat color, but responds \'No idea\'. The bald eagle cannot guess its color either." ;
         : print "Then the chicken says \'I know my color\'. Which one is it? Type <GUESS<#fee>> color." ;
      }
      : if (is_at "wools_wheels" && solved_wool_riddle && is_wool_wheeled) {
         : print "Wool asks: \'Isn't logic beautiful?\'" ;
      }
      : if (is_at "wools_wheels" && !is_wool_wheeled) {
        : print "Finally Wool might be getting some fresh air elsewhere." ;
      }
      : else_if ((is_present "wool" || is_present "wool_kitchen") && is_florrie_in_living_room_with_cake) {
         : print "Wool says: \'One thing you might observe after each birthday is the loss of collagen and its change from ordered bundles of fibres to fragmented and messy fibres." ;
         : print "One consequence is that wound healing doesn't work as well.\'" ;
         : print "Err... Thanks for wishing a happy birthday I guess???" ;
      }
   }

   : match "examine wool"   {
      : print "Wool is a mysterious mechanic who can repair anything. Not very talkative, but can be a bit judgemental." ;
      : if (is_at "puzzle_hat" || is_at "wools_wheels") {
        : print "Wool can solve most problems with his brain. That's why he's often just standing there, not moving." ;
      }
   }

   :match "guess red ; red -"  {
      : if (is_at "puzzle_hat") {
         : print "Correct. The chicken's hat is red of course.";
         : print "I can <EXPLAIN<#fee>> if you want.";
         : set_true "solved_wool_riddle";
         : set_true "talked_to_mirror_and_solved_puzzles" ;
         : print "Alright, maybe answering riddles is one way to become famous? You should try with someone else. Let's go.";
         : goto "wools_wheels" ;
      }
   }

   :match "guess blue ; blue -"  {
      : if (is_at "puzzle_hat") {
         : print "Nope.";
         : print "If you study a bit of logic (even Tarski theories should suffice), you should be able to guess the correct color next try.";
      }
   }

   :match "explain _ ; explain -"  {
      : if (is_at "wools_wheels" && solved_wool_riddle) {
         : print "Let's call our 3 characters A, B and C." ;
         : print "A cannot guess its own color unless both B and C are BLUE. So there must be at least one RED hat among B and C." ;
         : print "Same for B." ;
         : print "But B could guess its own color if C was BLUE and A was RED. In this case it would mean B must be RED too." ;
         : print "Since B's Big Brain cannot guess its own color, C must be RED." ;
      }
   }

   : match "examine tool ; examine pigeon ; examine bin"  {
      : if (is_at "wools_wheels") {
         : print "Wool likes his tools so much that he gave them names. There is mailbox Kirby, smart devices Liqueon, Guneon, Pigeon..." ;
      }
   }

   : match "examine poster ; examine pigeon ; examine game"  {
      : if (is_at "party_planet_inside") {
         : print "Tweet Fighter, a classic game. There's a poster too." ;
      }
   }

   : match "examine door ; examine party; examine corridor; examine sign ; examine wall ; examine neon"  {
      : if (is_at "party_planet") {
         : print "There is not much here. Probably you should enter inside, or go somewhere else." ;
      }
   }

   : match "examine guitar ; examine headphones"  {
      : if (is_at "party_planet_inside") {
         : print "RuD has been learning music making since joining Windy Music Feedback." ;
         : print "It's a lovely place, you can join too by clicking this link: <windymusicfeedback.com>[https://indiemusicfeedback.com]." ;
      }
   }

   : match "examine frog"  {
      : if (is_at "party_planet_inside") {
         : print "The frog is an homage to RuD's mentor, an expert in martial arts who happens to be a frog. " ;
      }
   }

   : match "examine joystick ; examine keyboard ; examine mouse "  {
      : if (is_at "party_planet_inside") {
         : print "The computer seems a bit sticky with all the spilled energy drink." ;
      }
   }
   : match "examine chair "  {
      : if (is_at "party_planet_inside") {
         : print "It's a gaming chair of course! You've seen DewDieDie try to sell some of these." ;
      }
   }

   : match "examine dewdiedie "  {
      : if (is_at "party_planet_inside") {
         : print "A popular gaming expert." ;
      }
   }

   : match "talk rud; talk -"  {
      : if (is_present "rud_sad" && is_at "party_planet_inside") {
         : set_true "talked_to_rud" ;
         : print "RuD greets you warmly: \'CC!!! You look so cute today!!!!\', then begins to whisper:" ;
         : print "\'I'm in great trouble CC. I made a bet with Wool that I'd reach the Diamond Rank in Tweet Fighter before the season ends, but the deadline is in 1 hour!" ;
         : print "Wool is so sneaky, he invited me to this <Windy Music Feedback>[https://indiemusicfeedback.com] club, so I spent the whole time making songs instead of gaming! Not fair!" ;
         : print "I can do a mini-game to catch up, but I can only choose one!!! And after a few hours some of them stop working!" ;
         : print "Can you help me choose? I only have 10 cans left of RedGull, but I'll let you take one!\'" ;
         : print "He takes a sip of energy drink." ;
         : print "Can you <ASSIST RuD<#fee>>?" ;
         : set_true "is_puzzle_rud_in_progress" ;
         : press_any_key ;
         : redescribe ;
      }
      : else_if (is_present "rud_happy" && is_at "party_planet_inside") {
         : set_true "talked_to_rud" ;
         : print "RuD is very focused, and doesn't want to be disturbed." ;
         : print "He takes a sip of energy drink." ;
      }
      : else_if ((is_exists "june" || is_exists "ee" || is_exists "june_kitchen" || is_exists "ee_kitchen") && is_at "party_planet_inside") {
        : print "RuD followed you to the gaming room." ;
      }
      : else_if ((is_present "rud_happy"|| is_present "rud_kitchen")  && is_florrie_in_living_room_with_cake) {
             : print "RuD sings: \'Happy birthday CC!";
             : print "If you're happy and you know it, clap your hands, clap your hands!\'";
             : print "He takes a sip of energy drink." ;
      }
   }

   : match "examine rud"  {
       : if (is_present "rud_sad" && is_at "party_planet_inside") {
         : print "RuD looks a bit sadder than usual. A future idol could surely cheer him up!" ;
         : print "He takes a sip of energy drink." ;
       }
       : if (is_present "rud_happy" && is_at "party_planet_inside") {
         : print "RuD is always working hard to beat his highest score." ;
         : print "He takes a sip of energy drink." ;
       }
   }

   : match "examine drink"  {
      : if (is_at "party_planet_inside") {
        : print "These delicious drinks are a secret mix of artificial sweeteners and flavors, high fructose corn syrup, and stimulants. " ;
        : print "They also contain amino sulfonic acids like taurine, which may reverse nerve defects in experimental diabetic neuropathic rats." ;
        : print "You should try them!" ;
      }
   }

   : match "assist rud; assist -"  {
       : if (is_present "rud_sad" && is_at "party_planet_inside") {
         : print "RuD says: \'I have 1 hour left to gain 1444 points, and I can only play 1 mini-game: " ;
         : print "- Firstly there's AKAFeather, a cursive writing game. You can earn 80 points per minute, but it stops working after 15 minutes, and you need to wait 43 minutes to start again." ;
         : print "- Secondly there's Brooms, a cleaning game. You can earn 26 points per minute, but it stops working after 54 minutes, and you need to wait 5 minutes to start again." ;
         : print "- Thirdly there's Cosmoogang, a space cow farming game. You can earn 97 points per minute, but it stops working after 10 minutes, and you need to wait 20 minutes to start again." ;
         : print "Can you <GUESS<#fee>> which game I should focus on?\'. " ;
         : print "He takes a sip of energy drink." ;
       }
   }

      : match "guess c; guess cosmoogang; guess 3 ; c - ; cosmoogang - ; 3 - "  {
       : if (is_present "rud_sad" && is_at "party_planet_inside") {
         : create "energy_drink";
         : pocket "energy_drink";
         : print "RuD rushes to play Cosmoogang. Looks like he will win his bet! He looks so happy now. " ;
         : print "He takes a sip of energy drink." ;
         : print "But he doesn't look too impressed by your deduction skills." ;
         : print "He gives you a can of energy drink, as promised. " ;
         : print "It's in your <INVENTORY<#fee>>, you can <GIVE<#fee>>, <USE<#fee>> it." ;
         : set_false "is_rud_sad";
         : set_false "is_puzzle_rud_in_progress" ;
         : destroy "rud_sad";
         : create "rud_happy";
         : set_true "is_seven_seas_crispy" ;
         : create "seven_seas" target = "crispy_garden" ;
       }
   }

   : match "guess - ; guess a; guess b; guess akafeather; guess brooms ; guess 1 ; guess 2; 1 - ; 2 - "  {
       : if (is_present "rud_sad" && is_at "party_planet_inside") {
         : print " RuD doesn't look too impressed by your deduction skills. \'Are you sure?\' he asks." ;
         : print " He takes a sip of energy drink." ;
       }
   }

   : match "take road"  {
      : if (is_at "party_planet" && is_exists "rud_sad") {
         : print "You can't right now, it's too early.";
      }
   }

   : match "give laptop"  {
      : if (is_at "living_room") {
         : print "This is not your <laptop<#fee>>." ;
      }
   }

   : match "give drink "  {
      : if ((is_present "rud_happy" || is_present "rud_kitchen") && is_carried "energy_drink") {
         : print "RuD says: \'Look I promised that if you helped I'd give you this can. It already hurts me to see it go, so please keep it out of my sight.\'" ;
         : print "He takes a sip of his own energy drink." ;
      }
      : if ((is_present "seven_seas" || is_present "sevenseas_kitchen") && is_carried "energy_drink") {
         : print "Seven Seas says: \'I really appreciate your gesture but I think I am allergic to one component of this drink." ;
         : print "Last time I tried it, I began shaking everywhere and lost all control of my movements." ;
         : print "It might contain too much taurine.\'" ;
      }
      : if ((is_present "june"|| is_present "june_kitchen") && is_carried "energy_drink") {
         : print "June says: \'Oh it's the juice that looks like Clayrox toilet cleaner! Yeah tastes great, I don't want to deprive you of it!\'" ;
      }
      : if ((is_present "wool"|| is_present "wool_kitchen") && is_carried "energy_drink") {
         : print "Wool says: \'No thanks. People think energy drinks boosts your attention, but it's all a lie.\'" ;
      }
      : if ((is_present "ee" || is_present "ee_kitchen") && is_carried "energy_drink") {
         : print "E says: \'When I tried this, my disappointment was immeasurable and my day was ruined.\'" ;
      }
      : if (is_present "florrie" && is_carried "energy_drink" && !has_florrie_drank) {
         : print "Florrie takes a sip of energy drink..." ;
         : press_any_key ;
         : print "She coughs for a while, then disappears for a minute, then comes back and whispers:" ;
         : print "\'Thanks CC, it was so thoughtful of you!" ;
         : print "Please do not think I am being ungrateful, I truly cherish your gesture." ;
         : print "Maybe I am coughing because of post-exam stress? " ;
         : print "It could have affected my sense of taste... Look CC, the only thing that matters is what you think. " ;
         : print "Don't put too much focus on other people's opinions. " ;
         : print "If you enjoy this drink, then more power and energy to you!\' " ;
         : set_true "has_florrie_drank" ;
      }
      : else_if (is_present "florrie" && is_carried "energy_drink" && has_florrie_drank) {
         : print "Florrie says she hears her phone ringing, and excuses herself." ;
      }
   }

   : match "drink drink"  {
      : if (is_carried "energy_drink") {
         : print "You take a sip of energy drink." ;
         : print "It reminds you of cough syrup, weird but a bit addictive." ;
      }
   }

   : match "discard drink"  {
      : if (is_carried "energy_drink") {
         : print "Please honor the present that was given to you." ;
      }
   }


   : match "examine leaderboard; examine leaders"  {
      : if (is_at "party_planet_inside" && is_exists "rud_happy") {
        : print "RuD is so close to the top!!!! Only beaten by a certain OK.F, who must be a nerd." ;
      }
   }

   : match "show compassion"  {
      : if (is_at "party_planet_inside") {
         : print "RuD looks at you with glassy eyes and takes a sip of energy drink." ;
      }
   }

   : match "get chicken; taste chicken; grab chicken; seize chicken"  {
      : if (is_at "crispy_garden") {
        : print "You try one of the chicken wings on the tree. It tastes crispy and juicy, it's full of vitamins and grows really fast." ;
      }
   }

   : match "get mirror ; get chicken_tree"  {
      : if (is_present "mirror") {
        : print "Wow, you really have strong muscles. Thankfully this mirror is very sturdy.";
      }
      : if (is_present "chicken_tree") {
        : print "Wow, you really have strong muscles. Thankfully these trees grow back very fast." ;
      }
   }


   : match "examine chicken; examine tree; examine garden; examine greenhouse; examine shrub ; examine glass"  {
      : if (is_at "crispy_garden") {
        : print "Everyone loves chicken trees here. The sweet smell of wings drums and flats evokes summertime." ;
      }
   }

   : match "examine seven"  {
       : if (is_at "crispy_garden") {
         : print "SevenSeas is the walking encyclopedia we all dream of living with. An AI who can analyze any set of data. She <sings<#fee>> during her free time." ;
       }
   }

   : match "talk seven ; talk -"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && !is_puzzle_seven_seas_now && !can_leave_crispy_garden) {
         : print "You ask SevenSeas about pigeons. She replies: \'Pigeons dominating online stardom? That does not coincide with the data I have!" ;
         : print "To become a successful online entertainer, one must upload regular content with professional editing, also find a unique style and niche audience, it's a lot of work!\'" ;
         : print "Hmm... You think she sounds really dull. By the way, who's the most famous star? Let's ask SevenSeas." ;
         : press_any_key ;
         : print "She says: \'The most famous star is... Wait CC, are you even listening to me? You look so bored." ;
         : print "Why don't you try to find out by yourself? \'" ;
         : set_true "is_puzzle_seven_seas_now" ;
         : redescribe ;
         }
         : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
             : print "\'The four current most popular online hosts are:" ;
             : print "\'beats to mow the lawn to\', a music DJ" ;
             : print "\'C-Cherries\', introducing movie trailers" ;
             : print "\'DewDieDie\', a video game expert" ;
             : print "\'8k-Minute Recipes\', a cooking enthusiast." ;
             : print "Let's call them B, C, D and E. 3 of them are equally popular, but there is only 1 number one!" ;
             : print "I'll give you a <HINT<#fee>> for the channel you want, can you then <GUESS<#fee>> who is the most popular?\'" ;
             : print "Ask SevenSeas \'<HINT<#fee>> channel\' whenever you are ready." ;
             : print "If you know the answer, \'<GUESS<#fee>> channel\' whenever you are ready." ;
         }
         : if (is_at "crispy_garden" && is_exists "seven_seas" && !is_puzzle_seven_seas_now && can_leave_crispy_garden) {
             : print "You are becoming a puzzle master!" ;
         }
         : else_if ((is_present "seven_seas" || is_present "sevenseas_kitchen") && is_florrie_in_living_room_with_cake) {
             : print "SevenSeas sings: \'Please don't let it define ya";
             : print "We were all made to die-ya";
             : print "Like worker bees, like compost bags" ;
             : print "That makes you want to feel alive, yeah\'" ;
             : print "Well... You had no idea SevenSeas could be so heavy-hearted. You will definitely throw her a huge party one of these days." ;
      }
   }

   : match "hint b ; hint beat ; hint -"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
            : print "\'beats to mow the lawn to\' is as popular as \'DewDieDie\'." ;
       }
   }

   : match "hint c; hint cherries; hint cherry; hint ccherries"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
            : print "I love \'C-Cherries\', they really use cutting edge cinema technology." ;
       }
   }

   : match "hint d; hint dew; hint dewdiedie"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
            : print "\'DewDieDie\' is as popular as \'beats to mow the lawn to\'." ;
       }
   }

   : match "hint e; hint eight; hint 8; hint 8k; hint eightk; hint eightkminuterecipes"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
            : print "I love \'8k-Minute Recipes\'!!! They have a great cheese lasagna recipe with everything made from scratch. It's as popular as \'beats to mow the lawn to\'." ;
       }
   }

   : match "guess two; guess 2; guess c; guess cherries; guess cherry; guess ccherries"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
         : print "Well-done! Indeed, C-Cherries is currently the top star." ;
         : print "C-Cherries looks very wealthy. That's probably the main explanation for this incredible success." ;
         : print "SevenSeas says: \'CC, I may have another suggestion for becoming popular." ;
         : press_any_key ;
         : print "You could become a hero. For instance saving a life! " ;
         : print "For instance, choking is a common emergency. Here are the first-aid steps: " ;
         : print "1. Give 5 back blows. " ;
         : print "2. Give 5 abdominal thrusts (also known as the Heimlich maneuver)." ;
         : print "3. Alternate between 5 blows and 5 thrusts until the blockage is dislodged." ;
         : press_any_key ;
         : print "And voilà. I cannot wait to watch you experiment this technique!\'" ;
         : set_true "can_leave_crispy_garden" ;
         : set_true "can_create_june_e" ;
         : create "june" target = "living_room";
         : create "ee" target = "living_room";
         : destroy "laptop" ;
         : set_true "is_june_in_living_room" ;
         : set_true "is_e_in_living_room" ;
         : set_false "is_puzzle_seven_seas_now" ;
         : press_any_key ;
         : redescribe ;
       }
   }

   : match "guess one; guess 1; guess three; guess 3; guess four; guess 4; guess b; guess beat; guess d; guess dew; guess dewdiedie ; guess e; guess eight; guess 8; guess 8k; guess eightk; guess eightkminuterecipes"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
         : print "Maybe you need another <HINT<#fee>>?" ;
       }
   }

   : match "sing _" {
      : if (is_present "seven_seas") {
        : print "SevenSeas starts to sing: \'I have a dream, about a place I wanna go...\' but suddenly takes a louder deeper voice and frenetically repeats \'DAPHNE DAPHNE DAPHNE...\'." ;
      }
      : else_if (is_present "rud_sad") {
        : print "RuD sings Cosmoose's hit \'Release Me\': \'If we'll make it outta here, I'll need a vacation \'" ;
        : print "He takes a sip of energy drink." ;
      }
      : else_if (is_present "rud_happy") {
        : print "RuD sings Cosmoose's hit \'I wanna conquer youuuuu yeah!\'. Who knew he had such golden pipes?" ;
        : print "He takes a sip of energy drink." ;
      }
      : else_if (is_present "wool") {
        : print "Wool sings \'Time to clap your hands, clap your hands and GO!\'. Who knew he liked such mainstream music?" ;
      }
      : else_if (is_present "florrie") {
        : print "Florrie sings \'So crispy, so happy, all the other wings now seem so mushy!\'. She must have been to the chicken tree not long ago." ;
      }
      : else_if (is_present "june" && is_present "ee") {
        : print "June and E sing OK Feather's hit \'Coocoo Cafe\'. You can listen to this song at the end of the game <Feathery Christmas>[https://okfeather.itch.io/feathery-christmas]." ;
      }
      : else_if (is_puzzle_florrie_solved) {
        : print "All the people in the room begin singing \'생일 축하합니다 지구에서 우주에서 제일 사랑합니다\'." ;
      }
      : else {
         : print "You start singing your favourite viral song, \"Cosmoose Gang\".";
      }
   }

   : match "x fresh; x air; x smell; get fresh; get air; x smell; smell _"  {
      : if (is_at "cc_room") {
         : print "Let's <EXIT<#fdd>> and get some fresh air.";
      }
      : else_if (is_at "party_planet_inside") {
         : print "The mixed smell of spilled energy drinks and crisps really makes me want to cook a proper meal.";
      }
      : else {
         : print "It's nice to get some fresh air.";
      }
   }

   : match "talk korean ; talk -"  {
    : if (is_at "living_room" && is_exists "june") {
        : print "June sings the song she wrote: \'빨리 빨리 빨리 time to start\'" ;
    }
    : else_if (is_at "living_room" && is_exists "ee") {
        : print "E sings the song June wrote: \'빨리 빨리 빨리 time to start\'" ;
    }
   }

   : match "talk june"  {
      : if (is_at "living_room" && is_exists "june" && !is_puzzle_ee_solved && !talked_to_june) {
          : set_false "is_seven_seas_crispy" ;
          : set_false "is_wool_wheeled" ;
          : destroy "seven_seas" ;
          : destroy "wool" ;
          : print "June says: \'Hey CC! Wanna see my Pigeoshop software? It transforms any face or body into a realistic pigeon!" ;
          : print "Florrie uses it all the time. Well... Might be because I hacked her laptop, but her password is so easy to remember! \'" ;
          : print "OK... That explains Florrie's pigeon browsing history. What does June have to say about the mirror's prediction?" ;
          : press_any_key ;
          : print "She replies: \'Does the mirror always tell the whole truth? Well, no machine can tell the whole truth! " ;
          : print "Imagine a mirror giving all the answers! Then the world would be forever at peace, which is definitely NOT happening now hahaha. " ;
          : print "However, what I know for sure is MY TRUTH!" ;
          : print "In my world, pigeons will always be number 1!\'" ;
            # : redescribe ;
          : press_any_key ;
          : print "You start feeling hungry. Also it's your birthday and no one said anything. Why is the world so unfair?" ;
          : print "Where is your cake??? Let's <ASK<#fdd>> June." ;
          : set_true "talked_to_june" ;
      }
      : else_if ((is_present "june" || is_present "june_kitchen") && is_florrie_in_living_room_with_cake) {
         : print "June sings: \'꽃보다 더 곱게 별보다 더 밝게 사자보다 용감하게";
         : print "Happy birthday to you 깃털 같은 내 친구야 만수무강 하시라~~~~~~!!!!";
         : print "Brighter than flowers, brighter than stars, braver than lions" ;
         : print "Happy birthday to you, my feather-like friend, you shall live forever!!!!\'" ;
         : print "Beautiful. This version of the song is your favorite." ;
      }
   }

   : match "talk e"  {
        : if (is_at "living_room" && is_exists "ee" && !is_puzzle_ee_solved) {
              : set_false "is_seven_seas_crispy" ;
              : set_false "is_wool_wheeled" ;
              : destroy "seven_seas" ;
              : destroy "wool" ;
              : print "E says: \'Want to know the secret of my viral videos?" ;
              : print "I am passionate about what I do. Everyday, fans send me coupons to try new pizzas, and I document my journey eating pizzas. " ;
              : print "Sometimes I receive 50, even 100 coupons the same day, but I am committed to using every fresh daily coupon. I think my dedication is what brings happiness to my fans." ;
              : print "One fan gifted me this gold necklace, I will always cherish it." ;
              : press_any_key ;
              : print "It's still a real job though, you don't just do this for yourself. One subscriber called RuDenergy paid a hefty amount to see a comparison review of different energy drinks." ;
              : print "How to describe these beverages... My disappointment was immeasurable and my day was ruined. But your fans are always more important, and it was good money.\'" ;
              : set_true "talked_to_e" ;
        }
        : if (is_at "living_room" && is_exists "ee" && is_puzzle_ee_solved) {
            : print "After you carefully followed SevenSeas' instruction, E collapses on the floor..." ;
            : print "..." ;
            : press_any_key ;
            : print "Suddenly, he hysterically jumps at you!!! \'Hohoho I bet that scared you!!! But I swear I wasn't faking the first time!\'" ;
            : print "What an unfunny guy. How can he be so popular, young punks these days have no taste." ;
            : print "June is also crying with laughter, while filming. She says \'This video will be viral HeroCC, great job!\'" ;
            : press_any_key ;
            : create "florrie" ;
            : print "Oh, Florrie is back!!!" ;
            : print "Why don't you <TALK<#fdd>> to her?" ;
            : set_true "is_florrie_in_living_room" ;
            : set_false "is_june_in_living_room" ;
            : set_false "is_e_in_living_room" ;
            : destroy "june" ;
            : destroy "ee" ;
            : redescribe ;
        }
        : else_if ((is_present "ee" || is_present "ee_kitchen") && is_florrie_in_living_room_with_cake) {
         : print "E says: \'This cake is rather small." ;
         : print "For my birthday my subscribers sent me 77 cakes. ";
         : print "I also received flour, milk and sugar to prepare for food shortage.\'" ;
         : print "Okaaaaay... Don't meet your idols, they say. " ;
      }
   }


   : match "examine necklace"  {
      : if (is_exists "ee") {
        : print "<E<#fdd>> always wears this bling gold necklace. Its symbol means wealth, and refers to the authorities supervising credit institutions and the stability of the financial system." ;
      }
   }

   : match "ask cake ; ask june ; ask -"  {
       : if (is_at "living_room" && is_exists "june" && is_exists "ee" && !is_puzzle_ee_solved && talked_to_june && talked_to_e) {
            : print "E notices your distress and starts laughing." ;
            : print "He says: \'Hehehe, I was secretly filming you, now I know what my next viral video will be!" ;
            : print "The Cosmooverse's most notorious CRYBABY! Cry CC Cry!\'" ;
            : press_any_key ;
            : print "You are mortified. You don't want to be that kind of celebrity." ;
            : print "June gives you a small plastic thing:" ;
            : print "\'This is a magic <beak<#fee>>, it transforms you into a superhero called HeroCC.\'" ;
            : print "As fishy as it sounds, you try it on and..." ;
            : goto "cc_hero_june" ;
            : redescribe ;
       }
   }

   : match "examine beak; examine herocc; examine hero; talk june; thank june; beak -; talk -"  {
      : if (is_at "cc_hero_june") {
        : print "This thing looks like a Belgian cuberdon, those raspberry gummy candies." ;
        : print "Wow! You feel lighter and different." ;
        : print "You hear a strangled noise." ;
        : print "E, who was eating popcorn, is starting to choke!!!!!" ;
        : press_any_key ;
        : print "June asks: \'E are you choking??? Make an OK sign!!\'" ;
        : print "You know well that pigeons don't make OK signs... And remember SevenSeas' wise advice." ;
        : print "TODO puzzle number 5" ;
        : set_true "is_puzzle_ee_solved" ;
        : goto "living_room" ;
      }
   }
   : match "transform -; transform _" {
      : print "You wish you could transform yourself into the most famous idol. But life is hard.";
   }
   : match "cry -; cry _" {
      : print "Today is your birthday CC. Which means you are all grown up, and grown-ups don't cry unless they accidentally reboot their computer and lose unsaved files.";
   }

   : match "talk florrie ; talk -"  {
      : if (is_exists "florrie" && is_at "living_room" && !is_puzzle_florrie_solved ) {
        : print "Florrie warmly greets you and listens to your accomplishments." ;
        : print "She says: \' So now you are a hero and a puzzle master? Wonderful!!!" ;
        : print "Speaking of puzzles, I officially passed my Pyghon exam! But I almost failed because I couldn't remember my password..." ;
        : print "Also, there was this question to quickly solve! Can you try it CC? Here it is:\'" ;
        : press_any_key ;
        : set_true "is_puzzle_florrie_now" ;
        : print "The following sentence:" ;
        : print "\'Few radios play June's song.\'" ;
        : print "translates to (thanks to a mysterious mathematical formula):" ;
        : print "19-14-257" ;
        : print "157-4-10-40-109-175" ;
        : print "124-70-4-304" ;
        : print "49-214-95-14'175" ;
        : print "175-109-95-25" ;
        : press_any_key ;
        : print "Can you guess the original sentence behind the following:" ;
        : print "109-124-14-95" ;
        : print "175-109-214-157-7-14" ;
        : print "95-109-257" ;
        : print "<TYPE<#fdd>> THEFULLANSWER (without spaces)." ;
      }
      : else_if (is_exists "florrie" && is_at "living_room" && is_puzzle_florrie_solved ) {
        : print "Florrie smiles. She must be hungry too." ;
      }
      : else_if (is_present "florrie"  && is_florrie_in_living_room_with_cake) {
             : print "Florrie sings: \'Happy birthday CC!";
             : print "Try this cake we made with plenty of";
             : print "C6H1206 made with love\'" ;
             : print "Hmm... What is she talking about?" ;
      }
   }

   : match "type opensourcenow ; opensourcenow -; guess opensourcenow ; write opensourcenow"  {
        : if (is_exists "florrie" && is_at "living_room" && is_puzzle_florrie_now ) {
            : print "Awesome!!! What could this mean though?" ;
            : set_false "is_puzzle_florrie_now" ;
            : set_true "is_puzzle_florrie_solved" ;
            : set_true "is_florrie_in_living_room_with_cake";
            : create "wool_kitchen" ;
            : create "sevenseas_kitchen" ;
            : create "rud_kitchen" ;
            : create "june_kitchen" ;
            : create "ee_kitchen" ;
            : print "Florrie adds: \'It's your birthday CC!!! Let's eat your cake!" ;
            : print "Everybody is here, we're going to the kitchen! Let's <GO<#fdd>> there!" ;
            : press_any_key ;
            : set_true "you_win" ;
            : redescribe ;
        }
   }

   : match "examine cake; examine flame; examine candle; examine birthday" {
    : if (is_florrie_in_living_room_with_cake) {
        : print "Today it's your one-year birthday. You can't wait to eat cake!" ;
    }
    : else {
        : print "You think of the famous song about the delicious and moist cake." ;
    }
   }

   : match "eat cake" {
    : if (is_florrie_in_living_room_with_cake) {
        : print "We're going to eat cake with everybody!" ;
    }
    : else {
        : print "You think of the famous song about the delicious and moist cake." ;
    }
   }

   : match "eat chicken" {
    : if (is_at "crispy_garden") {
        : print "You take a chicken fruit from the tree. It's delicious, full of vitamins and grown without pesticides." ;
    }
    : else {
        : print "The Crispy Yard has some crispy chicken on the trees." ;
    }
   }

   : match "go kitchen ; go - ; kitchen -" {
    : if (you_win) {
        : goto "cc_win" ;
    }
    : else {
        : print "\'If you don't know where you're going, you're probably going wrong\' - Terry Pratchett" ;
    }
   }

   : match "examine yourself; talk yourself"  {
      : if (is_hero_cc) {
        : print "You are so cute, whether it's as CC or HeroCC." ;
      }
      : else {
        : print "You are so cute. If only you could be everywhere at once so the world could see your cuteness. This is why your goal is to become a superstar." ;
      }
   }

   : match "help -" {
       : print "- Type '<I<#fdd>>' to see what you are holding";
       : print "- Type '<GET<#fdd>> <objectname<#fee>>' to pick up an item";
       : print "- Type '<GIVE<#fdd>> <objectname<#fee>>' to give an object to someone";
       : print "- Type '<X<#fdd>>' or '<X<#fdd>> <objectname<#fee>>' to examine clues";
       : if (is_carried "map") {
         : print "- Type '<MAP<#fdd>>' to display map (<current location<#afa>>, <accessible<#aaf>>, <inaccessible<#faa>>)";
       }
       : print "- Type <N<#fdd>>, <S<#fdd>>, <E<#fdd>>, <W<#fdd>>, <UP<#fdd>>, <DOWN<#fdd>>, <ENTER<#fdd>>, <EXIT<#fdd>> to move";
       : print "- Type '<LOAD<#fdd>>' or  '<SAVE<#fdd>>' to load or save a game";
       : print "- Type '<QUIT<#fdd>>' to restart a game";
       : if (is_at "puzzle_florrie_laptop") {
        : print "The screen displays:" ;
        : print "Password = answer to this riddle: " ;
        : print "\'My feathers take me anywhere. Everywhere I go there are admirers of my shiny iridescent neck. The tones of grey in my plumage are reminiscent of everyone's favorite weather. " ;
        : print "Who am I? UNLOCK me!\' " ;
      }
      : else_if (is_at "puzzle_hat") {
        : print "An albatross, a bald eagle and a chicken each wear a hat. They see the colors of the others’ hats but not their own. " ;
        : print "Their hats were randomly drawn among 5 hats, 3 RED ones and 2 BLUE ones. " ;
        : print "The albatross is asked to guess its hat color, but responds \'No idea\'. The bald eagle cannot guess its color either." ;
        : print "Then the chicken says \'I know my color\'. Which one is it? Type GUESS color." ;
      }
      : else_if (is_present "rud_sad" && is_at "party_planet_inside") {
         : print "RuD says: \'I have 1 hour left to gain 1444 points, and I can only play 1 mini-game: " ;
         : print "- Firstly there's AKAFeather, a cursive writing game. You can earn 80 points per minute, but it stops working after 15 minutes, and you need to wait 43 minutes to start again." ;
         : print "- Secondly there's Brooms, a cleaning game. You can earn 26 points per minute, but it stops working after 54 minutes, and you need to wait 5 minutes to start again." ;
         : print "- Thirdly there's Cosmoogang, a space cow farming game. You can earn 97 points per minute, but it stops working after 10 minutes, and you need to wait 20 minutes to start again." ;
         : print "Can you <GUESS<#fee>> which game I should focus on?\'. " ;
         : print "He takes a sip of energy drink." ;
       }
       : else_if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
             : print "\'The four current most popular online hosts are:" ;
             : print "\'beats to mow the lawn to\', a music DJ" ;
             : print "\'C-Cherries\', introducing movie trailers" ;
             : print "\'DewDieDie\', a video game expert" ;
             : print "\'8k-Minute Recipes\', a cooking enthusiast." ;
             : print "Let's call them B, C, D and E. 3 of them are equally popular, but there is only 1 number one!" ;
             : print "I'll give you a <HINT<#fee>> for the channel you want, can you then <GUESS<#fee>> who is the most popular?\'" ;
             : print "Ask SevenSeas \'<HINT<#fee>> channel\' whenever you are ready." ;
             : print "If you know the answer, \'<GUESS<#fee>> channel\' whenever you are ready." ;
       }
       : else_if (is_at "living_room" && is_exists "florrie" && is_puzzle_florrie_now) {
        : print "The following sentence:" ;
        : print "\'Few radios play June's song.\'" ;
        : print "translates to (thanks to a mysterious mathematical formula):" ;
        : print "19-14-257" ;
        : print "157-4-10-40-109-175" ;
        : print "124-70-4-304" ;
        : print "49-214-95-14'175" ;
        : print "175-109-95-25" ;
        : press_any_key ;
        : print "Can you guess the original sentence behind the following:" ;
        : print "109-124-14-95" ;
        : print "175-109-214-157-7-14" ;
        : print "95-109-257" ;
        : print "<TYPE<#fdd>> THEFULLANSWER (without spaces)." ;
        }
        : else_if (is_at "living_room" && is_exists "june" && is_exists "ee" ) {
            : print "Make sure you talk to both June and E." ;
        }
        : else_if (is_at "cc_hero_june") {
            : print "What's going on with this <beak<#fee>>?" ;
        }
        : else_if (you_win) {
            : print "Everybody is going to the kitchen! Let's <GO<#fdd>> there!" ;
        }


   }

   : match "examine - ; examine room"  {
      : if (is_at "cc_room") {
         : print "This room is so cute, just like me. Lots of toys: a bull, a plushie, a boat... And a small window on the surrounding skies." ;
      }
      : if (is_at "crispy_garden") {
         : print "It's quite warm in here." ;
      }
      : if (is_at "puzzle_florrie_laptop") {
         : print "Florrie's laptop screen shows the <Cosmoose<#fee>> logo and a mysterious <penguin<#fee>>." ;
      }
      : if (is_at "living_room") {
         : print "This room has everything, from nature to technology, and what a nice view on the neighboring planets." ;
      }
      : if (is_at "living_room" && you_win) {
         : print "Whenever you are ready, you can <GO<#fee>> and eat cake." ;
      }
      : if (is_at "party_planet") {
         : print "It may look gloomy from the outside, but some people spend their nights and day inside." ;
      }
      : if (is_at "party_planet_inside") {
         : print "RuD is almost always here. He moved his guitar and all the stuff from his own bedroom (which looks like an empty garage now) to this common gaming room." ;
         : print "He takes a sip of energy drink." ;
      }
      : if (is_at "wools_wheels") {
         : print "Wool will repair any gear you bring, mostly with the power of his brain. He is always surrounded by lots of tools." ;
      }
      : if (is_at "puzzle_hat") {
         : print "You've never seen Wool so excited. He must love a good puzzle." ;
      }
      : if (is_at "cc_hero_june") {
            : print "What's going on with this <beak<#fee>>?" ;
        }
   }
   : match "nothing -" {
      : print "{nothing_message}";
      : set_string var="nothing_message" text="";
   }

   : match "exit -" {
      : if (!solved_wool_riddle) {
        : print "If you need help here, type <HELP<#fee>>." ;
        : print "You don't have many possible answers though, so you should be able to guess quickly." ;
      }
   }
}

######################################
#  Assets                     #
######################################

assets {
   sounds {
      music_beat_1 : sound_sample "https://cosmoosic.github.io/adventuron_april_2022/Music/Beat_1.mp3" ;
      music_beat_2 : sound_sample "https://cosmoosic.github.io/adventuron_april_2022/Music/Beat_2_ccs_room.mp3" ;
      music_wools_wheels : sound_sample "https://cosmoosic.github.io/adventuron_april_2022/Music/lofi2_wool.mp3" ;
      music_living_room : sound_sample "https://cosmoosic.github.io/adventuron_april_2022/Music/lofi3_livingroom.mp3" ;
      music_party_planet_inside : sound_sample "https://cosmoosic.github.io/adventuron_april_2022/Music/lofi4_partyplanet.mp3" ;
      music_party_planet_outside: sound_sample "https://cosmoosic.github.io/adventuron_april_2022/Music/lofi8_party_planet_outside.mp3" ;
      music_crispy_garden : sound_sample "https://cosmoosic.github.io/adventuron_april_2022/Music/lofi10_crispy.mp3" ;
      music_win : sound_sample "https://cosmoosic.github.io/adventuron_april_2022/Music/funprio.mp3" ;
   }
   graphics {
      cc_room : png "https://cosmoosic.github.io/adventuron_april_2022/Images/cc_room.png" ;
      crispy_garden : png "https://cosmoosic.github.io/adventuron_april_2022/Images/crispy_garden_no7Cs.png" {
        : if (is_seven_seas_crispy) {
               : overlay "crispy_garden_7Cs";
        }
        : if (is_puzzle_seven_seas_now) {
               : overlay "puzzle_channels";
        }
      } ;
      wools_wheels : png "https://cosmoosic.github.io/adventuron_april_2022/Images/wools_wheels.png" {
        : if (is_wool_wheeled) {
               : overlay "wool";
        }
      } ;
      party_planet : png "https://cosmoosic.github.io/adventuron_april_2022/Images/party_planet.png" ;
      party_planet_inside : png "https://cosmoosic.github.io/adventuron_april_2022/Images/rud.png" {
        : if (is_rud_sad) {
               : overlay "rudface";
               : if (is_puzzle_rud_in_progress) {
                : overlay "puzzle_rud";
               }
        }
        : if (is_puzzle_rud_in_progress) {
               : overlay "puzzle_rud";
        }
      } ;
      rudface : png "https://cosmoosic.github.io/adventuron_april_2022/Images/rudface.png" ;
      crispy_garden_7Cs : png "https://cosmoosic.github.io/adventuron_april_2022/Images/crispy_garden_7Cs.png" ;
      wool : png "https://cosmoosic.github.io/adventuron_april_2022/Images/wool.png" ;
      june : png "https://cosmoosic.github.io/adventuron_april_2022/Images/june.png" ;
      etana : png "https://cosmoosic.github.io/adventuron_april_2022/Images/etana.png" ;
      florrie : png "https://cosmoosic.github.io/adventuron_april_2022/Images/florrie.png" ;
      florrie_cake : png "https://cosmoosic.github.io/adventuron_april_2022/Images/florrie_cake.png" ;
      living_room : png "https://cosmoosic.github.io/adventuron_april_2022/Images/common_room.png" {
        : if (is_june_in_living_room) {
               : overlay "june";
               : if (is_e_in_living_room) {
                 : overlay "etana";
               }
        }
        : else_if (is_e_in_living_room) {
               : overlay "etana";
        }
        : else_if (is_florrie_in_living_room) {
               : overlay "florrie";
               : if (is_florrie_in_living_room_with_cake) {
                : overlay "florrie_cake";
               }
        }

        : else_if (is_everybody_here) {
               : overlay "everyone";
        }


      } ;
      everyone : png "https://cosmoosic.github.io/adventuron_april_2022/Images/everyone.png" ;
      loading_screen : png "https://cosmoosic.github.io/adventuron_april_2022/Images/loading.png" ;
      cc_hero_june : png "https://cosmoosic.github.io/adventuron_april_2022/Images/cc_hero.png" ;
      cc_win : png "https://cosmoosic.github.io/adventuron_april_2022/Images/feast.png" ;
      puzzle_florrie_laptop : png "https://cosmoosic.github.io/adventuron_april_2022/Images/laptop.png" ;
      puzzle_channels : png "https://cosmoosic.github.io/adventuron_april_2022/Images/puzzle_channels.png" ;
      puzzle_hat : png "https://cosmoosic.github.io/adventuron_april_2022/Images/puzzle_hat.png" ;
      puzzle_rud : png "https://cosmoosic.github.io/adventuron_april_2022/Images/puzzle_rud.png" ;
      puzzle_ship : png "https://cosmoosic.github.io/adventuron_april_2022/Images/puzzle_ship.png" ;
      puzzle_labyrinth : png "https://cosmoosic.github.io/adventuron_april_2022/Images/puzzle_labyrinth.png" ;
   }
}
