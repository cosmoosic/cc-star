######################################
#  Adventuron                        #
######################################

game_information {
   game_name                    = CC's Road to Stardom
   game_version                 = 1.0.0
   game_shortname               = CC Star
   written_by                   = OK Feather
   uuid                         = 910e5474-beef-11ec-9d64-0242ac120002
   year_of_release              = 2022
   short_synopsis               = Help 50% cat, 50% bunny, 100% cute CC become an online idol!
}

start_theme = theme_base

themes {
  theme_base : theme {
      colors {
         exit_list_item_pen = #fdd
      }
      lister_exits {
         is_list_enter = true
      }
      theme_settings {
         experimental_contextual_menus = true
         layout = H G LOCK D X O
         success_jingle  = on
         failure_jingle  = on
      }
  }
  theme_dovalingo : theme {
  
     colors {
         paper = #1b1a1f
         pen = #b6b5ba
         
        
     }
  
      theme_settings {
      
         font = userfont_dovalingo
         
      }
   }
}

######################################
#  Game Settings                     #
######################################

game_settings {
   auto_ask_sound_permissions = false
   enable_standard_all_behaviour = false
   precache_strategy = precache_all
   experimental_anim   = wait
   rewind_enabled   = true
   experimental_new_scroll = true
}


loading_screen = loading_screen
redescribe = auto_beta

start_at = dream
#cc_room


vocabulary {
   : verb / aliases = [examine, check, regarde, touch, look, see]
   : verb / aliases = [give, show]
   : verb / aliases = [undo, ctr]
   : verb / aliases = [up, upstair, upstairs]
   : verb / aliases = [down, downstair, downstairs]
   : verb / aliases = [talk, say, speak, tell, ask, wave, discuss, chat, t]
   : verb / aliases = [get, take, pocket, catch, pick]
   : verb / aliases = [comment, comments, note, notes]
   : verb / aliases = [exchange, exchanging]
   : verb / aliases = [exit, leave, outside, out, flee, escape, no, refuse]
   : verb / aliases = [enter, inside, in]
   : verb / aliases = [use, drink, eat, consume, swallow]
   : verb / aliases = [drop, throw, discard, vomit, puke]
   : verb / aliases = [ring,strike]
   : verb / aliases = [move, go]
   : verb / aliases = [pigeon, pigoen]
   : verb / aliases = [east, right]
   : verb / aliases = [west, left]
   : verb / aliases = [north, top]
   : verb / aliases = [south, bottom]
   : verb / aliases = [red]
   : verb / aliases = [cosmoogang]
   : verb / aliases = [opensourcenow]
   : verb / aliases = [guess, reply]
   : verb / aliases = [thank, thanks]
   : verb / aliases = [happy, merry, feliz, joyous, feathery, great, joyeux, enjoy, warmest, jolly, cheerful, 행복한, 메리, meli]
   : verb / aliases = [kill,threaten,menace,intimidate,browbeat,bully,scare,frighten,terrorize,murder,assassinate,beat,fight,combat,hurt,kick,harm,injure,insult,destroy,smash]
   : verb / aliases = ["cry", ":(","=(", "='(", ":'("]
   : verb / aliases = ["smile", "grin", "laugh", ":)","=)",":D","=D"]
   : verb / aliases = [unlock, password, pass, type, write, input, unlcok]
   : verb / aliases = [dovalingo, duolingo, davolingo, divalingo, dualingo]
   : noun      / aliases = [dovalingo, duolingo, davolingo, divalingo, dualingo]
   : noun      / aliases = [bread, croissant, pain, cookie, loaf, biscuit]
   : noun      / aliases = [cafe, coocoo, shop, restaurant]
   : noun      / aliases = [owner, vendor]
   : noun      / aliases = [pigeon, pigoen]
   : noun      / aliases = [red]
   : noun      / aliases = [cosmoogang]
   : noun      / aliases = [opensourcenow]
   : noun      / aliases = [child, children, kid]
   : noun      / aliases = [comment, note]
   : noun      / aliases = [bird, dove, birb]
   : noun      / aliases = [door, entrance]
   : noun      / aliases = [energydrink, energy, drink, beverage, redgull, can, potion, barrel, taurine, juice, clayrox, clorox]
   : noun      / aliases = [mirror, reflection]
   : noun      / aliases = [garden, park, yard, lawn, land, plot, greenhouse, orchard]
   : noun      / aliases = [stars, star]
   : noun      / aliases = [fight, combat, conflict]
   : noun      / aliases = [floor, ground, flooring]
   : noun      / aliases = [up, upstair, upstairs]
   : noun      / aliases = [laptop, computer]
   : noun      / aliases = [screen, display, monitor]
   : noun      / aliases = [porthole, window, view, sky, scenery, planet]
   : noun      / aliases = [snow, white, snowwhite]
   : noun      / aliases = [chicken, fruit, wing]
   : noun      / aliases = [banach, banachspherificator, spherificator, sphere]
   : noun      / aliases = [bull, cow, bouncy, bouncybull, bluecow]
   : noun      / aliases = [plush, plushie, stuffedanimal, animal, stuffed, lion, bear, teddy, teddybear, stuffie, plushtoy, stuffy, plushy]
   : noun      / aliases = [boat, ship, barge, gondola, yacht, sailboat, ark, bateau]
   : noun      / aliases = [python, pighon, pygeon, pyghon]
   : noun      / aliases = [puzzle, enigma, riddle, mystery, problem]
   : noun      / aliases = [guitar, music, bass, instrument]
   : noun      / aliases = [communicator, smartphone, phone, gsm]
   : noun      / aliases = [notification, notif]
   : noun      / aliases = [tool, machine, gadget, appliance, kirby, device, toolbox, furniture, gear, pyjeon]
   : noun      / aliases = [tree, pine, forest, plant]
   : noun      / aliases = [room, chamber, place, here]
   : noun      / aliases = [joystick, trackball, gamepad, joypad, trackpad, stick, controller, arcade]
   : noun      / aliases = [black, yellow, pink, white, colorless, rainbow, purple, green]
   : noun      / aliases = [seven, 7, 7C, 7Cs, sevenseas, robot, bot]
   : noun      / aliases = [necklace, chain, jewel, euro, gold]
   : noun      / aliases = [rud, ru, duri, dhxp, gamer, r]
   : noun      / aliases = [wool, woolion, mechanic, lion, w]
   : noun      / aliases = [june, inventor, jjyy, j]
   : noun      / aliases = [florrie, flora, f, florie]
   : noun      / aliases = [e, ee, etana]
   : noun      / aliases = [yourself, cc, myself, me, you]
}

######################################
#  Variables                         #
######################################

booleans {
   can_leave_crispy_garden : boolean "false";
   help_about_commands : boolean "false";
   is_sound_muted : boolean "true";
   music_ever_enabled : boolean "false";
   is_puzzle_wool_solved : boolean "false" ;
   is_puzzle_7c_solved : boolean "false" ;
   can_create_june_e : boolean "false";
   is_seven_seas_crispy : boolean "true";
   is_wool_wheeled : boolean "true";
   is_laptop_unlocked : boolean "false";
   is_rud_sad : boolean "true" ;
   is_hero_cc : boolean "false" ;
   is_everybody_here : boolean "false" ;
   is_june_in_living_room : boolean "false" ;
   is_e_in_living_room : boolean "false" ;
   is_florrie_alone_in_living_room : boolean "false" ;
   is_florrie_in_living_room_with_cake : boolean "false" ;
   is_puzzle_rud_in_progress : boolean "false" ;
   is_puzzle_seven_seas_now : boolean "false" ;
   is_puzzle_ee_solved : boolean "false" ;
   is_puzzle_florrie_now : boolean "false" ;
   is_puzzle_florrie_solved : boolean "false" ;
   has_florrie_drank : boolean "false" ;
   you_win : boolean "false" ;
   talked_to_june : boolean "false" ;
   talked_to_e : boolean "false" ;
   talked_to_rud : boolean "false" ;
   talked_to_mirror : boolean "false" ;
   talked_to_mirror_and_solved_puzzles : boolean "false" ;
   rud_sad_talked : dynamic_boolean {(
      talked_to_rud &&
      is_rud_sad
   )}
   has_blueprint : boolean "false";
   in_labyrinth : boolean "false";
   is_labyrinth_open : boolean "false";
   is_playing_logic  : boolean "false";
   talked_to_someone_before_cake : boolean "false";
   is_using_map : boolean "false";
   dream_look_map : boolean "true";
   seen_inventory_tuto : boolean "false";
   tuto_used_map : boolean "false";
   is_map_command : boolean "false";
   dream_cc_go_right : boolean "false";
   dream_cc_go_bottom : boolean "false";
   has_seen_laptop_puzzle : boolean "false";
   has_seen_wool_puzzle : boolean "false";
   has_seen_rud_puzzle : boolean "false";
   has_seen_7c_puzzle : boolean "false";
   boolean_tmp : boolean "false";
}

integers {
   sound_volume : integer "16" scope="survivor";
   pitch_random : integer "0";
   inventory_limit : integer "30" ;
   day_spend_labyrinth_enigma : integer "0";
   labyrinth_position_x : integer "0";
   labyrinth_position_y : integer "-13";
   choking_e_solution : integer "0";
   choking_e_form : integer "0";
   integer_tmp : integer "0";
   cc_x : integer "0";
   cc_y : integer "0";
   dream_cc_x : integer "0";
   dream_cc_y : integer "0";
   current_volume_index : integer "-1";
   tuto_directions : integer "0";
   dovalingo_lessons : integer "1" scope="survivor";
   dovalingo_score : integer "0";
   dovalingo_wordlist_size : dynamic_integer (
      dovalingo_lessons < 7 ? 21 :
      dovalingo_lessons < 14 ? 70 :
      dovalingo_lessons < 42 ? 210 :
      count "dovalingo_english");
   dova_word_index_to_find : integer "0";
}

collections {
   dovalingo_langs : list {
      items = ["english", "french", "german", "dutch", "korean", "chinese", "walloon"]
   }
   dovalingo_choices : list {
      items = [0, 0, 0, 0, 0, 0, 0, 0, 0];
   }
   dovalingo_wrong_choices : list {
      items = [];
   }

    dovalingo_english : list {
        items = ["Pigeon", "Time", "Way", "Year", "Work", "Government", "Day", "Man", "World", "Life", "Part", "House", "Course", "Case", "System", "Place", "End", "Group", "Company", "Party", "Information", "School", "Fact", "Money", "Point", "Example", "State", "Business", "Night", "Area", "Water", "Thing", "Family", "Head", "Hand", "Order", "Side", "Home", "Development", "Week", "Power", "Country", "Council", "Use", "Service", "Room", "Market", "Problem", "Court", "Lot", "A", "War", "Police", "Interest", "Car", "Law", "Road", "Form", "Face", "Education", "Policy", "Research", "Sort", "Office", "Body", "Person", "Health", "Mother", "Question", "Period", "Name", "Book", "Level", "Child", "Control", "Society", "Minister", "View", "Door", "Line", "Community", "South", "City", "God", "Father", "Centre", "Effect", "Staff", "Position", "Kind", "Job", "Woman", "Action", "Management", "Act", "Process", "North", "Age", "Evidence", "Idea", "West", "Support", "Moment", "Sense", "Report", "Mind", "Church", "Morning", "Death", "Change", "Industry", "Land", "Care", "Century", "Range", "Table", "Back", "Trade", "History", "Study", "Street", "Committee", "Rate", "Word", "Food", "Language", "Experience", "Result", "Team", "Other", "Sir", "Section", "Programme", "Air", "Authority", "Role", "Reason", "Price", "Town", "Class", "Nature", "Subject", "Department", "Union", "Bank", "Member", "Value", "Need", "East", "Practice", "Type", "Paper", "Date", "Decision", "Figure", "Right", "Wife", "President", "University", "Friend", "Club", "Quality", "Voice", "Lord", "Stage", "King", "Us", "Situation", "Light", "Tax", "Production", "March", "Secretary", "Art", "Board", "May", "Hospital", "Month", "Music", "Cost", "Field", "Award", "Issue", "Bed", "Project", "Chapter", "Girl", "Game", "Amount", "Basis", "Knowledge", "Approach", "Series", "Love", "Top", "News", "Front", "Future", "Manager", "Account", "Computer", "Security", "Rest", "Labour", "Structure", "Hair", "Bill", "Heart", "Force", "Attention", "Movement", "Success", "Letter", "Agreement", "Capital", "Analysis", "Population", "Environment", "Performance", "Model", "Material", "Theory", "Growth", "Fire", "Chance", "Boy", "Relationship", "Son", "Sea", "Record", "Size", "Property", "Space", "Term", "Director", "Plan", "Behaviour", "Treatment", "Energy", "Income", "Cup", "Scheme", "Design", "Response", "Association", "Choice", "Pressure", "Hall", "Couple", "Technology", "Defence", "List", "Chairman", "Loss", "Activity", "Contract", "County", "Wall", "Difference", "Army", "Hotel", "Sun", "Product", "Summer", "Set", "Village", "Colour", "Floor", "Season", "Unit", "Park", "Hour", "Investment", "Test", "Garden", "Husband", "Employment", "Style", "Science", "Look", "Deal", "Charge", "Help", "Economy", "New", "Page", "Risk", "Advice", "Event", "Picture", "Commission", "Fish", "College", "Oil", "Doctor", "Opportunity", "Film", "Conference", "Operation", "Application", "Press", "Extent", "Addition", "Station", "Window", "Shop", "Access", "Region", "Doubt", "Majority", "Degree", "Television", "Blood", "Statement", "Sound", "Election", "Parliament", "Site", "Mark", "Importance", "Title", "Species", "Increase", "Return", "Concern", "Public", "Competition", "Software", "Glass", "Lady", "Answer", "Earth", "Daughter", "Purpose", "Responsibility", "Leader", "River", "Eye", "Ability", "Appeal", "Opposition", "Campaign", "Respect", "Task", "Instance", "Sale", "Whole", "Officer", "Method", "Division", "Source", "Piece", "Pattern", "Lack", "Disease", "Equipment", "Surface", "Demand", "Post", "Mouth", "Radio", "Provision", "Attempt", "Sector", "Firm", "Status", "Peace", "Variety", "Teacher", "Show", "Speaker", "Baby", "Arm", "Base", "Miss", "Safety", "Trouble", "Culture", "Direction", "Context", "Character", "Box", "Discussion", "Past", "Weight", "Start", "Brother", "League", "Condition", "Machine", "Argument", "Sex", "Budget", "English", "Transport", "Share", "Mum", "Cash", "Principle", "Exchange", "Aid", "Library", "Version", "Rule", "Tea", "Balance", "Afternoon", "Reference", "Protection", "Truth", "District", "Turn", "Smith", "Review", "Minute", "Duty", "Survey", "Presence", "Influence", "Stone", "Dog", "Benefit", "Collection", "Executive", "Speech", "Function", "Queen", "Marriage", "Stock", "Failure", "Kitchen", "Student", "Effort", "Holiday", "Career", "Attack", "Length", "Horse", "Progress", "Plant", "Visit", "Relation", "Ball", "Memory", "Bar", "Opinion", "Quarter", "Impact", "Scale", "Race", "Image", "Trust", "Justice", "Edge", "Gas", "Railway", "Expression", "Advantage", "Gold", "Wood", "Network", "Text", "Forest", "Sister", "Chair", "Cause", "Foot", "Rise", "Half", "Winter", "Corner", "Insurance", "Step", "Damage", "Credit", "Pain", "Possibility", "Legislation", "Strength", "Speed", "Crime", "Hill", "Debate", "Will", "Supply", "Present", "Confidence", "Patient", "Wind", "Solution", "Band", "Museum", "Farm", "Pound", "Match", "Assessment", "Message", "Football", "No", "Animal", "Skin", "Scene", "Article", "Stuff", "Introduction", "Play", "Administration", "Fear", "Dad", "Proportion", "Island", "Contact", "Japan", "Claim", "Kingdom", "Video", "Tv", "Existence", "Telephone", "Move", "Traffic", "Distance", "Relief", "Cabinet", "Unemployment", "Reality", "Target", "Trial", "Rock", "Concept", "Spirit", "Accident", "Organization", "Construction", "Coffee", "Phone", "Distribution", "Train", "Sight", "Difficulty", "Factor", "Exercise", "Weekend", "Battle", "Prison", "Grant", "Aircraft", "Tree", "Bridge", "Strategy", "Contrast", "Communication", "Background", "Shape", "Wine", "Star", "Hope", "Selection", "Detail", "User", "Path", "Client", "Search", "Master", "Rain", "Offer", "Goal", "Dinner", "Freedom", "Attitude", "While", "Agency", "Seat", "Manner", "Favour", "Pair", "Crisis", "Smile", "Prince", "Danger", "Call", "Capacity", "Output", "Note", "Procedure", "Theatre", "Tour", "Recognition", "Middle", "Absence", "Sentence", "Package", "Track", "Card", "Sign", "Commitment", "Player", "Threat", "Weather", "Element", "Conflict", "Notice", "Victory", "Bottom", "Finance", "Fund", "Violence", "File", "Profit", "Standard", "Jack", "Route", "China", "Expenditure", "Second", "Discipline", "Cell", "Reaction", "Castle", "Congress", "Individual", "Lead", "Consideration", "Debt", "Option", "Payment", "Exhibition", "Reform", "Emphasis", "Spring", "Audience", "Feature", "Touch", "Estate", "Assembly", "Volume", "Youth", "Contribution", "Curriculum", "Appearance", "Martin", "Boat", "Institute", "Membership", "Branch", "Bus", "Waste", "Heat", "Neck", "Object", "Captain", "Driver", "Challenge", "Conversation", "Occasion", "Code", "Crown", "Birth", "Silence", "Literature", "Faith", "Hell", "Entry", "Transfer", "Gentleman", "Bag", "Coal", "Investigation", "Leg", "Belief", "Total", "Major", "Document", "Description", "Murder", "Aim", "Flight", "Conclusion", "Drug", "Tradition", "Pleasure", "Connection", "Owner", "Treaty", "Desire", "Professor", "Copy", "Ministry", "Acid", "Palace", "Address", "Institution", "Lunch", "Generation", "Partner", "Engine", "Newspaper", "Cross", "Reduction", "Welfare"]
    }

    dovalingo_french : list {
        items = ["Pigeon", "Temps", "Chemin", "An", "Travail", "Gouvernement", "Journée", "Homme", "Monde", "Vie", "Partie", "Maison", "Cours", "Cas", "Système", "Lieu", "Finir", "Grouper", "Société", "Faire la fête", "Information", "École", "Fait", "L'argent", "Point", "Exemple", "Etat", "Affaires", "Nuit", "Région", "Eau", "Chose", "Famille", "Tête", "Main", "Commande", "Côté", "Domicile", "Développement", "Semaine", "Puissance", "Pays", "Conseil", "Utiliser", "Service", "Salle", "Marché", "Problème", "Tribunal", "Terrain", "Un", "Guerre", "Police", "Intérêt", "Auto", "Droit", "Route", "Formulaire", "Visage", "Éducation", "Politique", "Rechercher", "Trier", "Bureau", "Corps", "Personne", "Santé", "Mère", "Question", "Période", "Nom", "Livre", "Niveau", "Enfant", "Contrôler", "Société", "Ministre", "Vue", "Porte", "Ligne", "Communauté", "Sud", "Ville", "Dieu", "Père", "Centre", "Effet", "Personnel", "Position", "Type", "Travail", "Femme", "Action", "Management", "Agir", "Processus", "Nord", "Âge", "Preuve", "Idée", "Ouest", "Support", "Moment", "Sens", "Rapport", "Écouter", "Église", "Matin", "Mort", "Monnaie", "Industrie", "Terre", "Se soucier", "Siècle", "Portée", "Table", "Arrière", "Commerce", "Histoire", "Étude", "Rue", "Comité", "Taux", "Mot", "Aliments", "Langue", "Vivre", "Résultat", "Équipe", "Autre", "Monsieur", "Section", "Programme", "Air", "Autorité", "Rôle", "Raison", "Prix", "Ville", "Classe", "Nature", "Matière", "Département", "Syndicat", "Banque", "Membre", "Valeur", "Avoir besoin", "Est", "Entrainement", "Type", "Papier", "Date", "Décision", "Chiffre", "À droite", "Épouse", "Président", "Université", "Ami", "Club", "Qualité", "Voix", "Seigneur", "Organiser", "Roi", "Nous", "Situation", "Léger", "Impôt", "Production", "Mars", "Secrétaire", "Art", "Planche", "Mai", "Hôpital", "Mois", "Musique", "Coût", "Domaine", "Décerner", "Publier", "Lit", "Projet", "Chapitre", "Fille", "Jeu", "Montant", "Base", "Connaissance", "Approcher", "Séries", "Amour", "Haut", "Nouvelles", "Face", "Futur", "Gestionnaire", "Compte", "Ordinateur", "Sécurité", "Repos", "Travail", "Structure", "Cheveu", "Facture", "Cœur", "Obliger", "Attention", "Mouvement", "Succès", "Lettre", "Accord", "Capitale", "Analyse", "Population", "Environnement", "Performance", "Maquette", "Matériel", "Théorie", "Croissance", "Feu", "Chance", "Garçon", "Relation amoureuse", "Fils", "Mer", "Record", "Taille", "Biens", "Espace", "Terme", "Réalisateur", "Plan", "Comportement", "Traitement", "Énergie", "Revenu", "Coupe", "Schème", "Motif", "Réponse", "Association", "Choix", "Pression", "Entrée", "Couple", "Technologie", "Défense", "Liste", "Président", "Perte", "Activité", "Contrat", "Comté", "Mur", "Différence", "Armée", "Hôtel", "Soleil", "Produit", "Été", "Positionner", "Village", "Couleur", "Étage", "Saison", "Unité", "Parc", "Heure", "Investissement", "Test", "Jardin", "Mari", "Emploi", "Style", "Science", "Regarder", "Accord", "Charger", "Aider", "Économie", "Nouveau", "Page", "Risque", "Conseils", "Événement", "Image", "Commission", "Poisson", "Université", "Huile", "Médecin", "Occasion", "Film", "Conférence", "Opération", "Application", "Presse", "Étendue", "Addition", "Station", "Fenêtre", "Magasin", "Accéder", "Région", "Doute", "Majorité", "Diplôme", "Télévision", "Sang", "Déclaration", "Son", "Élection", "Parlement", "Site", "Marque", "Importance", "Titre", "Espèces", "Augmenter", "Retourner", "Préoccuper", "Publique", "Concours", "Logiciel", "Verre", "Demoiselle", "Répondre", "Terre", "Fille", "But", "Responsabilité", "Dirigeant", "Fleuve", "Œil", "Capacité", "Faire appel", "Opposition", "Campagne", "Respect", "Tâche", "Exemple", "Vendre", "Entier", "Officier", "Méthode", "Division", "Source", "Pièce", "Modèle", "Manquer de", "Maladie", "Équipement", "Surface", "Demande", "Publier", "Bouche", "Radio", "Disposition", "Tenter", "Secteur", "Solidifier", "Statut", "Paix", "Variété", "Prof", "Afficher", "Conférencier", "Bébé", "Bras", "Base", "Mademoiselle", "Sécurité", "Difficulté", "Culture", "Direction", "Contexte", "Personnage", "Boîte", "Discussion", "Passé", "Masse", "Démarrer", "Frère", "Ligue", "État", "Machine", "Argument", "Sexe", "Budget", "Anglais", "Transport", "Partager", "Maman", "Espèces", "Principe", "Échanger", "Aide", "Bibliothèque", "Version", "Règle", "Thé", "Solde", "Après-midi", "Référence", "Protection", "Vérité", "District", "Tourner", "Forgeron", "Revue", "Minute", "Devoir", "Sondage", "Présence", "Influence", "Calcul", "Chien", "Avantage", "Recueil", "Exécutif", "Discours", "Fonction", "Reine", "Mariage", "Stock", "Échec", "Cuisine", "Élève", "Effort", "Vacance", "Carrière", "Attaque", "Longueur", "Cheval", "Progrès", "Plante", "Visiter", "Relation", "Balle", "Mémoire", "Bar", "Opinion", "Trimestre", "Impacter", "Échelle", "Course", "Image", "Confiance", "Justice", "Bord", "Gaz", "Chemin de fer", "Expression", "Avantage", "Or", "Bois", "Réseau", "Texte", "Forêt", "Sœur", "Chaise", "Cause", "Pied", "Monter", "Moitié", "Hiver", "Coin", "Assurance", "Étape", "Dégâts", "Crédit", "Douleur", "Possibilité", "Législation", "Force", "Vitesse", "Criminalité", "Colline", "Débat", "Sera", "Fourniture", "Cadeau", "Confiance", "Patient", "Vent", "Solution", "Bande", "Musée", "Ferme", "Broyer", "Correspondre", "Évaluation", "Message", "Football", "Non", "Animal", "Peau", "Scène", "Article", "Truc", "Introduction", "Joue", "Administration", "Crainte", "Père", "Proportion", "Île", "Contactez", "Japon", "Réclamation", "Royaume", "Vidéo", "Télé", "Existence", "Téléphone", "Mouvement", "Circulation", "Distance", "Soulagement", "Cabinet", "Chômage", "Réalité", "Cibler", "Essai", "Rocher", "Concept", "Esprit", "Accident", "Organisme", "Construction", "Café", "Téléphoner", "Distribution", "Train", "Vue", "Difficulté", "Facteur", "Exercer", "Week-end", "Bataille", "Prison", "Accorder", "Avion", "Arbre", "Pont", "Stratégie", "Contraste", "Communication", "Contexte", "Façonner", "Vin", "Étoile", "Espoir", "Sélection", "Détail", "Utilisateur", "Chemin", "Client", "Chercher", "Maître", "Pluie", "Offre", "But", "Dîner", "Liberté", "Attitude", "Pendant que", "Agence", "Siège", "Manière", "Favoriser", "Paire", "Crise", "Sourire", "Prince", "Danger", "Appel", "Capacité", "Production", "Remarque", "Procédure", "Théâtre", "Visiter", "Reconnaissance", "Milieu", "Absence", "Phrase", "Emballer", "Piste", "Carte", "Signe", "Engagement", "Joueur", "Menace", "Météo", "Élément", "Conflit", "Avis", "Victoire", "Bas", "Finance", "Fonds", "Violence", "Dossier", "Profit", "Norme", "Jack", "Itinéraire", "Chine", "Dépense", "Seconde", "Discipline", "Cellule", "Réaction", "Château", "Congrès", "Individuel", "Mener", "Considération", "Dette", "Option", "Paiement", "Exposition", "Réforme", "Accent", "Printemps", "Spectateurs", "Fonctionnalité", "Touche", "Domaine", "Assemblée", "Volume", "Jeunesse", "Contribution", "Programme d'études", "Apparence", "Martin", "Bateau", "Institut", "Adhésion", "Succursale", "Autobus", "Gaspillage", "Chauffer", "Cou", "Objet", "Capitaine", "Conducteur", "Défi", "Conversation", "Occasion", "Code", "Couronne", "Naissance", "Silence", "Littérature", "Foi", "Enfer", "Entrée", "Transférer", "Gentilhomme", "Sac", "Charbon", "Enquête", "Jambe", "Croyance", "Total", "Majeur", "Document", "Description", "Meurtre", "Objectif", "Vol", "Conclusion", "Médicament", "Tradition", "Plaisir", "Lien", "Propriétaire", "Traité", "Désir", "Professeur", "Copie", "Ministère", "Acide", "Palais", "Adresse", "Institution", "Déjeuner", "Génération", "Partenaire", "Moteur", "Journal", "Croix", "Réduction", "Bien-être"]
    }

    dovalingo_german : list {
        items = ["Taube", "Zeit", "Weg", "Jahr", "Arbeit", "Regierung", "Tag", "Mann", "Welt", "Leben", "Teil", "Haus", "Kurs", "Fall", "System", "Ort", "Ende", "Gruppe", "Unternehmen", "Party", "Information", "Schule", "Tatsache", "Geld", "Punkt", "Beispiel", "Zustand", "Geschäft", "Nacht", "Bereich", "Wasser", "Sache", "Familie", "Kopf", "Hand", "Befehl", "Seite", "Heimat", "Entwicklung", "Woche", "Energie", "Land", "Rat", "Benutzen", "Service", "Zimmer", "Markt", "Problem", "Gericht", "Viel", "Ein", "Krieg", "Polizei", "Interesse", "Wagen", "Gesetz", "Straße", "Form", "Gesicht", "Bildung", "Politik", "Forschung", "Sortieren", "Sekretariat", "Karosserie", "Person", "Gesundheit", "Mutter", "Frage", "Zeitraum", "Name", "Buchen", "Stufe", "Kind", "Steuerung", "Gesellschaft", "Minister", "Aussicht", "Tür", "Linie", "Gemeinschaft", "Süden", "Stadt", "Gott", "Vater", "Center", "Wirkung", "Mitarbeiter", "Position", "Nett", "Arbeit", "Frau", "Handlung", "Management", "Handlung", "Prozess", "Norden", "Alter", "Beweis", "Idee", "Westen", "Unterstützung", "Moment", "Sinn", "Prüfbericht", "Geist", "Kirche", "Morgen", "Tod", "Veränderung", "Industrie", "Land", "Pflege", "Jahrhundert", "Angebot", "Tisch", "Zurück", "Handeln", "Geschichte", "Lernen", "Straße", "Komitee", "Bewertung", "Wort", "Lebensmittel", "Sprache", "Erfahrung", "Ergebnis", "Team", "Sonstiges", "Herr", "Sektion", "Programm", "Luft", "Behörde", "Rolle", "Grund", "Preis", "Stadt, dorf", "Klasse", "Natur", "Gegenstand", "Abteilung", "Union", "Bank", "Mitglied", "Wert", "Brauchen", "Ost", "Trainieren", "Typ", "Papier", "Datum", "Entscheidung", "Zahl", "Rechts", "Ehefrau", "Präsident", "Universität", "Freund", "Verein", "Qualität", "Stimme", "Herr", "Bühne", "König", "Uns", "Lage", "Hell", "Mwst", "Produktion", "März", "Sekretär", "Kunst", "Planke", "Kann", "Krankenhaus", "Monat", "Musik", "Kosten", "Feld", "Vergeben", "Ausgabe", "Bett", "Projekt", "Kapitel", "Mädchen", "Spiel", "Menge", "Basis", "Wissen", "Sich nähern", "Serie", "Liebe", "Oben", "Nachrichten", "Vorderseite", "Zukunft", "Manager", "Konto", "Computer", "Sicherheit", "Sich ausruhen", "Arbeit", "Struktur", "Haar", "Rechnung", "Herz", "Gewalt", "Beachtung", "Bewegung", "Erfolg", "Buchstabe", "Zustimmung", "Hauptstadt", "Analyse", "Population", "Umgebung", "Leistung", "Modell", "Material", "Theorie", "Wachstum", "Feuer", "Chance", "Junge", "Verhältnis", "Sohn", "Meer", "Aufzeichnung", "Größe", "Eigentum", "Platz", "Begriff", "Direktor", "Planen", "Verhalten", "Behandlung", "Energie", "Einkommen", "Tasse", "Planen", "Design", "Antwort", "Verband", "Auswahl", "Druck", "Halle", "Paar", "Technologie", "Verteidigung", "Aufführen", "Vorsitzende", "Verlust", "Aktivität", "Vertrag", "Bezirk", "Wand", "Unterschied", "Armee", "Hotel", "Sonne", "Produkt", "Sommer", "Einstellen", "Dorf", "Farbe", "Boden", "Jahreszeit", "Einheit", "Park", "Stunde", "Anlage", "Prüfung", "Garten", "Ehemann", "Anstellung", "Stil", "Wissenschaft", "Suchen", "Handeln", "Aufladen", "Hilfe", "Wirtschaft", "Neu", "Seite", "Risiko", "Rat", "Veranstaltung", "Bild", "Kommission", "Fisch", "Uni", "Öl", "Arzt", "Gelegenheit", "Film", "Konferenz", "Betrieb", "Anwendung", "Drücken sie", "Ausmaß", "Zusatz", "Bahnhof", "Fenster", "Geschäft", "Zugriff", "Region", "Zweifel", "Mehrheitlich", "Grad", "Fernsehen", "Blut", "Erklärung", "Klang", "Wahl", "Parlament", "Seite? ˅", "Kennzeichen", "Bedeutung", "Titel", "Spezies", "Zunahme", "Rückkehr", "Anliegen", "Öffentlich", "Wettbewerb", "Software", "Glas", "Dame", "Antworten", "Erde", "Tochter", "Zweck", "Verantwortung", "Führer", "Fluss", "Auge", "Fähigkeit", "Appellieren", "Opposition", "Kampagne", "Respekt", "Aufgabe", "Beispiel", "Verkauf", "Ganz", "Offizier", "Methode", "Aufteilung", "Quelle", "Stück", "Muster", "Mangel", "Krankheit", "Ausrüstung", "Fläche", "Nachfrage", "Post", "Mund", "Radio", "Bestimmung", "Versuch", "Sektor", "Feste", "Status", "Frieden", "Vielfalt", "Lehrer", "Show", "Lautsprecher", "Baby", "Arm", "Base", "Vermissen", "Sicherheit", "Problem", "Kultur", "Richtung", "Kontext", "Charakter", "Kasten", "Diskussion", "Vergangenheit", "Last", "Anfang", "Bruder", "Liga", "Zustand", "Maschine", "Streit", "Sex", "Budget", "Englisch", "Transport", "Teilen", "Mama", "Kasse", "Prinzip", "Austausch", "Hilfe", "Bücherei", "Ausführung", "Regel", "Tee", "Balance", "Nachmittag", "Hinweis", "Schutz", "Wahrheit", "Kreis", "Wende", "Schmied", "Überprüfung", "Minute", "Pflicht", "Umfrage", "Gegenwart", "Beeinflussen", "Stein", "Hund", "Nutzen", "Sammlung", "Exekutive", "Rede", "Funktion", "Königin", "Ehe", "Aktie", "Fehler", "Küche", "Schüler", "Anstrengung", "Urlaub", "Werdegang", "Attacke", "Länge", "Pferd", "Fortschritt", "Pflanze, anlage", "Besuch", "Beziehung", "Ball", "Erinnerung", "Bar", "Meinung", "Quartal", "Einschlag", "Skala", "Rennen", "Bild", "Vertrauen", "Gerechtigkeit", "Kante", "Gas", "Eisenbahn", "Ausdruck", "Vorteil", "Gold", "Holz", "Netzwerk", "Text", "Wald", "Schwester", "Stuhl", "Weil", "Fuß", "Erhebt euch", "Halb", "Winter", "Ecke", "Versicherung", "Schritt", "Schaden", "Anerkennung", "Schmerz", "Wahrscheinlichkeit", "Gesetzgebung", "Stärke", "Geschwindigkeit", "Verbrechen", "Hügel", "Debatte", "Wille", "Liefern", "Geschenk", "Vertrauen", "Geduldig", "Wind", "Lösung", "Band", "Museum", "Bauernhof", "Pfund", "Spiel", "Bewertung", "Botschaft", "Fußball", "Nein", "Tier", "Haut", "Szene", "Artikel", "Sachen", "Einleitung", "Abspielen", "Verwaltung", "Furcht", "Vati", "Anteil", "Insel", "Kontakt", "Japan", "Anspruch", "Königreich", "Video", "Fernseher", "Existenz", "Telefon", "Bewegung", "Verkehr", "Distanz", "Erleichterung", "Kabinett", "Arbeitslosigkeit", "Wirklichkeit", "Ziel", "Studie", "Felsen", "Konzept", "Geist", "Unfall", "Organisation", "Konstruktion", "Kaffee", "Telefon", "Verteilung", "Zug", "Sicht", "Schwierigkeit", "Faktor", "Die übung", "Wochenende", "Schlacht", "Gefängnis", "Gewähren", "Flugzeug", "Baum", "Brücke", "Strategie", "Kontrast", "Kommunikation", "Hintergrund", "Gestalten", "Wein", "Stern", "Hoffnung", "Auswahl", "Detail", "Benutzer", "Weg", "Klient", "Suche", "Meister", "Regen", "Angebot", "Tor", "Abendessen", "Freiheit", "Attitüde", "Während", "Agentur", "Sitz", "Benehmen", "Gefallen", "Paar", "Krise", "Lächeln", "Prinz", "Achtung", "Forderung", "Kapazität", "Ausgang", "Hinweis", "Verfahren", "Theater", "Tour", "Erkennung", "Mitte", "Abwesenheit", "Satz", "Paket", "Spur", "Karte", "Schild", "Engagement", "Spieler", "Drohung", "Wetter", "Element", "Konflikt", "Notiz", "Sieg", "Unterseite", "Finanzen", "Fonds", "Gewalt", "Datei", "Profitieren", "Standard", "Jack", "Route", "China", "Ausgaben", "Zweite", "Disziplin", "Zelle", "Reaktion", "Schloss", "Kongress", "Individuell", "Führen", "Rücksichtnahme", "Schuld", "Möglichkeit", "Zahlung", "Ausstellung", "Reform", "Betonung", "Frühling", "Publikum", "Merkmal", "Berühren", "Anwesen", "Montage", "Volumen", "Jugend", "Beitrag", "Lehrplan", "Aussehen", "Martin", "Boot", "Institut", "Mitgliedschaft", "Zweig", "Bus", "Abfall", "Wärme", "Nacken", "Objekt", "Kapitän", "Treiber", "Herausforderung", "Konversation", "Gelegenheit", "Code", "Krone", "Geburt", "Schweigen", "Literatur", "Vertrauen", "Hölle", "Eintrag", "Transfer", "Gentleman", "Tasche", "Kohle", "Ermittlung", "Bein", "Glauben", "Gesamt", "Wesentlich", "Dokumentieren", "Bezeichnung", "Mord", "Ziel", "Flug", "Fazit", "Arzneimittel", "Tradition", "Vergnügen", "Verbindung", "Inhaber", "Vertrag", "Verlangen", "Professor", "Kopieren", "Ministerium", "Säure", "Palast", "Die anschrift", "Institution", "Mittagessen", "Generation", "Partner", "Motor", "Zeitung", "Kreuz", "Ermäßigung", "Wohlfahrt"]
    }

    dovalingo_dutch : list {
        items = ["Duif", "Tijd", "Manier", "Jaar", "Het werk", "Regering", "Dag", "Mens", "Wereld-", "Leven", "Deel", "Huis", "Cursus", "Geval", "Systeem", "Plaats", "Einde", "Groep", "Bedrijf", "Partij", "Informatie", "School", "Feit", "Geld", "Punt", "Voorbeeld", "Staat", "Bedrijf", "Nacht", "Oppervlakte", "Water", "Ding", "Familie", "Hoofd", "Hand", "Volgorde", "Kant", "Thuis", "Ontwikkeling", "Week", "Stroom", "Land", "Raad", "Gebruik", "Onderhoud", "Kamer", "Markt", "Probleem", "Rechtbank", "Kavel", "Een", "Oorlog", "Politie", "Interesse", "Auto", "Wet", "Weg", "Formulier", "Gezicht", "Opleiding", "Het beleid", "Onderzoek", "Soort", "Kantoor", "Lichaam", "Persoon", "Gezondheid", "Moeder", "Vraag", "Punt uit", "Naam", "Boek", "Peil", "Kind", "Controle", "Samenleving", "Minister", "Weergave", "Deur-", "Lijn", "Gemeenschap", "Zuiden", "Stad", "God", "Vader", "Centrum", "Effect", "Personeel", "Positie", "Vriendelijk", "Functie", "Vrouw", "Actie", "Beheer", "Handelen", "Verwerken", "Noorden", "Leeftijd", "Bewijs", "Idee", "West", "Steun", "Moment", "Gevoel", "Verslag", "Verstand", "Kerk", "Ochtend", "Dood", "Wijzigen", "Industrie", "Land-", "Zorg", "Eeuw", "Bereik", "Tafel", "Rug", "Handel", "Geschiedenis", "Studie", "Straat", "Commissie", "Tarief", "Woord", "Voedsel", "Taal", "Beleven", "Resultaat", "Team", "Ander", "Meneer", "Sectie", "Programma", "Lucht", "Gezag", "Rol", "Reden", "Prijs", "Dorp", "Klas", "Natuur", "Onderwerp", "Afdeling", "Unie", "Bank", "Lid", "Waarde", "Behoefte", "Oosten-", "Oefening", "Type", "Papier", "Datum", "Beslissing", "Figuur", "Rechtsaf", "Vrouw", "President", "Universiteit", "Vriend", "Club", "Kwaliteit", "Stem", "Heer", "Fase", "Koning", "Ons", "Situatie", "Licht", "Belasting", "Productie", "Maart", "Secretaris", "Kunst", "Bord", "Kunnen", "Ziekenhuis", "Maand", "Muziek", "Kosten", "Veld", "Prijs", "Kwestie", "Bed", "Projecteren", "Hoofdstuk", "Meisje", "Spel", "Hoeveelheid", "Basis", "Kennis", "Nadering", "Serie", "Liefde", "Bovenkant", "Nieuws", "Voorkant", "Toekomst", "Manager", "Rekening", "Computer", "Beveiliging", "Rest", "Werk", "Structuur", "Haar", "Rekening", "Hart", "Kracht", "Aandacht", "Beweging", "Succes", "Brief", "Akkoord", "Kapitaal", "Analyse", "Bevolking", "Omgeving", "Uitvoering", "Model-", "Materiaal", "Theorie", "Groei", "Vuur", "Kans", "Jongen", "Relatie", "Zoon", "Zee", "Vermelding", "Maat", "Eigendom", "Ruimte", "Termijn", "Regisseur", "Plan", "Gedrag", "Behandeling", "Energie", "Inkomen", "Beker", "Schema", "Ontwerp", "Antwoord", "Vereniging", "Keuze", "Druk", "Hal", "Stel", "Technologie", "Verdediging", "Lijst", "Voorzitter", "Verlies", "Werkzaamheid", "Contract", "District", "Muur", "Verschil", "Leger", "Hotel", "Zon", "Product", "Zomer", "Set", "Dorp", "Kleur", "Vloer", "Seizoen", "Eenheid", "Park", "Uur", "Investering", "Test", "Tuin", "Echtgenoot", "Werkgelegenheid", "Stijl", "Wetenschap", "Look", "Overeenkomst", "Aanval", "Helpen", "Economie", "Nieuwe", "Bladzijde", "Risico", "Het advies", "Evenement", "Afbeelding", "Commissie", "Vis", "Middelbare school", "Olie-", "Arts", "Mogelijkheid", "Film", "Conferentie", "Operatie", "Sollicitatie", "Druk op", "Omvang", "Toevoeging", "Station", "Raam", "Winkel", "Toegang", "Regio", "Twijfel", "Meerderheid", "Rang", "Televisie", "Bloed", "Uitspraak", "Geluid", "Verkiezing", "Parlement", "Site", "Markering", "Belang", "Titel", "Soort", "Toenemen", "Opbrengst", "Zorg", "Openbaar", "Concurrentie", "Software", "Glas", "Dame", "Antwoord", "Aarde", "Dochter", "Doel", "Verantwoordelijkheid", "Leider", "Rivier", "Oog", "Vermogen", "Hoger beroep", "Oppositie", "Campagne", "Respect", "Taak", "Voorbeeld", "Uitverkoop", "Geheel", "Officier", "Methode", "Divisie", "Bron", "Deel", "Patroon", "Gebrek", "Ziekte", "Apparatuur", "Oppervlakte", "Vraag", "Na", "Mond", "Radio-", "Voorraad", "Poging", "Sector", "Firma", "Toestand", "Vrede", "Verscheidenheid", "Docent", "Tonen", "Spreker", "Baby", "Arm", "Baseren", "Missen", "Veiligheid", "Probleem", "Cultuur", "Richting", "Context", "Karakter", "Doos", "Discussie", "Verleden", "Gewicht", "Begin", "Broer", "Liga", "Voorwaarde", "Machine", "Argument", "Seks", "Begroting", "Engels", "Vervoer-", "Delen", "Mamma", "Contant geld", "Beginsel", "Aandelenbeurs", "Hulp", "Bibliotheek", "Versie", "Regel", "Thee", "Balans", "Namiddag", "Verwijzing", "Bescherming", "Waarheid", "Wijk", "Draai", "Smid", "Beoordeling", "Minuut", "Plicht", "Vragenlijst", "Aanwezigheid", "Invloed", "Steen", "Hond", "Voordeel", "Verzameling", "Leidinggevend", "Toespraak", "Functie", "Koningin", "Huwelijk", "Voorraad", "Mislukking", "Keuken", "Student", "Poging", "Vakantie", "Carrière", "Aanval", "Lengte", "Paard", "Voortgang", "Plant", "Op bezoek komen", "Relatie", "Bal", "Geheugen", "Bar", "Mening", "Kwartaal", "Gevolg", "Schaal", "Ras", "Afbeelding", "Vertrouwen", "Gerechtigheid", "Kant", "Gas-", "Spoorweg", "Uitdrukking", "Voordeel", "Goud", "Hout", "Netwerk", "Tekst", "Woud", "Zus", "Stoel", "Oorzaak", "Voet", "Opstaan", "Voor de helft", "Winter", "Hoek", "Verzekering", "Stap", "Schade", "Credit", "Pijn", "Mogelijkheid", "Wetgeving", "Kracht", "Snelheid", "Misdaad", "Heuvel", "Debat", "Zullen", "Leveren", "Cadeau", "Vertrouwen", "Geduldig", "Wind", "Oplossing", "Band", "Museum", "Boerderij", "Pond", "Wedstrijd", "Beoordeling", "Bericht", "Amerikaans voetbal", "Nee", "Dier", "Huid", "Tafereel", "Artikel", "Spullen", "Invoering", "Speel", "Administratie", "Angst", "Pa", "Proportie", "Eiland", "Contact", "Japan", "Claim", "Koninkrijk", "Video-", "TV", "Bestaan", "Telefoon", "Actie", "Verkeer", "Afstand", "Opluchting", "Kastje", "Werkloosheid", "Realiteit", "Doel", "Proces", "Steen", "Concept", "Geest", "Ongeluk", "Organisatie", "Bouw", "Koffie", "Telefoon", "Verdeling", "Trein", "Zicht", "Moeilijkheid", "Factor", "Oefening", "Weekend", "Strijd", "Gevangenis", "Studiebeurs", "Vliegtuigen", "Boom", "Brug", "Strategie", "Contrast", "Communicatie", "Achtergrond", "Vorm", "Wijn", "Ster", "Hoop", "Selectie", "Detail-", "Gebruiker", "Pad", "Cliënt", "Zoekopdracht", "Meester", "Regen", "Bieden", "Doel", "Avondeten", "Vrijheid", "Houding", "Terwijl", "Bureau", "Zitplaats", "Wijze", "Gunst", "Paar-", "Crisis", "Glimlach", "Prins", "Gevaar", "Telefoongesprek", "Capaciteit", "Uitvoer", "Notitie", "Procedure", "Theater", "Tour", "Erkenning", "Midden-", "Afwezigheid", "Zin", "Pakket", "Spoor", "Kaart", "Teken", "Inzet", "Speler", "Bedreiging", "Het weer", "Element", "Conflict", "Merk op", "Zege", "Onderkant", "Financiën", "Fonds", "Geweld", "Dossier", "Winst", "Standaard-", "Jack", "Route", "China", "Uitgaven", "Tweede", "Discipline", "Cel", "Reactie", "Kasteel", "Congres", "Individueel", "Leiding", "Overweging", "Schuld", "Optie", "Betaling", "Tentoonstelling", "Hervorming", "Nadruk", "De lente", "Publiek", "Functie", "Aanraken", "Landgoed", "Bijeenkomst", "Volume", "Jeugd", "Bijdrage", "Leerplan", "Verschijning", "Martin", "Boot", "Instituut", "Lidmaatschap", "Tak", "Bus", "Afval", "Warmte", "Nek", "Voorwerp", "Kapitein", "Bestuurder", "Uitdaging", "Gesprek", "Gelegenheid", "Code", "Kroon", "Geboorte", "Stilte", "Literatuur", "Vertrouwen", "Hel", "Binnenkomst", "Overdracht", "Heer", "Tas", "Steenkool", "Onderzoek", "Been", "Geloof", "Totaal", "Belangrijk", "Document", "Omschrijving", "Moord", "Doel", "Vlucht", "Conclusie", "Drugs", "Traditie", "Plezier", "Verbinding", "Baasje", "Verdrag", "Verlangen", "Professor", "Kopiëren", "Ministerie", "Zuur", "Paleis", "Adres", "Instelling", "Lunch", "Generatie", "Partner", "Motor", "Krant-", "Kruis", "Afname", "Welzijn"]
    }

    dovalingo_walloon : list {
        items = ["Colon", "Fèye", "Vôye", "An", "Ovrer", "Gouvèrnèmint", "Djoûrnêye", "Ome", "Monde", "Vèye", "Pårt", "Barake", "Scole", "Cas", "Sistinme", "Plèce", "Fini", "Èsson.ne", "Kipagnêye", "Fièsse", "Infôrmåcion", "Scole", "Fêt", "Manôye", "Pont", "Ègzimpe", "Acèrtiner", "Afêre", "Al-nut'", "Redjon", "Êwe", "Tchwè", "Famile", "Tièsse", "Rimète", "Ôr", "Pårti", "Famile", "", "Saminne", "Pwissance", "Payis", "Consèy", "Si sièrvu di", "Chèrvice", "Plaece", "Fôre", "Problème", "Tribunål", "Tèrin", "In", "Guêre", "Jandarmèrèye", "Intèrèt", "Tchår", "Dreût", "Vôye", "", "Afronter", "Éducåtion", "Politike", "Ricwèrèdje", "Triyî", "Burô", "Cwér", "Pèrsone", "Santé", "Mére", "Kèstion", "Trèvint", "Nom", "Lîve", "Lèvê", "Tètåde", "Controler", "Sôcièté", "Minisse", "Vuwe", "Ouf", "Rôye", "Comeune", "Sûd", "Vèye", "Bon diu", "Pére", "Mitan", "Èfèt", "Pèrsonél", "Pôchon", "Sôr", "Ovrèdje", "Feume", "Ac'", "Administråchon", "Adji", "Trêtî", "Nôrd", "Viyî", "Sène", "Îdèye", "Ouwèss", "Aspoyî", "Moumint", "Sins'", "Rapwèrt", "Spér", "Èglîhe", "Matin", "Dièrin", "Candjî", "Industrèye", "Abwèrder", "", "Siéke", "", "Tåvlê", "Rèscouler", "Comèrce", "Fåve", "Ètude", "Rowe", "", "", "Mot", "Amagnî", "Langue", "Èspèriyince", "", "", "Ôte", "Moncheû", "", "", "Êr", "", "Role", "Cåse", "Pris", "Vèye", "", "Nateûre", "", "", "", "Banke", "", "Valeûr", "", "Èst", "", "", "Papî", "", "", "Cogne", "Dreût", "Feume", "", "Ûnivêrsité", "Ami", "", "Cålité", "Vwès", "Sègneûr", "", "Rwè", "Nos-ôtes", "Situwåcion", "Lèdjîr", "", "", "Cotî", "Sécrètêre", "Årt", "Plantche", "Pouvwér", "Ospitå", "Meûs", "Muzike", "Costèdje", "Dôminne", "Ad'djudjî", "Publiyî", "Lét", "Projèt", "Chapite", "Båcèle", "Djeû", "Montant", "", "Kinohance", "Aprocher", "", "Amoûr", "", "Novèle", "D'vant", "Tins", "Administrateûr", "Compte", "", "", "Ripwès", "", "", "Dj'vè", "Factûre", "Coûr", "Fwèce", "Astème", "Mouvemint", "", "Lète", "Acwérd", "", "", "Pôpulåtion", "", "", "", "", "", "", "", "", "Valèt", "", "Fi", "", "Plake", "Grandeûr", "", "", "", "", "Intanchon", "", "", "Èhowe", "", "Côpe", "", "Dèssin", "", "", "", "", "", "Ome", "", "", "", "", "", "Abèyisté", "", "", "Pareûse", "Difèrince", "", "Ôtél", "Solo", "", "Osté", "", "Viyèdje", "", "", "Acomôder", "", "", "Eûre", "", "", "Cotehê", "Ome", "Plèce", "", "Syince", "Êrèdje", "Pièle", "", "", "", "Novê", "Pådje", "Wèzeûr", "Consèy", "", "Îmådje", "", "Pèhî", "", "Ôle", "Docteûr", "Ocåzion", "Toûrniker", "", "Opèråchon", "", "", "", "", "Gåre", "Fignèsse", "", "", "Payis", "Doter", "", "", "Télévûzion", "Song'", "", "", "Chwès", "", "", "", "Importance", "", "", "", "Rinde", "Importance", "", "Concoûrs", "", "Veûle", "Dame", "Rèsponde", "Têre", "Fèye", "Dèssin", "", "", "Scole", "", "", "", "", "Campagne", "", "Deûr", "Ègzimpe", "Vinte", "", "", "", "", "Fontin.ne", "Pårt", "", "", "Maladèye", "", "", "", "", "Boke", "Posse", "", "Intrèprinde", "", "Fèrme", "", "Påye", "Sôr", "Mêsse", "", "", "", "", "", "Måquer", "", "", "Cultûre", "", "", "Caractére", "Bwète", "", "", "Balance", "", "Fré", "", "", "", "", "Sacwè", "", "", "", "Pårtajer", "Mére", "", "", "Discandjî", "", "Bibiliotéque", "", "", "Té", "", "Après-dîner", "", "", "Vèrité", "", "Tchèrî k'twért", "", "", "", "Deûr", "", "", "", "Pîre", "", "Avantèdje", "", "", "", "", "Rin.ne", "Marièdje", "", "", "Couhène", "Ètudiant", "", "Candjî", "", "Ataker", "", "Dj'vå", "", "", "", "Abôrd", "", "Mémwére", "", "Îdêye", "", "", "Håle", "Coûsse", "Îmådje", "", "Djustice", "", "", "", "", "Avantèdjî", "Ôr", "Bwès", "", "", "Bwès", "Soûr", "", "Djåzer", "Pî", "", "Mitan", "Iviér", "", "", "", "Abîmer", "", "Doleûr", "", "", "Fwèce", "Vitèsse", "Crime", "Gridjète", "", "", "", "", "Fwè", "", "Vint", "", "", "Mûzéye", "Fèrme", "", "", "", "Mèssèdje", "", "", "Bièsse", "Pê", "Sin.ne", "Årtike", "", "", "Djouwer", "", "", "Papa", "", "", "", "", "", "", "", "Télévûzion", "Vikèdje", "Tèlèphoner", "Mouwer", "", "Trote", "", "Årmå", "", "", "Dèssin", "", "Halcoter", "", "Spér", "Acsidint", "", "", "Cafè", "", "", "", "Alèdje", "Difigulté", "", "", "", "Bate", "Prîhon", "", "", "Åbe", "Pont", "", "Contrasse", "", "", "", "Vin", "", "", "Chwès", "", "", "Vôye", "", "", "Aprinde", "Plêve", "", "Dèssin", "Dîner", "Lîbèrté", "", "Tot fant qui", "Ac'", "", "Manîre", "Avantèdjî", "Apêrî", "", "", "", "Dandjî", "", "Cont'nince", "", "", "", "Tèyåte", "", "Rik'nohance", "", "", "Fråse", "", "", "Carte", "Trace", "", "Acteûr", "Mènace", "", "", "", "", "", "Fond", "", "", "", "Poyîre", "", "", "Valèt", "Vôye", "Chine", "", "", "", "", "", "Tchèstê", "", "", "", "", "", "", "Påyemint", "", "", "", "", "", "", "Atoucher", "", "", "", "Djon.nèsse", "", "", "", "", "", "", "", "", "", "Trifôgnî", "", "", "Camatche", "", "", "", "D'vize", "", "Côde", "", "Natål(e)", "Silince", "", "Fwè", "Infér", "", "", "Moncheû", "", "Tchèrbon", "", "Pate", "Crèyince", "", "", "", "", "Moude", "", "Volêye", "", "Drogue", "", "Plêzîr", "", "", "", "Lèmer", "Profèsseûr", "", "", "", "Palå", "Adrèssî", "", "Dîner", "Jènèråchon", "", "", "Gazète", "", "Abahèdje", ""]
    }

    dovalingo_korean : list {
        items = ["비둘기 / Bidulgi", "시각 / Sigag", "방법 / Bangbeob", "년도 / Nyeondo", "일하다 / Ilhada", "정부 / Jeongbu", "낮 / Naj", "남성 / Namseong", "세계 / Segye", "삶 / Salm", "부분 / Bubun", "집 / Jib", "강의 / Gang-ui", "사례 / Salye", "체계 / Chegye", "장소 / Jangso", "끝 / Kkeut", "그룹 / Geulub", "회사 / Hoesa", "파티 / Pati", "정보 / Jeongbo", "학교 / Haggyo", "사실 / Sasil", "돈 / Don", "가리키다 / Galikida", "예시 / Yesi", "상태 / Sangtae", "사업 / Sa-eob", "밤 / Bam", "영역 / Yeong-yeog", "물 / Mul", "물건 / Mulgeon", "가족 / Gajog", "머리 / Meoli", "손 / Son", "주문하다 / Jumunhada", "옆 / Yeop", "집 / Jib", "개발 / Gaebal", "주 / Ju", "힘 / Him", "국가 / Gugga", "이사회 / Isahoe", "사용 / Sayong", "서비스 / Seobiseu", "방 / Bang", "시장 / Sijang", "문제 / Munje", "법원 / Beob-won", "많은 / Manh-eun", "ㅏ / A", "전쟁 / Jeonjaeng", "경찰 / Gyeongchal", "관심 / Gwansim", "차 / Cha", "법 / Beob", "도로 / Dolo", "형태 / Hyeongtae", "얼굴 / Eolgul", "교육 / Gyoyug", "정책 / Jeongchaeg", "연구 / Yeongu", "종류 / Jonglyu", "사무실 / Samusil", "신체 / Sinche", "사람 / Salam", "건강 / Geongang", "어머니 / Eomeoni", "문제 / Munje", "기간 / Gigan", "이름 / Ileum", "도서 / Doseo", "수준 / Sujun", "어린이 / Eolin-i", "제어 / Jeeo", "사회 / Sahoe", "장관 / Jang-gwan", "보다 / Boda", "문 / Mun", "라인 / Lain", "지역 사회 / Jiyeog sahoe", "남쪽 / Namjjog", "도시 / Dosi", "하느님 / Haneunim", "아버지 / Abeoji", "센터 / Senteo", "효과 / Hyogwa", "직원 / Jig-won", "위치 / Wichi", "친절한 / Chinjeolhan", "직업 / Jig-eob", "여성 / Yeoseong", "행동 / Haengdong", "관리 / Gwanli", "행동 / Haengdong", "프로세스 / Peuloseseu", "북쪽 / Bugjjog", "나이 / Nai", "증거 / Jeung-geo", "아이디어 / Aidieo", "서쪽 / Seojjog", "지원하다 / Jiwonhada", "순간 / Sungan", "감각 / Gamgag", "보고서 / Bogoseo", "정신 / Jeongsin", "교회에 / Gyohoee", "아침 / Achim", "죽음 / Jug-eum", "변화 / Byeonhwa", "산업 / San-eob", "땅 / Ttang", "케어 / Keeo", "세기 / Segi", "범위 / Beom-wi", "테이블 / Teibeul", "뒤 / Dwi", "거래 / Geolae", "역사 / Yeogsa", "공부하다 / Gongbuhada", "거리 / Geoli", "위원회 / Wiwonhoe", "비율 / Biyul", "단어 / Dan-eo", "음식 / Eumsig", "언어 / Eon-eo", "경험 / Gyeongheom", "결과 / Gyeolgwa", "팀 / Tim", "다른 / Daleun", "선생님 / Seonsaengnim", "부분 / Bubun", "프로그램 / Peulogeulaem", "공기 / Gong-gi", "권한 / Gwonhan", "역할 / Yeoghal", "이유 / Iyu", "가격 / Gagyeog", "도시 / Dosi", "수업 / Sueob", "자연 / Jayeon", "주제 / Juje", "학과 / Haggwa", "노동 조합 / Nodong johab", "은행 / Eunhaeng", "회원 / Hoewon", "값 / Gabs", "필요 / Pil-yo", "동쪽 / Dongjjog", "관행 / Gwanhaeng", "유형 / Yuhyeong", "종이 / Jong-i", "데이트 / Deiteu", "결정 / Gyeoljeong", "수치 / Suchi", "오른쪽 / Oleunjjog", "부인 / Bu-in", "대통령 / Daetonglyeong", "대학교 / Daehaggyo", "친구 / Chingu", "클럽 / Keulleob", "품질 / Pumjil", "목소리 / Mogsoli", "주님 / Junim", "단계 / Dangye", "왕 / Wang", "우리를 / Ulileul", "상황 / Sanghwang", "빛 / Bich", "세 / Se", "생산 / Saengsan", "3월 / 3wol", "비서 / Biseo", "미술 / Misul", "판자 / Panja", "5월 / 5wol", "병원 / Byeong-won", "월 / Wol", "음악 / Eum-ag", "비용 / Biyong", "들 / Deul", "상 / Sang", "문제 / Munje", "침대 / Chimdae", "프로젝트 / Peulojegteu", "장 / Jang", "소녀 / Sonyeo", "게임 / Geim", "양 / Yang", "기초 / Gicho", "지식 / Jisig", "접근하다 / Jeobgeunhada", "시리즈 / Silijeu", "사랑 / Salang", "맨 위 / Maen wi", "소식 / Sosig", "앞쪽 / Apjjog", "미래 / Milae", "관리자 / Gwanlija", "계정 / Gyejeong", "컴퓨터 / Keompyuteo", "보안 / Boan", "나머지 / Nameoji", "노동 / Nodong", "구조 / Gujo", "머리카락 / Meolikalag", "청구서 / Cheong-guseo", "마음 / Ma-eum", "힘 / Him", "주목 / Jumog", "움직임 / Umjig-im", "성공 / Seong-gong", "편지 / Pyeonji", "합의 / Hab-ui", "수도 / Sudo", "분석 / Bunseog", "인구 / Ingu", "환경 / Hwangyeong", "성능 / Seongneung", "모델 / Model", "재료 / Jaelyo", "이론 / Ilon", "성장 / Seongjang", "불 / Bul", "가능성 / Ganeungseong", "소년 / Sonyeon", "관계 / Gwangye", "아들 / Adeul", "바다 / Bada", "기록 / Gilog", "크기 / Keugi", "특성 / Teugseong", "우주 / Uju", "기간 / Gigan", "감독 / Gamdog", "계획 / Gyehoeg", "행동 / Haengdong", "치료 / Chilyo", "에너지 / Eneoji", "소득 / Sodeug", "컵 / Keob", "계획 / Gyehoeg", "설계 / Seolgye", "응답 / Eungdab", "협회 / Hyeobhoe", "선택 / Seontaeg", "압력 / Ablyeog", "홀 / Hol", "커플 / Keopeul", "기술 / Gisul", "방어 / Bang-eo", "목록 / Moglog", "의장 / Uijang", "상실 / Sangsil", "활동 / Hwaldong", "계약 / Gyeyag", "군 / Gun", "벽 / Byeog", "차이점 / Chaijeom", "군대 / Gundae", "호텔 / Hotel", "태양 / Taeyang", "제품 / Jepum", "여름 / Yeoleum", "세트 / Seteu", "마을 / Ma-eul", "색깔 / Saegkkal", "바닥 / Badag", "계절 / Gyejeol", "단위 / Dan-wi", "공원 / Gong-won", "시간 / Sigan", "투자 / Tuja", "시험 / Siheom", "정원 / Jeong-won", "남편 / Nampyeon", "고용 / Goyong", "스타일 / Seutail", "과학 / Gwahag", "바라보다 / Balaboda", "거래 / Geolae", "요금 / Yogeum", "돕다 / Dobda", "경제 / Gyeongje", "새로운 / Saeloun", "페이지 / Peiji", "위험 / Wiheom", "조언 / Jo-eon", "이벤트 / Ibenteu", "그림 / Geulim", "수수료 / Susulyo", "생선 / Saengseon", "대학 / Daehag", "기름 / Gileum", "박사님 / Bagsanim", "기회 / Gihoe", "필름 / Pilleum", "회의 / Hoeui", "작업 / Jag-eob", "애플리케이션 / Aepeullikeisyeon", "누르다 / Nuleuda", "정도 / Jeongdo", "덧셈 / Deos-sem", "역 / Yeog", "창문 / Changmun", "가게 / Gage", "접속하다 / Jeobsoghada", "지역 / Jiyeog", "의심 / Uisim", "다수 / Dasu", "도 / Do", "텔레비전 / Tellebijeon", "피 / Pi", "성명 / Seongmyeong", "소리 / Soli", "선거 / Seongeo", "의회 / Uihoe", "대지 / Daeji", "표시 / Pyosi", "중요성 / Jung-yoseong", "제목 / Jemog", "종 / Jong", "증가하다 / Jeung-gahada", "반품 / Banpum", "우려 / Ulyeo", "공공의 / Gong-gong-ui", "경쟁 / Gyeongjaeng", "소프트웨어 / Sopeuteuweeo", "유리 / Yuli", "숙녀 / Sugnyeo", "답변 / Dabbyeon", "지구 / Jigu", "딸 / Ttal", "목적 / Mogjeog", "책임 / Chaeg-im", "지도자 / Jidoja", "강 / Gang", "눈 / Nun", "능력 / Neunglyeog", "항소 / Hangso", "반대 / Bandae", "운동 / Undong", "존경 / Jongyeong", "직무 / Jigmu", "사례 / Salye", "판매 / Panmae", "전부의 / Jeonbuui", "장교 / Jang-gyo", "방법 / Bangbeob", "분할 / Bunhal", "원천 / Woncheon", "조각 / Jogag", "무늬 / Munui", "부족 / Bujog", "질병 / Jilbyeong", "장비 / Jangbi", "표면 / Pyomyeon", "수요 / Suyo", "게시하다 / Gesihada", "입 / Ib", "라디오 / Ladio", "공급 / Gong-geub", "시도 / Sido", "부문 / Bumun", "단단한 / Dandanhan", "상태 / Sangtae", "평화 / Pyeonghwa", "다양성 / Dayangseong", "선생님 / Seonsaengnim", "보여주다 / Boyeojuda", "스피커 / Seupikeo", "아기 / Agi", "팔 / Pal", "베이스 / Beiseu", "놓치다 / Nohchida", "안전 / Anjeon", "문제 / Munje", "문화 / Munhwa", "방향 / Banghyang", "문맥 / Munmaeg", "캐릭터 / Kaeligteo", "상자 / Sangja", "논의 / Non-ui", "과거 / Gwageo", "무게 / Muge", "시작 / Sijag", "형제 / Hyeongje", "리그 / Ligeu", "상태 / Sangtae", "기계 / Gigye", "논쟁 / Nonjaeng", "섹스 / Segseu", "예산 / Yesan", "영어 / Yeong-eo", "수송 / Susong", "공유하다 / Gong-yuhada", "침묵 / Chimmug", "현금 / Hyeongeum", "원칙 / Wonchig", "교환 / Gyohwan", "지원 / Jiwon", "도서관 / Doseogwan", "버전 / Beojeon", "규칙 / Gyuchig", "차 / Cha", "균형 / Gyunhyeong", "오후 / Ohu", "참조 / Chamjo", "보호 / Boho", "진실 / Jinsil", "구역 / Guyeog", "회전하다 / Hoejeonhada", "스미스 / Seumiseu", "검토 / Geomto", "분 / Bun", "의무 / Uimu", "서베이 / Seobei", "있음 / Iss-eum", "영향 / Yeonghyang", "결석 / Gyeolseog", "개 / Gae", "혜택 / Hyetaeg", "수집 / Sujib", "경영진 / Gyeong-yeongjin", "연설 / Yeonseol", "기능 / Gineung", "퀸 / Kwin", "결혼 / Gyeolhon", "스톡 / Seutog", "실패 / Silpae", "주방 / Jubang", "학생 / Hagsaeng", "노력 / Nolyeog", "휴일 / Hyuil", "직업 / Jig-eob", "공격 / Gong-gyeog", "길이 / Gil-i", "말 / Mal", "진전 / Jinjeon", "공장 / Gongjang", "방문 / Bangmun", "관계 / Gwangye", "공 / Gong", "메모리 / Memoli", "술집 / Suljib", "의견 / Uigyeon", "4분의 1 / 4bun-ui 1", "영향 / Yeonghyang", "규모 / Gyumo", "경주 / Gyeongju", "영상 / Yeongsang", "신뢰하다 / Sinloehada", "정당성 / Jeongdangseong", "가장자리 / Gajangjali", "가스 / Gaseu", "철도 / Cheoldo", "표현 / Pyohyeon", "이점 / Ijeom", "금 / Geum", "목재 / Mogjae", "회로망 / Hoelomang", "텍스트 / Tegseuteu", "숲 / Sup", "자매 / Jamae", "의자 / Uija", "원인 / Won-in", "발 / Bal", "증가 / Jeung-ga", "반 / Ban", "겨울 / Gyeoul", "모서리 / Moseoli", "보험 / Boheom", "단계 / Dangye", "피해를 주다 / Pihaeleul juda", "신용 거래 / Sin-yong geolae", "통증 / Tongjeung", "가능성 / Ganeungseong", "법률 제정 / Beoblyul jejeong", "힘 / Him", "속도 / Sogdo", "범죄 / Beomjoe", "언덕 / Eondeog", "토론 / Tolon", "~ 할 것이다 / ~ hal geos-ida", "공급 / Gong-geub", "선물 / Seonmul", "신뢰 / Sinloe", "인내심 있는 / Innaesim issneun", "바람 / Balam", "해결책 / Haegyeolchaeg", "밴드 / Baendeu", "박물관 / Bagmulgwan", "농장 / Nongjang", "파운드 / Paundeu", "성냥 / Seongnyang", "평가 / Pyeong-ga", "메시지 / Mesiji", "축구 / Chuggu", "아니요 / Aniyo", "동물 / Dongmul", "피부 / Pibu", "장면 / Jangmyeon", "기사 / Gisa", "물건 / Mulgeon", "소개 / Sogae", "플레이 / Peullei", "관리 / Gwanli", "두려움 / Dulyeoum", "아빠 / Appa", "비율 / Biyul", "섬 / Seom", "연락하다 / Yeonlaghada", "일본 / Ilbon", "주장하다 / Jujanghada", "왕국 / Wang-gug", "동영상 / Dong-yeongsang", "TV / Tv", "존재 / Jonjae", "전화 / Jeonhwa", "이동하다 / Idonghada", "교통 / Gyotong", "거리 / Geoli", "안도 / Ando", "내각 / Naegag", "실업 / Sil-eob", "현실 / Hyeonsil", "표적 / Pyojeog", "재판 / Jaepan", "바위 / Bawi", "개념 / Gaenyeom", "영혼 / Yeonghon", "사고 / Sago", "조직 / Jojig", "건설 / Geonseol", "커피 / Keopi", "핸드폰 / Haendeupon", "분포 / Bunpo", "기차 / Gicha", "시력 / Silyeog", "어려움 / Eolyeoum", "요인 / Yoin", "연습 / Yeonseub", "주말 / Jumal", "전투 / Jeontu", "감옥 / Gam-og", "승인하다 / Seung-inhada", "항공기 / Hang-gong-gi", "나무 / Namu", "다리 / Dali", "전략 / Jeonlyag", "차이 / Chai", "의사소통 / Uisasotong", "배경 / Baegyeong", "모양 / Moyang", "와인 / Wain", "별 / Byeol", "희망 / Huimang", "선택 / Seontaeg", "세부 사항 / Sebu sahang", "사용자 / Sayongja", "길 / Gil", "고객 / Gogaeg", "검색 / Geomsaeg", "주인 / Ju-in", "비 / Bi", "권하다 / Gwonhada", "목표 / Mogpyo", "저녁 / Jeonyeog", "자유 / Jayu", "태도 / Taedo", "동안 / Dong-an", "대행사 / Daehaengsa", "좌석 / Jwaseog", "방법 / Bangbeob", "호의 / Houi", "쌍 / Ssang", "위기 / Wigi", "웃다 / Usda", "왕자 / Wangja", "위험 / Wiheom", "전화 / Jeonhwa", "용량 / Yonglyang", "산출 / Sanchul", "노트 / Noteu", "절차 / Jeolcha", "극장 / Geugjang", "관광 / Gwangwang", "인식 / Insig", "가운데 / Gaunde", "결석 / Gyeolseog", "문장 / Munjang", "패키지 / Paekiji", "과정 / Gwajeong", "카드 / Kadeu", "징후 / Jinghu", "약속 / Yagsog", "플레이어 / Peulleieo", "위협 / Wihyeob", "날씨 / Nalssi", "요소 / Yoso", "갈등 / Galdeung", "알아채다 / Al-achaeda", "승리 / Seungli", "맨 아래 / Maen alae", "재원 / Jaewon", "축적 / Chugjeog", "폭행 / Poghaeng", "파일 / Pail", "이익 / Iig", "기준 / Gijun", "잭 / Jaeg", "노선 / Noseon", "중국 / Jung-gug", "지출 / Jichul", "두번째 / Dubeonjjae", "규율 / Gyuyul", "셀 / Sel", "반응 / Ban-eung", "성 / Seong", "회의 / Hoeui", "개인 / Gaein", "리드 / Lideu", "고려 사항 / Golyeo sahang", "빚 / Bij", "옵션 / Obsyeon", "지불 / Jibul", "전시회 / Jeonsihoe", "개정 / Gaejeong", "중요성 / Jung-yoseong", "봄 / Bom", "청중 / Cheongjung", "특징 / Teugjing", "접촉 / Jeobchog", "사유지 / Sayuji", "집회 / Jibhoe", "용량 / Yonglyang", "청소년 / Cheongsonyeon", "기부금 / Gibugeum", "과정 / Gwajeong", "모습 / Moseub", "남자 이름 / Namja ileum", "보트 / Boteu", "학회 / Haghoe", "회원 / Hoewon", "나뭇가지 / Namusgaji", "버스 / Beoseu", "쓰레기 / Sseulegi", "열 / Yeol", "목 / Mog", "물체 / Mulche", "선장 / Seonjang", "운전사 / Unjeonsa", "도전 / Dojeon", "대화 / Daehwa", "기회 / Gihoe", "암호 / Amho", "왕관 / Wang-gwan", "출생 / Chulsaeng", "고요 / Goyo", "문학 / Munhag", "믿음 / Mid-eum", "지옥 / Jiog", "기입 / Giib", "옮기다 / Olmgida", "신사 / Sinsa", "가방 / Gabang", "석탄 / Seogtan", "조사 / Josa", "다리 / Dali", "믿음 / Mid-eum", "총 / Chong", "주요한 / Juyohan", "문서 / Munseo", "설명 / Seolmyeong", "살인 / Sal-in", "목표 / Mogpyo", "비행 / Bihaeng", "결론 / Gyeollon", "의약품 / Uiyagpum", "전통 / Jeontong", "기쁨 / Gippeum", "연결 / Yeongyeol", "소유자 / Soyuja", "조약 / Joyag", "욕구 / Yoggu", "교수 / Gyosu", "복사 / Bogsa", "내각 / Naegag", "산 / San", "궁전 / Gungjeon", "주소 / Juso", "기관 / Gigwan", "점심 / Jeomsim", "세대 / Sedae", "파트너 / Pateuneo", "엔진 / Enjin", "신문 / Sinmun", "가로 질러 가다 / Galo jilleo gada", "절감 / Jeolgam", "복지 / Bogji"]
    }

    dovalingo_chinese : list {
        items = ["鸽子 / Gēzi", "时间 / Shíjiān", "方式 / Fāngshì", "年 / Nián", "工作 / Gōngzuò", "政府 / Zhèngfǔ", "天 / Tiān", "男人 / Nánrén", "世界 / Shìjiè", "生活 / Shēnghuó", "部分 / Bùfèn", "房子 / Fángzi", "课程 / Kèchéng", "案子 / Ànzi", "系统 / Xìtǒng", "地方 / Dìfāng", "结尾 / Jiéwěi", "团体 / Tuántǐ", "公司 / Gōngsī", "聚会 / Jùhuì", "信息 / Xìnxī", "学校 / Xuéxiào", "事实 / Shìshí", "钱 / Qián", "观点 / Guāndiǎn", "例子 / Lìzi", "状态 / Zhuàngtài", "商业 / Shāngyè", "夜晚 / Yèwǎn", "区域 / Qūyù", "水 / Shuǐ", "事物 / Shìwù", "家庭 / Jiātíng", "头 / Tóu", "手 / Shǒu", "命令 / Mìnglìng", "边 / Biān", "家 / Jiā", "发展 / Fāzhǎn", "星期 / Xīngqí", "力量 / Lìliàng", "国家 / Guójiā", "理事会 / Lǐshì huì", "采用 / Cǎiyòng", "服务 / Fúwù", "房间 / Fángjiān", "市场 / Shìchǎng", "问题 / Wèntí", "法庭 / Fǎtíng", "很多 / Hěnduō", "一种 / Yī zhǒng", "战争 / Zhànzhēng", "警察 / Jǐngchá", "兴趣 / Xìngqù", "车 / Chē", "法律 / Fǎlǜ", "路 / Lù", "形式 / Xíngshì", "脸 / Liǎn", "教育 / Jiàoyù", "政策 / Zhèngcè", "研究 / Yánjiū", "种类 / Zhǒnglèi", "办公室 / Bàngōngshì", "身体 / Shēntǐ", "人 / Rén", "健康 / Jiànkāng", "母亲 / Mǔqīn", "问题 / Wèntí", "时期 / Shíqí", "姓名 / Xìngmíng", "书 / Shū", "等级 / Děngjí", "孩子 / Háizi", "控制 / Kòngzhì", "社会 / Shèhuì", "部长 / Bùzhǎng", "看法 / Kànfǎ", "门 / Mén", "线 / Xiàn", "社区 / Shèqū", "南 / Nán", "城市 / Chéngshì", "上帝 / Shàngdì", "父亲 / Fùqīn", "中心 / Zhōngxīn", "影响 / Yǐngxiǎng", "职员 / Zhíyuán", "位置 / Wèizhì", "种类 / Zhǒnglèi", "工作 / Gōngzuò", "女士 / Nǚshì", "行动 / Xíngdòng", "管理 / Guǎnlǐ", "行为 / Xíngwéi", "过程 / Guòchéng", "北 / Běi", "年龄 / Niánlíng", "证据 / Zhèngjù", "主意 / Zhǔyì", "西方 / Xīfāng", "支持 / Zhīchí", "片刻 / Piànkè", "感觉 / Gǎnjué", "报告 / Bàogào", "头脑 / Tóunǎo", "教会 / Jiàohuì", "早晨 / Zǎochén", "死亡 / Sǐwáng", "改变 / Gǎibiàn", "行业 / Hángyè", "土地 / Tǔdì", "关心 / Guānxīn", "世纪 / Shìjì", "范围 / Fànwéi", "桌子 / Zhuōzi", "后退 / Hòutuì", "贸易 / Màoyì", "历史 / Lìshǐ", "学习 / Xuéxí", "街道 / Jiēdào", "委员会 / Wěiyuánhuì", "速度 / Sùdù", "单词 / Dāncí", "食物 / Shíwù", "语言 / Yǔyán", "经验 / Jīngyàn", "结果 / Jiéguǒ", "团队 / Tuánduì", "其他 / Qítā", "先生 / Xiānshēng", "部分 / Bùfèn", "程序 / Chéngxù", "空气 / Kōngqì", "权威 / Quánwēi", "角色 / Juésè", "原因 / Yuányīn", "价格 / Jiàgé", "镇 / Zhèn", "班级 / Bānjí", "自然 / Zìrán", "学科 / Xuékē", "部门 / Bùmén", "联盟 / Liánméng", "银行 / Yínháng", "成员 / Chéngyuán", "价值 / Jiàzhí", "需要 / Xūyào", "东方 / Dōngfāng", "实践 / Shíjiàn", "类型 / Lèixíng", "纸 / Zhǐ", "日期 / Rìqí", "决定 / Juédìng", "数字 / Shùzì", "对 / Duì", "妻子 / Qīzi", "总统 / Zǒngtǒng", "大学 / Dàxué", "朋友 / Péngyǒu", "俱乐部 / Jùlèbù", "质量 / Zhìliàng", "嗓音 / Sǎngyīn", "主 / Zhǔ", "阶段 / Jiēduàn", "国王 / Guówáng", "我们 / Wǒmen", "情况 / Qíngkuàng", "光 / Guāng", "税 / Shuì", "生产 / Shēngchǎn", "行进 / Xíngjìn", "秘书 / Mìshū", "艺术 / Yìshù", "木板 / Mùbǎn", "可能 / Kěnéng", "医院 / Yīyuàn", "月 / Yuè", "音乐 / Yīnyuè", "成本 / Chéngběn", "场地 / Chǎngdì", "奖 / Jiǎng", "问题 / Wèntí", "床 / Chuáng", "项目 / Xiàngmù", "章节 / Zhāngjié", "女孩 / Nǚhái", "游戏 / Yóuxì", "数量 / Shùliàng", "基础 / Jīchǔ", "知识 / Zhīshì", "方法 / Fāngfǎ", "系列 / Xìliè", "爱 / Ài", "最佳 / Zuì jiā", "消息 / Xiāoxī", "正面 / Zhèngmiàn", "未来 / Wèilái", "经理 / Jīnglǐ", "帐户 / Zhànghù", "电脑 / Diànnǎo", "安全 / Ānquán", "休息 / Xiūxí", "劳动 / Láodòng", "结构 / Jiégòu", "头发 / Tóufǎ", "账单 / Zhàngdān", "心 / Xīn", "力量 / Lìliàng", "注意力 / Zhùyì lì", "移动 / Yídòng", "成功 / Chénggōng", "信 / Xìn", "协议 / Xiéyì", "首都 / Shǒudū", "分析 / Fēnxī", "人口 / Rénkǒu", "环境 / Huánjìng", "表现 / Biǎoxiàn", "模型 / Móxíng", "材料 / Cáiliào", "理论 / Lǐlùn", "生长 / Shēngzhǎng", "火 / Huǒ", "机会 / Jīhuì", "男生 / Nánshēng", "关系 / Guānxì", "儿子 / Érzi", "海 / Hǎi", "记录 / Jìlù", "尺寸 / Chǐcùn", "财产 / Cáichǎn", "空间 / Kōngjiān", "学期 / Xuéqí", "导向器 / Dǎoxiàng qì", "计划 / Jìhuà", "行为 / Xíngwéi", "治疗 / Zhìliáo", "活力 / Huólì", "收入 / Shōurù", "杯子 / Bēizi", "方案 / Fāng'àn", "设计 / Shèjì", "回复 / Huífù", "协会 / Xiéhuì", "选择 / Xuǎnzé", "压力 / Yālì", "大厅 / Dàtīng", "一对 / Yī duì", "技术 / Jìshù", "防御 / Fángyù", "列表 / Lièbiǎo", "主席 / Zhǔxí", "损失 / Sǔnshī", "活动 / Huódòng", "合同 / Hétóng", "县 / Xiàn", "墙 / Qiáng", "不同之处 / Bùtóng zhī chù", "军队 / Jūnduì", "酒店 / Jiǔdiàn", "太阳 / Tàiyáng", "产品 / Chǎnpǐn", "夏天 / Xiàtiān", "放 / Fàng", "村庄 / Cūnzhuāng", "颜色 / Yánsè", "地面 / Dìmiàn", "季节 / Jìjié", "单元 / Dānyuán", "公园 / Gōngyuán", "小时 / Xiǎoshí", "投资 / Tóu zī", "测试 / Cèshì", "花园 / Huāyuán", "丈夫 / Zhàngfū", "就业 / Jiùyè", "风格 / Fēnggé", "科学 / Kēxué", "看 / Kàn", "交易 / Jiāoyì", "收费 / Shōufèi", "帮助 / Bāngzhù", "经济 / Jīngjì", "新的 / Xīn de", "页 / Yè", "风险 / Fēngxiǎn", "建议 / Jiànyì", "事件 / Shìjiàn", "图片 / Túpiàn", "委员会 / Wěiyuánhuì", "鱼 / Yú", "大学 / Dàxué", "油 / Yóu", "医生 / Yīshēng", "机会 / Jīhuì", "电影 / Diànyǐng", "会议 / Huìyì", "手术 / Shǒushù", "应用 / Yìngyòng", "按 / Àn", "程度 / Chéngdù", "添加 / Tiānjiā", "车站 / Chēzhàn", "窗户 / Chuānghù", "店铺 / Diànpù", "使用权 / Shǐyòng quán", "地区 / Dìqū", "怀疑 / Huáiyí", "多数 / Duōshù", "程度 / Chéngdù", "电视 / Diànshì", "血液 / Xiěyè", "陈述 / Chénshù", "声音 / Shēngyīn", "选举 / Xuǎnjǔ", "议会 / Yìhuì", "地点 / Dìdiǎn", "标记 / Biāojì", "重要性 / Zhòngyào xìng", "标题 / Biāotí", "物种 / Wùzhǒng", "增加 / Zēngjiā", "返回 / Fǎnhuí", "忧虑 / Yōulǜ", "上市 / Shàngshì", "竞赛 / Jìngsài", "软件 / Ruǎnjiàn", "玻璃 / Bōlí", "女士 / Nǚshì", "回答 / Huídá", "地球 / Dìqiú", "女儿 / Nǚ'ér", "目的 / Mùdì", "责任 / Zérèn", "领导者 / Lǐngdǎo zhě", "河 / Hé", "眼睛 / Yǎnjīng", "能力 / Nénglì", "上诉 / Shàngsù", "反对 / Fǎnduì", "活动 / Huódòng", "尊重 / Zūnzhòng", "任务 / Rènwù", "实例 / Shílì", "销售 / Xiāoshòu", "所有的 / Suǒyǒu de", "官 / Guān", "方法 / Fāngfǎ", "分配 / Fēnpèi", "来源 / Láiyuán", "片 / Piàn", "图案 / Tú'àn", "缺少 / Quēshǎo", "疾病 / Jíbìng", "设备 / Shèbèi", "表面 / Biǎomiàn", "要求 / Yāoqiú", "邮政 / Yóuzhèng", "嘴 / Zuǐ", "收音机 / Shōuyīn jī", "条款 / Tiáokuǎn", "试图 / Shìtú", "部门 / Bùmén", "公司 / Gōngsī", "地位 / Dìwèi", "和平 / Hépíng", "种类 / Zhǒnglèi", "老师 / Lǎoshī", "显示 / Xiǎnshì", "扬声器 / Yángshēngqì", "婴儿 / Yīng'ér", "手臂 / Shǒubì", "根据 / Gēnjù", "错过 / Cuòguò", "安全 / Ānquán", "麻烦 / Máfan", "文化 / Wénhuà", "方向 / Fāngxiàng", "语境 / Yǔ jìng", "特点 / Tèdiǎn", "盒子 / Hézi", "讨论 / Tǎolùn", "过去的 / Guòqù de", "重量 / Zhòngliàng", "开始 / Kāishǐ", "兄弟 / Xiōngdì", "联盟 / Liánméng", "健康）状况 / Jiànkāng) zhuàngkuàng", "机器 / Jīqì", "争论 / Zhēnglùn", "性别 / Xìngbié", "预算 / Yùsuàn", "英语 / Yīngyǔ", "运输 / Yùnshū", "分享 / Fēnxiǎng", "妈妈 / Māmā", "现金 / Xiànjīn", "原则 / Yuánzé", "交换 / Jiāohuàn", "援助 / Yuánzhù", "图书馆 / Túshū guǎn", "版本 / Bǎnběn", "规则 / Guīzé", "茶 / Chá", "平衡 / Pínghéng", "下午 / Xiàwǔ", "参考 / Cānkǎo", "保护 / Bǎohù", "真相 / Zhēnxiàng", "区 / Qū", "转动 / Zhuǎndòng", "史密斯 / Shǐmìsī", "审查 / Shěnchá", "分钟 / Fēnzhōng", "义务 / Yìwù", "民意调查 / Mínyì diàochá", "在场 / Zàichǎng", "影响 / Yǐngxiǎng", "结石 / Jiéshí", "狗 / Gǒu", "益处 / Yìchu", "收藏 / Shōucáng", "管理人员 / Guǎn lǐ rényuán", "演讲 / Yǎnjiǎng", "功能 / Gōngnéng", "女王 / Nǚwáng", "婚姻 / Hūnyīn", "库存 / Kùcún", "失败 / Shībài", "厨房 / Chúfáng", "学生 / Xuéshēng", "努力 / Nǔlì", "假期 / Jiàqī", "职业 / Zhíyè", "攻击 / Gōngjí", "长度 / Chángdù", "马 / Mǎ", "进步 / Jìnbù", "植物 / Zhíwù", "访问 / Fǎngwèn", "关系 / Guānxì", "球 / Qiú", "记忆 / Jìyì", "酒吧 / Jiǔbā", "观点 / Guāndiǎn", "四分之一 / Sì fēnzhī yī", "影响 / Yǐngxiǎng", "规模 / Guīmó", "种族 / Zhǒngzú", "图片 / Túpiàn", "相信 / Xiāngxìn", "正义 / Zhèngyì", "边缘 / Biānyuán", "气体 / Qìtǐ", "铁路 / Tiělù", "表达 / Biǎodá", "优势 / Yōushì", "金子 / Jīnzi", "木头 / Mùtou", "网络 / Wǎngluò", "文本 / Wénběn", "森林 / Sēnlín", "姐姐 / Jiějiě", "椅子 / Yǐzi", "原因 / Yuányīn", "脚丫子 / Jiǎoyāzi", "上升 / Shàngshēng", "一半 / Yībàn", "冬天 / Dōngtiān", "角落 / Jiǎoluò", "保险 / Bǎoxiǎn", "步 / Bù", "损害 / Sǔnhài", "信用 / Xìnyòng", "痛 / Tòng", "可能性 / Kěnéng xìng", "立法 / Lìfǎ", "力量 / Lìliàng", "速度 / Sùdù", "犯罪 / Fànzuì", "爬坡道 / Pá pō dào", "辩论 / Biànlùn", "将要 / Jiāngyào", "供应 / Gōngyìng", "展示 / Zhǎnshì", "信心 / Xìnxīn", "病人 / Bìngrén", "风 / Fēng", "解决方案 / Jiějué fāng'àn", "乐队 / Yuèduì", "博物馆 / Bówùguǎn", "农场 / Nóngchǎng", "磅 / Bàng", "匹配 / Pǐpèi", "评估 / Pínggū", "信息 / Xìnxī", "足球 / Zúqiú", "不 / Bù", "动物 / Dòngwù", "皮肤 / Pífū", "场景 / Chǎngjǐng", "文章 / Wénzhāng", "东西 / Dōngxī", "介绍 / Jièshào", "玩 / Wán", "行政 / Xíngzhèng", "恐惧 / Kǒngjù", "爸爸 / Bàba", "部分 / Bùfèn", "岛 / Dǎo", "接触 / Jiēchù", "日本 / Rìběn", "宣称 / Xuānchēng", "王国 / Wángguó", "视频 / Shìpín", "电视 / Diànshì", "存在 / Cúnzài", "电话 / Diànhuà", "移动 / Yídòng", "交通 / Jiāotōng", "距离 / Jùlí", "宽慰 / Kuānwèi", "内阁 / Nèigé", "失业 / Shīyè", "现实 / Xiànshí", "目标 / Mùbiāo", "审判 / Shěnpàn", "岩石 / Yánshí", "概念 / Gàiniàn", "精神 / Jīngshén", "事故 / Shìgù", "组织 / Zǔzhī", "建造 / Jiànzào", "咖啡 / Kāfēi", "电话 / Diànhuà", "分配 / Fēnpèi", "火车 / Huǒchē", "视线 / Shìxiàn", "困难 / Kùnnán", "因素 / Yīnsù", "锻炼 / Duànliàn", "周末 / Zhōumò", "战斗 / Zhàndòu", "监狱 / Jiānyù", "授予 / Shòuyǔ", "飞机 / Fēijī", "树 / Shù", "桥 / Qiáo", "战略 / Zhànlüè", "对比 / Duìbǐ", "沟通 / Gōutōng", "背景 / Bèijǐng", "形状 / Xíngzhuàng", "葡萄酒 / Pútáojiǔ", "星星 / Xīngxīng", "希望 / Xīwàng", "选择 / Xuǎnzé", "细节 / Xìjié", "用户 / Yònghù", "小路 / Xiǎo lù", "客户 / Kèhù", "搜索 / Sōusuǒ", "掌握 / Zhǎngwò", "雨 / Yǔ", "提供 / Tígōng", "目标 / Mùbiāo", "晚餐 / Wǎncān", "自由 / Zìyóu", "态度 / Tàidù", "尽管 / Jǐnguǎn", "机构 / Jīgòu", "座位 / Zuòwèi", "方式 / Fāngshì", "青睐 / Qīnglài", "一对 / Yī duì", "危机 / Wéijī", "微笑 / Wéixiào", "王子 / Wángzǐ", "危险 / Wéixiǎn", "称呼 / Chēnghu", "容量 / Róngliàng", "输出 / Shūchū", "笔记 / Bǐjì", "程序 / Chéngxù", "剧院 / Jùyuàn", "旅游 / Lǚyóu", "认出 / Rèn chū", "中间 / Zhōngjiān", "缺席 / Quēxí", "句子 / Jùzi", "包裹 / Bāoguǒ", "追踪 / Zhuīzōng", "卡片 / Kǎpiàn", "符号 / Fúhào", "承诺 / Chéngnuò", "播放器 / Bòfàng qì", "威胁 / Wēixié", "天气 / Tiānqì", "元素 / Yuánsù", "冲突 / Chōngtú", "注意 / Zhùyì", "胜利 / Shènglì", "底部 / Dǐbù", "金融 / Jīnróng", "基金 / Jījīn", "暴力 / Bàolì", "文件 / Wénjiàn", "利润 / Lìrùn", "标准 / Biāozhǔn", "杰克 / Jiékè", "路线 / Lùxiàn", "中国 / Zhōngguó", "支出 / Zhīchū", "第二 / Dì èr", "纪律 / Jìlǜ", "细胞 / Xìbāo", "反应 / Fǎnyìng", "城堡 / Chéngbǎo", "国会 / Guóhuì", "个人 / Gèrén", "带领 / Dàilǐng", "考虑 / Kǎolǜ", "债务 / Zhàiwù", "选项 / Xuǎnxiàng", "支付 / Zhīfù", "展览 / Zhǎnlǎn", "改革 / Gǎigé", "强调 / Qiángdiào", "春天 / Chūntiān", "观众 / Guānzhòng", "特征 / Tèzhēng", "触碰 / Chù pèng", "财产 / Cáichǎn", "集会 / Jíhuì", "体积 / Tǐjī", "青年 / Qīngnián", "贡献 / Gòngxiàn", "课程 / Kèchéng", "外貌 / Wàimào", "马丁 / Mǎdīng", "船 / Chuán", "研究所 / Yánjiū suǒ", "会员资格 / Huìyuán zīgé", "分支 / Fēn zhī", "公共汽车 / Gōnggòng qìchē", "浪费 / Làngfèi", "热 / Rè", "脖子 / Bózi", "目的 / Mùdì", "队长 / Duìzhǎng", "司机 / Sījī", "挑战 / Tiǎozhàn", "对话 / Duìhuà", "场合 / Chǎnghé", "代码 / Dàimǎ", "王冠 / Wángguàn", "出生 / Chūshēng", "安静 / Ānjìng", "文学 / Wénxué", "信仰 / Xìnyǎng", "地狱 / Dìyù", "入口 / Rùkǒu", "转移 / Zhuǎnyí", "绅士 / Shēnshì", "包 / Bāo", "煤炭 / Méitàn", "调查 / Diàochá", "腿 / Tuǐ", "信仰 / Xìnyǎng", "全部的 / Quánbù de", "主要的 / Zhǔyào de", "文档 / Wéndàng", "描述 / Miáoshù", "谋杀 / Móushā", "目标 / Mùbiāo", "航班 / Hángbān", "结论 / Jiélùn", "药品 / Yàopǐn", "传统 / Chuántǒng", "乐趣 / Lèqù", "联系 / Liánxì", "所有者 / Suǒyǒu zhě", "条约 / Tiáoyuē", "欲望 / Yùwàng", "教授 / Jiàoshòu", "复制 / Fùzhì", "部 / Bù", "酸 / Suān", "宫 / Gōng", "地址 / Dìzhǐ", "机构 / Jīgòu", "午餐 / Wǔcān", "一代 / Yīdài", "伙伴 / Huǒbàn", "引擎 / Yǐnqíng", "报纸 / Bàozhǐ", "叉 / Chā", "减少 / Jiǎnshǎo", "福利 / Fúlì"]
    }

   labyrinth_dir : list {
      items  = [ "1_1", "1_2", "1_3", "1_4", "1_5", "2_1", "2_2", "2_3", "2_4", "2_5", "3_1", "3_2", "3_3", "3_4", "3_5", "4_1", "4_2", "4_3", "4_4", "4_5", "5_1", "5_2", "5_3", "5_4", "5_5", "ship_destroyed"]
   }
   
   sound_volume_labels : list {
      items = ["lowest", "low", "normal", "high", "highest"]
   }
   
   sound_volume_values : list {
      items =  [1, 7, 16, 40, 100]
   }

   choking_e_choice_1: list {
    items = [
        "Give 5 abdominal thrusts (also known as the Heimlich maneuver).",
        "Alternate between 5 blows and 5 thrusts until the blockage is dislodged.",
        "Give 5 back blows.",
    ]
   }

   choking_e_choices: list {
      items = [choking_e_choice_1, choking_e_choice_1, choking_e_choice_1]
   }

   choking_e_response_1: list {
        items = [
            "{rescue_person_1} begins to give 5 back blows, you stay behind and observe. {rescue_person_3} also helps.",
            "{rescue_person_2} begins to give 5 back blows, you stay behind and observe. {rescue_person_4} also helps.",
            "Yes, you are awesome!!!! You give 5 back blows, and E looks a bit better. {rescue_person_5} also helps.",
        ]
   }

   choking_e_response_2: list {
        items = [
            "Yes, you are awesome!!!! You do the Heimlich maneuver, and E seems a bit more alive.",
            "{rescue_person_3} begins to do the Heimlich maneuver, you stay behind and observe.",
            "{rescue_person_4} begins to do the Heimlich maneuver, you stay behind and observe.",
        ]
   }

   choking_e_response_3: list {
        items = [
            "{rescue_person_5} begins to alternate between 5 blows and 5 thrusts, you stay behind and observe.",
            "Yes, you are awesome!!!! You alternate between 5 blows and 5 thrusts, and it really looks like the last step to save E!",
            "{rescue_person_6} begins to alternate between 5 blows and 5 thrusts, you stay behind and observe.",
        ]
   }

   choking_e_responses: list {
      items = [choking_e_response_1, choking_e_response_2, choking_e_response_3]
   }

   choking_e_introductions: list {
      items = [
         "We need to save E!"
      ]
   }

   choking_e_queries: list {
      items = [
         "We need to save E! What is the first step to help him?",
         "It's not over yet! What is the second step to help him?",
         "Almost there! What is the third step to help him?",
      ]
   }

   rescue_people: set {items = [June, SevenSeas, Wool, RuD, Kirby, Pyjeon]}

   choking_e_solutions: list {
        items = [2, 0, 1]
   }
   choking_e_order: list {
      items = [0, 1, 2]
   }
}

strings {
   next_track : string "";
   current_track : string "";
   string_tmp : string "";
   comments : string "";
   nothing_message : string "";
   string_correction : string "";
   rescue_person_1 : string "";
   rescue_person_2 : string "";
   rescue_person_3 : string "";
   rescue_person_4 : string "";
   rescue_person_5 : string "";
   rescue_person_6 : string "";
   laptop_password : string "pigeon";
   hat_color : string "red";
   hat_blue : string "blue";
   correct_game : string "cosmoogang";
   incorrect_game_1 : string "akafeather";
   incorrect_game_2 : string "brooms";
   florrie_code : string "opensourcenow";
   random_music_labyrinth : dynamic_string (
       chance(33) ? "music_labyrinth" :
    chance(34) ? "music_labyrinth_2" : "music_beat_1");
   previous_command : string "";
   dovalingo_src_lang : string "";
   dovalingo_dst_lang : string "";
   dova_word_to_find : string "";
   dovalingo_league_name: dynamic_string(
      dovalingo_lessons < 7 ? "Squab" :
      dovalingo_lessons < 14 ? "Young Pigeon" :
      dovalingo_lessons < 42 ? "Pigeon" :
      dovalingo_lessons < 100 ? "Wise Pigeon" : "Ultimate Pigeon");
}

######################################
#  Locations                         #
######################################

locations {

   cc_room : location "Hello CC! This is your bedroom, typical of rooms in spaceships nowadays. Today is your birthday, so your inventor friend <June<#cc0>> made a custom magic <mirror<#cc0>> that answers your questions. Feel free to <TALK<#cc0>> to the mirror." ;

   cc_hero_june : location "June helped you transform into HeroCC thanks to her magic <beak<#cc0>>." ;

   cc_win : location "Everybody is here, finally we can eat cake!" ;

   crispy_garden : location "You are in the Crispy Garden. You see trees where <chicken wings<#cc0>> grow.";

   living_room : location "You are in the common living room." ;

   party_planet : location "You are in front of Party Game Planet, the gaming room. Maybe you should ENTER?" ;

   party_planet_inside : location "You are inside the gaming room." ;

   wools_wheels : location "You are at Wool's Wheels, <Wool<#cc0>>'s vehicle and ship repair area." ;

   puzzle_florrie_laptop : location "You are in front of Florrie's laptop. Can you <UNLOCK<#cc0>> or <TYPE<#cc0>> her password? You see she left a password <HINT<#cc0>> to help herself remember!";

   puzzle_hat : location "Wool says: \'I can show you my favorite puzzle of when I was your age. <TALK<#cc0>> to me whenever you are ready.\'";

   puzzle_labyrinth : location "The only path through the asteroid belt is filled with drones! Their sensors only see in front of their purple cannon. But there's one we can hack to get the blueprint. We can turn this situation around!";

   labyrinth_1_1: location "Be careful of their purple laser cannons, and get the blueprint!";
   labyrinth_1_2: location "";
   labyrinth_1_3: location "It was a trap, there's no way to continue!";
   labyrinth_1_4: location "";
   labyrinth_1_5: location "How did you get there?";
   labyrinth_2_1: location "";
   labyrinth_2_2: location "";
   labyrinth_2_3: location "You won't be able to get the blueprint...";
   labyrinth_2_4: location "";
   labyrinth_2_5: location "Almost there...";
   labyrinth_3_1: location "It was a trap, there's no way to continue!";
   labyrinth_3_2: location "";
   labyrinth_3_3: location "";
   labyrinth_3_4: location "";
   labyrinth_3_5: location "Closer...";
   labyrinth_4_1: location "";
   labyrinth_4_2: location "Hack successful! You got the blueprint!";
   labyrinth_4_3: location "The hacking tool is ready, just go in front of the blue sensor!";
   labyrinth_4_4: location "";
   labyrinth_4_5: location "";
   labyrinth_5_1: location "We need to exit this mine field...";
   labyrinth_5_2: location "";
   labyrinth_5_3: location "";
   labyrinth_5_4: location "We're so close, yet so far!";
   labyrinth_5_5: location "You made it! Congratulations!";
   labyrinth_ship_destroyed: location "Oh no, we got in front of the cannon's lines of fire! Oops!\nTry again with <RETRY<#cc0>>, return to the living room with <EXIT<#cc0>>.";
   dream : location (!is_carried "map" ? "You are learning how to play, to skip type <WAKE UP<#cc0>> to wake up." : !seen_inventory_tuto ? "You can check all objects you have by typing <INVENTORY<#cc0>> (then pressing Enter)." : !tuto_used_map ? "You got a map, you can use it with <USE map<#cc0>> or <M<#cc0>>." : tuto_directions < 4 ? "During the game, you will be in a room and have to navigate between rooms by entering directions such as <North<#cc0>>, <South<#cc0>>, <West<#cc0>>, <East<#cc0>>.\nTry it now "+(tuto_directions == 0 ? "several" : (4 - tuto_directions)+" more" )+" times and see how CC will go in the direction you commanded." : "Last step, to get a list of available commands type <HELP<#cc0>> then press Enter.");
}

######################################
#  Connections                       #
######################################

connections {

   from, direction, to = [
   cc_room, south, living_room,
   living_room, west, wools_wheels,
   wools_wheels, south, party_planet,
   party_planet, enter, party_planet_inside,
   party_planet, east, crispy_garden,
   crispy_garden, north, living_room,

   living_room, enter, puzzle_labyrinth,
   labyrinth_1_1, east_oneway, labyrinth_1_2,
   labyrinth_1_1, south_oneway, labyrinth_2_1,
   labyrinth_1_2, east_oneway, labyrinth_1_3,
   labyrinth_1_2, south_oneway, labyrinth_2_2,
   labyrinth_1_3, east_oneway, labyrinth_ship_destroyed,
   labyrinth_1_3, south_oneway, labyrinth_ship_destroyed,
   labyrinth_1_4, east_oneway, labyrinth_ship_destroyed,
   labyrinth_1_5, south_oneway, labyrinth_2_5,
   labyrinth_2_1, east_oneway, labyrinth_ship_destroyed,
   labyrinth_2_1, south_oneway, labyrinth_3_1,
   labyrinth_2_2, south_oneway, labyrinth_3_2,
   labyrinth_2_3, west_oneway, labyrinth_ship_destroyed,
   labyrinth_2_3, east_oneway, labyrinth_2_4,
   labyrinth_2_4, east_oneway, labyrinth_2_5,
   labyrinth_2_5, south_oneway, labyrinth_3_5,
   labyrinth_3_1, south_oneway, labyrinth_ship_destroyed,
   labyrinth_3_1, east_oneway, labyrinth_ship_destroyed,
   labyrinth_3_2, east_oneway, labyrinth_3_3,
   labyrinth_3_3, south_oneway, labyrinth_4_3,
   labyrinth_3_3, north_oneway, labyrinth_2_3,
   labyrinth_3_4, west_oneway, labyrinth_ship_destroyed,
   labyrinth_3_4, north_oneway, labyrinth_2_4,
   labyrinth_3_5, west_oneway, labyrinth_ship_destroyed,
   labyrinth_3_5, south_oneway, labyrinth_4_5,
   labyrinth_4_1, south_oneway, labyrinth_5_1,
   labyrinth_4_2, west_oneway, labyrinth_4_1,
   labyrinth_4_2, south_oneway, labyrinth_ship_destroyed,
   labyrinth_4_2, north_oneway, labyrinth_3_2,
   labyrinth_4_3, west_oneway, labyrinth_4_2,
   labyrinth_4_3, south_oneway, labyrinth_ship_destroyed,
   labyrinth_4_4, north_oneway, labyrinth_3_4,
   labyrinth_4_4, east_oneway, labyrinth_ship_destroyed,
   labyrinth_4_4, west_oneway, labyrinth_ship_destroyed,
   labyrinth_4_5, south_oneway, labyrinth_5_5,
   labyrinth_5_1, east_oneway, labyrinth_5_2,
   labyrinth_5_2, east_oneway, labyrinth_5_3,
   labyrinth_5_3, east_oneway, labyrinth_5_4,
   labyrinth_5_4, east_oneway, labyrinth_ship_destroyed,
   labyrinth_5_4, north_oneway, labyrinth_4_4,
   ]

}

######################################
#  Objects                           #
######################################

objects {

tree : object "a typical <chicken tree<#cc0>>" at = "crispy_garden" ;

ee : scenery "<pigeon E<#cc0>>, a friend of June who made a few viral videos" ;

florrie : scenery "programmer <Florrie<#cc0>>" ;

june : scenery "inventor <June<#cc0>>, who made you the custom <mirror<#cc0>>" ;

laptop : scenery "a <laptop<#cc0>> computer" at = "living_room";

screen : scenery "a large digital <screen<#cc0>>" at = "living_room";

map : object "a <map<#cc0>> of the ship" at = "dream";

communicator : object "Florrie <communicator<#cc0>>" at ="cc_room";

energydrink : object "a brand new can of energy <drink<#cc0>>";

chicken_wing : object "a ripe chicken wing" at = "crispy_garden";

spherificator : object "a Banach-Spherificator" at = "wools_wheels";

stars : object "a bunch of beautiful shining stars"  at ="dream" plural = "true" listed = "false"  ;

mirror : object "the <mirror<#cc0>> June made for you" at = "cc_room";

rud_happy : scenery "<RuD<#cc0>>, who looks way more energized now";

rud_sad : scenery "<RuD<#cc0>>, who is almost always there" at = "party_planet_inside";

seven_seas : scenery "one of the most data savvy robots, called <SevenSeas<#cc0>> or <7Cs<#cc0>>" ;

wool : scenery "mechanic <Wool<#cc0>>, who does all kinds of repair work here" at = "wools_wheels";

wool_puzzled : scenery "mechanic <Wool<#cc0>>, showing his favorite puzzle";

wool_kitchen : scenery "<Wool<#cc0>>" ;
sevenseas_kitchen : scenery "<SevenSeas<#cc0>>" ;
rud_kitchen : scenery "<RuD<#cc0>>" ;
june_kitchen : scenery "<June<#cc0>>" ;
ee_kitchen : scenery "<E<#cc0>>" ;

}

######################################
#  Barriers                          #
######################################

barriers {
   block_cc_room_exit : block_path {
      from = cc_room
      to = living_room
      message  = Why leave? You have all your toys here, including the brand-new mirror June gave you!
      block_when_not = talked_to_mirror

   }
   block_laptop_wools_wheels : block_path {
      from = living_room
      to = wools_wheels
      message  = Curiosity makes your mind more active and open to new ideas. That's why health professionals would recommend unlocking this computer for your personal growth.
      block_when_not = has_seen_laptop_puzzle

   }

   block_wool : block_path {
      from = wools_wheels
      to = party_planet
      message  = You should talk to Wool first, he spends way too much time alone, that's not healthy at all.
      block_when_not = has_seen_wool_puzzle
      show_blocked_exit = true

   }

   block_leave_party_planet : block_path {
      from = party_planet_inside
      to = party_planet
      message  = Please assist RuD and show some compassion, he has to finish his game and cannot lose face.
      block_when = rud_sad_talked
      show_blocked_exit = true

   }

   block_rud_sad : block_path {
      from = party_planet
      to = crispy_garden
      message  = The yard is still chilly, let's stay here for a bit.
      block_when -> (is_rud_sad || !is_puzzle_wool_solved || !is_laptop_unlocked)
      show_blocked_exit = true

   }

   block_seven_seas : block_path {
      from = crispy_garden
      to = living_room
      message  = You should enjoy the view a little longer.
      block_when -> (is_rud_sad || !is_puzzle_wool_solved || !is_laptop_unlocked)
      show_blocked_exit = true
   }

   block_living_room_to_crispy_garden : block_path {
      from = living_room
      to = crispy_garden
      message  = The yard is too chilly, let's stay here for a bit.
      block_when = is_rud_sad
      show_blocked_exit = true
   }

   block_labyrinth : block_path {
      from = living_room
      to = puzzle_labyrinth
      message  = There is nothing interesting on the screen. Navigation data, space information... how boring.
      block_when_not = is_labyrinth_open
      show_blocked_exit = true
   }
}

######################################
#  On Startup                        #
######################################

on_startup {
   : iterate "labyrinth_dir" {
       : set_graphic {
         graphic -> ("puzzle_labyrinth")
         target -> ("labyrinth_" + item())
       }
   }
   
   : if (!sysvar_bool "sysvar_has_asked_sound") {
      : print "CC's Road to Stardom uses background music.\n\nYou can lower the volume or stop the music at any moment using <SOUND LOWEST<#cc0>> or <SOUND OFF<#cc0>>.\n\nDo you wish to enable the music?\n";
      : gosub "set_sound_on";
      : if (!sysvar_bool "sysvar_music_enabled") {
         : print "You can enable the music at any moment with <SOUND ON<#cc0>>.";
         : press_any_key;
      }
      : clear_screen;
   }
   : else_if (sysvar_bool "sysvar_music_enabled") {
      : set_true "music_ever_enabled";
      : if (sysvar_bool "sysvar_sound_enabled") {
         : set_false "is_sound_muted";
         : print "You can lower or stop the sound at any moment with <SOUND LOWEST<#cc0>> or <SOUND OFF<#cc0>>.\n";
         : press_any_key;
      }
      : else {
         : print "CC's Road to Stardom uses background music. You can enable the music at any moment with <SOUND ON<#cc0>> or <SOUND LOWEST<#cc0>> for lower volume.\n";
         : press_any_key;
      }
   }
   : gosub "update_volume";
   : play_music "music_dream";
   : print "Type <VERB NOUN<#cc0>> with the keyboard to advance in the game." ;
   : if (is_mobile()) {
      : print "You can touch some colored words to copy them, or touch and hold to choose an action.";
   }
   : else {
      : print "You can click some colored words to copy them, or right-click to choose an action.";
   }
   : print "e.g. <EXAMINE PIGEON<#cc0>> (or <X<#cc0>>) to take a closer look at a PIGEON." ;
   : print "<GET CHICKEN<#cc0>> to take CHICKEN and add it to your inventory." ;
   : press_any_key ;
   : print "To travel, type <NORTH<#cc0>>, <EAST<#cc0>>, <SOUTH<#cc0>>, <WEST<#cc0>> (or <N<#cc0>>, <E<#cc0>>, <S<#cc0>>, <W<#cc0>>), <ENTER<#cc0>>, <EXIT<#cc0>>." ;
   : press_any_key ;
   : print "To check your inventory, type <INVENTORY<#cc0>> (or <I<#cc0>>)." ;
   : press_any_key ;
   : print "To see available commands at a location, use <HELP<#cc0>> and <HINT<#cc0>>." ;
   : press_any_key ;
}

######################################
#  Subroutines                       #
######################################

subroutines {

   success_jingle : subroutine {
      : play_incidental "incidental_success";
   }
   failure_jingle : subroutine {
      : play_incidental "incidental_failure";
   }

   set_sound_on : subroutine {
      : if (!sysvar_bool "sysvar_sound_enabled") {
         : ask_permission ask_again_and_again = "true" category = "sound" ;
      }
      : if (sysvar_bool "sysvar_sound_enabled" && !sysvar_bool "sysvar_music_enabled") {
            : ask_permission ask_again_and_again = "true" category = "music" ;
      }
      : if (sysvar_bool "sysvar_music_enabled") {
         : set_false "is_sound_muted";
         : gosub "update_volume";
         : set_true "music_ever_enabled";
      }
   }
   random_music : subroutine {
      : if (is_sound_muted) {
         : return;
      }
      : store_random var = "pitch_random";
      : if (pitch_random < 20) {
        :  beep millis="200" pitch="30";
      }
      : else_if (pitch_random < 40) {
        :  beep millis="200" pitch="33";
      }
      : else_if (pitch_random < 60) {
        :  beep millis="200" pitch="36";
      }
      : else_if (pitch_random < 80) {
        :  beep millis="200" pitch="39";
      }
      : else {
        :  beep millis="200" pitch="42";
      }
   }
   play_music : subroutine {
      : if (is_sound_muted) {
         : return;
      }
      : if (is_at "dream") {
         : set_string var="next_track" value="music_dream";
      }
      : if (is_at "cc_room") {
         : set_string var="next_track" value="music_beat_2";
      }
      : else_if (is_at "party_planet") {
         : set_string var="next_track" value="music_party_planet_outside";
      }
      : else_if (is_at "puzzle_florrie_laptop") {
         : set_string var="next_track" value="music_laptop";
      }
      : else_if (is_at "wools_wheels") {
         : set_string var="next_track" value="music_wools_wheels";
      }
      : else_if (is_at "crispy_garden") {
         : set_string var="next_track" value="music_crispy_garden";
      }
      : else_if (is_at "living_room" && (is_present "june" || is_present "ee")) {
         : set_string var="next_track" value="music_living_room_pigeon";
      }
      : else_if (is_at "living_room" && (is_everybody_here || is_florrie_in_living_room_with_cake)) {
         : set_string var="next_track" value="music_win";
      }
      : else_if (is_at "living_room") {
         : set_string var="next_track" value="music_living_room";
      }
      : else_if (is_at "party_planet_inside") {
         : set_string var="next_track" value="music_party_planet_inside";
      }
      : else_if (in_labyrinth || is_at "puzzle_labyrinth") {
         : set_string var="next_track" value="music_labyrinth";
      }
      : else_if (is_at "cc_win") {
         : set_string var="next_track" value="music_win";
      }
      : if (next_track != current_track) {
         : if (next_track == "music_labyrinth") {
             : play_music (random_music_labyrinth);
         }
         : else {
            : play_music (next_track);
         }
      }
      : set_string var="current_track" {(next_track)}
   }
   update_volume : subroutine {
      : if (is_sound_muted) {
         : set_music_vol volume="0";
         : set_incidental_vol volume="0";
      }
      : else {
         : set_music_vol volume -> (sound_volume);
         : set_incidental_vol volume -> (sound_volume);
      }
   }
   play_choking_e_puzzle_choice : subroutine {
      : set_integer var="integer_tmp" {(
         int(collection_get { collection="choking_e_order" index -> (integer_tmp)})
      )}
      : set_string var="string_tmp" {(
         collection_get { collection -> (collection_get { collection="choking_e_responses" index -> (choking_e_form)}) index -> (integer_tmp)}
      )}
      : print "{string_tmp}";
      : if (choking_e_solution == integer_tmp) {
         : increment "choking_e_form";
         : if ((count "choking_e_responses") == choking_e_form) {
            : set_true "is_puzzle_ee_solved";
            : goto "living_room" ;
         }
         : else {
            : gosub "play_choking_e_puzzle" ;
         }
      }
      : else {
         : gosub "play_choking_e_puzzle" ;
      }
   }
   play_choking_e_puzzle_next_response_line :  subroutine {
      : set_integer var="integer_tmp" {(
         int(collection_get { collection="choking_e_order" index -> (integer_tmp)})
      )}
      : set_string var="string_tmp" {(
         collection_get { collection -> (collection_get { collection="choking_e_choices" index -> (choking_e_form)}) index -> (integer_tmp)}
      )}
   }
   play_choking_e_puzzle : subroutine {
      : collection_sort collection="choking_e_order" algorithm="shuffle";
      : collection_sort collection="rescue_people" algorithm="shuffle";
      : set_string var="rescue_person_1" {(collection_get { collection="rescue_people" index -> (0)} )};
      : set_string var="rescue_person_2" {(collection_get { collection="rescue_people" index -> (1)} )};
      : set_string var="rescue_person_3" {(collection_get { collection="rescue_people" index -> (2)} )};
      : set_string var="rescue_person_4" {(collection_get { collection="rescue_people" index -> (3)} )};
      : set_string var="rescue_person_5" {(collection_get { collection="rescue_people" index -> (4)} )};
      : set_string var="rescue_person_6" {(collection_get { collection="rescue_people" index -> (5)} )};
      : set_integer var="choking_e_solution" {(int(collection_get { collection="choking_e_solutions" index -> (choking_e_form)}))}
      : set_integer var="integer_tmp" value="0";
      : gosub "play_choking_e_puzzle_next_response_line";
      : add_choice  "{string_tmp}" {
         : set_integer var="integer_tmp" value="0";
         : gosub  "play_choking_e_puzzle_choice" ;
      }
      : set_integer var="integer_tmp" value="1";
      : gosub mask = "true"  "play_choking_e_puzzle_next_response_line";
      : add_choice  "{string_tmp}" {
         : set_integer var="integer_tmp" value="1";
         : gosub "play_choking_e_puzzle_choice";
      }
      : set_integer var="integer_tmp" value="2";
      : gosub "play_choking_e_puzzle_next_response_line";
      : add_choice "{string_tmp}" {
         : set_integer var="integer_tmp" value="2";
         : gosub "play_choking_e_puzzle_choice";
      }
      : set_string var="string_tmp"  {(collection_get { collection="choking_e_queries" index -> (choking_e_form)})};
      : choose "{string_tmp}" hint="numeric_list_always" ;
   }

   play_dovalingo :  subroutine {
      : clear_screen;
      : set_theme "theme_dovalingo";
      : print ("Welcome back to Dovalingo™ "+(is_present "ee" ? "E" : "Florrie")+"!\n\nYou are still in the "+(dovalingo_league_name)+" league "+(is_present "ee" ? "totally behind Florrie" : "with enormous advance over E")+".\n\n");
      : if (dovalingo_src_lang != "") {
         : add_choice text -> ("Do you want to continue playing from "+title_case(dovalingo_src_lang)+" to "+title_case(dovalingo_dst_lang)+"?") {
         }
         : add_choice text -> ("Inverse and play from "+title_case(dovalingo_dst_lang)+" to "+title_case(dovalingo_src_lang)+"?") {
            : set_string var="string_tmp" (dovalingo_src_lang);
            : set_string var="dovalingo_src_lang" (dovalingo_dst_lang);
            : set_string var="dovalingo_dst_lang" (string_tmp);
         }
         : add_choice "Change languages?" {
            : clear "dovalingo_wrong_choices";
            : set_string var="dovalingo_src_lang" value="";
         }
      } : else {
         : print "It's the first time you are playing, please choose your lessons language.";
         : add_choice "Choose languages?" {
            : clear "dovalingo_wrong_choices";
            : set_string var="dovalingo_src_lang" value="";
         }
      }
      : set_integer var="integer_tmp" value="0";
      : add_choice "Quit?" {
         : print "Goodbye, thanks for using our services.";
         : set_integer var="integer_tmp" value="1";
      }
      : choose hint="numeric_list_always" ;
      : if (integer_tmp == 1) {
      
            : print "Thank you for using <Dovalingo<#cc0>>™. Come back at any time to learn new words!";
            : press_any_key ;
            : set_theme "theme_base";
            : redescribe;
         :return;
      }
      : if (dovalingo_src_lang == "") {
         : iterate "dovalingo_langs" {
            : add_choice text -> (title_case(item()))  {
               : set_string var="dovalingo_src_lang" (lower(chosen()));
            }
         }
         : choose "What language do you want to learn?" hint="numeric_list_always" ;
         : iterate "dovalingo_langs" filter -> (item() != dovalingo_src_lang)  {
            : add_choice text -> (title_case(item())) {
               : set_string var="dovalingo_dst_lang"  (lower(chosen()));
            }
         }
         : choose  "What language do you speak?" hint="numeric_list_always" ;
      }
      : while (true) {
         : set_integer var="dovalingo_score" value="0";
         : print "Lesson {dovalingo_lessons} - exercise 1";
         : gosub "dovalingo_do_exercice";
         : print "Lesson {dovalingo_lessons} - exercise 2";
         : gosub "dovalingo_do_exercice";
         : print "Lesson {dovalingo_lessons} - exercise 3";
         : gosub "dovalingo_do_exercice";
         : if (dovalingo_score > 1) {
            : print ((chance(50) ? "Great" : "Well done")+", you finished lesson {dovalingo_lessons} by getting {dovalingo_score} correct answers.");
            : increment "dovalingo_lessons";
         }
         : else {
            : print ("So sad, you failed the lesson with "+(dovalingo_score == 1 ? "only one" : "no") +" correct answer. But try again any time.");
         }
         : ask_bool question -> ("Quit <Dovalingo<#cc0>>™ and no not "+ (dovalingo_score > 1 ? "start next lesson" : "try again this lesson")+"?") var = "boolean_tmp";
         : if (boolean_tmp) {
            : print "Thank you for using <Dovalingo<#cc0>>™. Come back at any time to learn new words!";
            : press_any_key ;
            : set_theme "theme_base";
            : redescribe;
            : return;
         }
      }
   }
   
   dovalingo_do_exercice :  subroutine {
      : set_integer var="dova_word_index_to_find" value="-1";
      : iterate "dovalingo_choices" {
         : set_integer var="integer_tmp" (random(dovalingo_wordlist_size));
         : collection_modify { collection = "dovalingo_choices" index -> (index()) item -> (integer_tmp) }
         # 13% of chance to get a word that was wrong before (1 - 0.98**8/1**8)
         : if (count "dovalingo_wrong_choices" > 0 && chance(2) && dova_word_index_to_find == -1) {
            : collection_sort collection="dovalingo_wrong_choices" algorithm = "shuffle" ;
            : collection_pop  collection = "dovalingo_wrong_choices" var = "string_tmp";
            : set_integer var="dova_word_index_to_find" (int(string_tmp));
            : collection_modify { collection -> ("dovalingo_choices") index -> (0) item -> (dova_word_index_to_find)}
         }
      }
      # remove duplicates
      : collection_sort collection="dovalingo_choices" algorithm = "ascending" ;
      : set_string var="string_tmp" value="";
      : iterate "dovalingo_choices" {
         : set_integer var="integer_tmp" (int(item()));
            : if (string_tmp == item() || (collection_get { collection -> ("dovalingo_"+dovalingo_dst_lang) index -> (integer_tmp)} == "") || (collection_get { collection -> ("dovalingo_"+dovalingo_src_lang) index -> (integer_tmp)} == "")) {
               : collection_modify { collection -> ("dovalingo_choices") index -> (index()) item -> ("")}
            } : else {
               : set_string var="string_tmp" (item());
            }
      }
      : collection_sort collection="dovalingo_choices" algorithm = "shuffle" ;
      : iterate "dovalingo_choices" filter -> (item() != "") {
         : add_choice text -> (collection_get { collection -> ("dovalingo_"+dovalingo_dst_lang) index -> (int(item()))}) {
            : if (chosen() == dova_word_to_find) {
               : print ("You have made the correct choice, it is <"+first_cap(chosen())+"<#6dc928>>!");
               : increment "dovalingo_score"; 
               : set_music_vol volume="1";
               : play_incidental "incidental_ok";
               : pause "500";
               : gosub "update_volume";
            }
            : else {
               : collection_push { collection = "dovalingo_wrong_choices" item -> (dova_word_index_to_find ) }
               : print ("Oh, you made an error, the correct choice was <"+dova_word_to_find+"<#6dc928>>.");
               : set_music_vol volume="1";
               : failure;
               : pause "500";
               : gosub "update_volume";
            }
         }
         : if (dova_word_index_to_find == -1) {
            : set_integer var="dova_word_index_to_find" value -> (int(item()));
         }
      }
      : set_string var="dova_word_to_find" (collection_get { collection -> ("dovalingo_"+dovalingo_dst_lang) index -> (dova_word_index_to_find)});
      : set_string var="string_tmp" ("What is « <"+first_cap(collection_get { collection -> ("dovalingo_"+dovalingo_src_lang) index -> (dova_word_index_to_find)})+" <#6dc928>>» from "+dovalingo_src_lang+" to "+dovalingo_dst_lang+"?");
      : choose question="{string_tmp}" hint="numeric_list_always" columns = "3"  order = "random";
   }
}

######################################
#  On Describe                       #
######################################

on_describe {

          : overlay "new_map" ;
   : gosub "play_music";
   : if (is_at "cc_win" ) {
      : print "CONGRATULATIONS!" ;
      : print "YOU FINISHED THE GAME! C-C YOU LATER!!!!" ;
      : print "(wait a bit before pressing any key to stay and enjoy the ending song!)" ;
      : press_any_key ;
      : clear_screen;
      : stop_music;
      : win_game ;
   }
  : if (is_at "puzzle_labyrinth" ) {
       : set_true "in_labyrinth";
       : set_integer var = "labyrinth_position_x"  value = "0" ;
       : set_integer var = "labyrinth_position_y"  value = "-13" ;
       : update_graphic;
       : press_any_key;
       : goto "labyrinth_1_1";
       : redescribe;
   }
   : else_if (is_at "labyrinth_1_1" ) {
       : set_false "has_blueprint";
       : set_integer var = "labyrinth_position_x"  value = "0" ;
       : set_integer var = "labyrinth_position_y"  value = "-13" ;
       : set_integer var = "day_spend_labyrinth_enigma" value = "0";
       : update_graphic;
   }
   : else_if (is_at "labyrinth_4_2" ) {
       : play_incidental "incidental_useless_success";
       : set_true "has_blueprint";
   }
   : else_if (is_at "labyrinth_5_5") {
       : if (has_blueprint) {
           : success;
           : set_false "in_labyrinth";
           : set_false "is_labyrinth_open";
           : print "You did it! You're a hero, CC!";
           : create "florrie" target = "living_room";
           : print "Oh, Florrie is back!!!" ;
           : print "Why don't you <TALK<#cc0>> to her?" ;
           : set_true "is_florrie_alone_in_living_room" ;
           : set_false "is_june_in_living_room" ;
           : set_false "is_e_in_living_room" ;
           : destroy "june" ;
           : destroy "ee" ;
           # : redescribe ;
           : goto "living_room" ;
       }
       : else {
           : print "You found a way through, but missed the blueprint!";
       }
       : press_any_key;
       : goto "living_room";
       : redescribe;
   }
   : if (is_at "living_room" && in_labyrinth) {
      : play_incidental "incidental_failing_failure";
      : print "Well, that didn't work out, but it's not an easy task. Luckily, that was a simulation that 7Cs' AI ran through her algorithms. Thanks to that we found the mistake in advance so we are safe. Let's try again.";
      : set_false "in_labyrinth";
      : press_any_key;
      : redescribe;
   }
   : if (is_at "dream") {
      : if(!is_carried "map") {
         : print "When you get in a room, you can examine an object with <LOOK object<#cc0>> command. Type <LOOK map<#cc0>> to check the map in this room.";
      }
   }
   : if (is_at "labyrinth_ship_destroyed") {
        : failure ;
   }
   
}

######################################
#  On Command                        #
######################################

on_command {
   # use click as look->get->use command
   : match "click map" {
      : if (is_present "map" && !is_carried "map" && previous_command == sentence_raw()) {
         : print "You get the map (you could have done that with <get map<#cc0>>).";
         : set_sentence "get map";
      }
      : else_if (is_present "map" && !is_carried "map") {
         : set_string var="previous_command" (sentence_raw());
         : print "You look at the map (you could have done that with <look map<#cc0>>).";
         : set_sentence "look map";
      }
   }
   : match "click cake" {
      : if (previous_command == sentence_raw()) {
         : print ("You <get<#cc0>> the <"+first_cap(original "noun1")+"<#cc0>>!");
         : set_verb text="get";
      }
      : else {
         : set_string var="previous_command" (sentence_raw());
         : print ("You <look<#cc0>> at the <"+first_cap(original "noun1")+"<#cc0>>!");
         : set_verb text="look";
      }
   }
   : match "click wool; click rud; click 7c; click e; click june; click florrie" {
      : if (previous_command == sentence_raw()) {
         : print ("You <talk<#cc0>> to <"+first_cap(original "noun1")+"<#cc0>>!");
         : set_verb text="talk";
      }
      : else {
         : set_string var="previous_command" (sentence_raw());
         : print ("You <look<#cc0>> at <"+first_cap(original "noun1")+"<#cc0>>!");
         : set_verb text="look";
      }
   }
   : if (is_using_map) {
      : set_false "is_map_command";
      : match "look wool" {
         : set_sentence "nothing";
         : if(!has_seen_wool_puzzle) {
            : print "I should ask Wool if we can do something for him.";
         } : else_if (!is_puzzle_wool_solved) {
            : print "I should solve Wool's favorite puzzle... red chicken with blue wings.. what was it again?";
         } : else {
            : print "I solved Wool's puzzle, how smart am I?";
         }
         : set_true "is_map_command";
      }
      : match "look lounge" {
         : set_sentence "nothing";
         : if(!has_seen_laptop_puzzle) {
            : print "There might be something to do do in the living room?";
         } : else_if (!is_laptop_unlocked) {
            : print "I should unlock Florrie's laptop to make sure she did not left a message for me?";
         } : else_if (!is_puzzle_7c_solved) {
            : print "I found Florrie password, it was so unexpected. Did June get the same laptop?";
         } : else_if (!is_puzzle_ee_solved) {
            : print "I should go check the living room, I heard some cooing sounds and activity.";
         } : else_if (is_at "cc_hero_june") {
            : print "I should help E but what can I do?";
         } : else_if (is_present "ee" && is_puzzle_ee_solved && !is_labyrinth_open) {
            : print "I'm happy to have saved E, I wonder how tumultuous his feelings are.";
         } : else_if (is_labyrinth_open) {
            : print "The screen of living room finally opened? I should check on that.";
         } : else_if (is_florrie_alone_in_living_room && !is_puzzle_florrie_now) {
            : print "Can I help Florrie with something?";
         } : else_if (is_puzzle_florrie_now) {
            : print "As expected of Florrie, a very complicated problem. I should be able to solve it... I hope.";
         } : else_if (is_everybody_here) {
            : print "I'm hungry, can I get something somewhere?";
         } : else {
            : print "Let's find a way to eat cake!";
         }
         : set_true "is_map_command";
      }
      : match "look game" {
         : set_sentence "nothing";
         : if (!has_seen_rud_puzzle) {
            : print "We have heard noise coming from the gaming room for weeks, but nobody is leaving or entering? We should check it out.";
         } : else_if (!is_present "rud_happy") {
         
            : print "I have to find a way to help RuD win his bet. Maybe I could change every clocks several hours behind and give him some more time?";
         } : else {
            : print "I solved RuD problem, now he has won so much more time to play more.";
         }
         : set_true "is_map_command";
      }
      : match "look yard" {
         : set_sentence "nothing";
         : if (!has_seen_7c_puzzle) {
            : print "We should visit Crispy Garden, maybe there is some work I could help with.";
         } : else_if (!is_puzzle_7c_solved) {
            : print "Who could be the most popular? If 7Cs found it in 10 seconds, I should be able to find it too in less than 1000 time the time she took.";
         } : else {
            : print "Of course \"C-Cherries\" is the best! I really like their name.";
         }
         : set_true "is_map_command";
      }
      : match "exit -; leave -; return -; close -; m -; map -; use map; examine map; c -" {
         : set_true "tuto_used_map";
         : set_false "is_using_map";
         : set_sentence "nothing";
         : set_true "is_map_command";
         : redescribe;
      }
      : match "n -; w -; e -; s -; enter -" {
         : set_true "tuto_used_map";
         : set_false "is_using_map";
         : set_true "is_map_command";
         : redescribe;
      }
      : if (!is_map_command) {
         : print "I need to use <M<#cc0>> or <CLOSE<#cc0>> commands to close the map.";
         : set_sentence "nothing";
      }
   }
   : match "follow _;about _; credit _; credits _; readme _; examine cosmoose; cosmoose - ; dhxp -"  {
      : if ((verb_is "about" || verb_is "follow") && is_exists (s1())) {
         : set_sentence {("examine "+ rationalized "noun1")};
      }
      : else {
          : print "YOU CAN FOLLOW OR CHECK COSMOOSE EVERYWHERE: <cosmoose.org>[https://cosmoose.org]." ;
      }
   }
   : match "examine logo"  {
      : if (is_at "puzzle_florrie_laptop") {
          : print "YOU CAN FOLLOW OR CHECK COSMOOSE EVERYWHERE: <cosmoose.org>[https://cosmoose.org]." ;
      }
   }
   : match "get all" {
     : print "You don't have proper pockets, that's a little too much.";
   }
   : match "get toy ; get bull ; get star ; get plushie ; get boat ; get bed" {
      : if (is_at "cc_room") {
         : print "You are not a baby anymore. No need to take toys with you." ;
      }
   }

   : match "refresh _" {
      : set_sentence "look";
   }
   : match "verb noun" {
      : print "You need to type commands consisting in one verb or one verb and one noun, for example:\n\n>><EXAMINE<#cc0>>\n>><LOOK PIGEON<#cc0>>\n\nType <HELP<#cc0>> to have a summary of useful commands.";
   }
   : match "save cc; help cc" {
      : print "We will do it!";
   }
   : match "examine mirror"  {
      : if (is_at "cc_room") {
         : print "A mirror inspired by antique Venetian aesthetics. Except the usual floral details have been replaced with feathers and bird shapes." ;
      }
   }
   : match "examine star"  {
      : if (is_at "cc_room") {
         : print "You are definitely going to become the number one idol of the Cosmooverse! This star is a gentle reminder." ;
      }
   }
   : match "examine bull"  {
      : if (is_at "cc_room") {
         : print "One of the bouncy bulls you can find in the Cosmooverse." ;
      }
   }
   : match "examine bed"  {
      : if (is_at "cc_room") {
         : print "A bed that is easy to disassemble and transport, made by company IDEA." ;
      }
   }
   : match "examine porthole ; examine space"  {
      : if (is_at "cc_room" || is_at "cc_hero_june") {
         : print "A small view on the stars and planets nearby." ;
      }
      : if (is_at "living_room"|| is_at "puzzle_florrie_laptop") {
         : print "A premium view on the stars and planets nearby." ;
      }
      : if (is_at "wools_wheels") {
         : print "A nice view on the stars and planets nearby." ;
      }
      : if (is_at "crispy_garden") {
         : print "It's so sunny here." ;
      }
      : if (is_at "party_planet" || is_at "party_planet_inside") {
         : print "Not much to see here." ;
      }
   }
   : match "examine cube; examine toy"  {
      : if (is_at "cc_room") {
         : print "We all need our toys, no matter how grown up we are." ;
      }
   }
   : match "examine plushie"  {
      : if (is_at "cc_room") {
         : print "An old gift from Wool. Is it a bear, a lion? Who cares, you're too old to play with it." ;
      }
   }
   : match "examine boat"  {
      : if (is_at "cc_room") {
         : print "This boat is an old gift from RuD, a self-proclaimed space pirate who loves Earth pirates too." ;
      }
   }
   : match "examine communicator"  {
      : if (is_present "communicator" && !is_carried "communicator") {
         : print "This is Florrie <communicator<#cc0>>, what is it doing here?" ;
      } : else_if (is_carried "communicator") {
         : print "This is Florrie communicator, it's locked but you see <Dovalingo<#cc0>>™ notifications that you can open.";
      }
   }
   : match "get communicator"  {
      : if (is_present "communicator" && !is_carried "communicator") {
         : print "You got it, it's locked but you see <Dovalingo™<#cc0>> notifications that you can open.";
         : pocket "communicator";
      }
   }
   : match "give communicator"  {
      : if (is_carried "communicator") {
         : print (chance(50) ? "I still need to do some <Dovalingo™<#cc0>> before giving it.": "I will give give it back to Florrie when the time is right and I have gotten her back in highest <Dovalingo™<#cc0>> league.");
      }
   }
   
   : match "wake up; exit _; skip -" {
      : if (is_at "dream") {
         : print "You are waking up from your tutiful dream.";
         : set_sentence "exit";
      }
      : if (is_carried "stars") {
         : print "The stars you were holding are losing their reality.";
         : print "You don't really need them, you will become the most shining star of the universe.";
         : drop "stars";
      }
   }
   : if (is_present "map" && !is_carried "map" && (is_at "cc_room" || is_at "dream")) {
      : match "get map" {
        : print "You may be growing up quickly, you still have a lot to learn. This <map<#cc0>> may be useful. You take it!";
        : pocket "map";
        : set_sentence "nothing";
        : print "The <map<#cc0>> has been added to your <INVENTORY<#cc0>>.";
        : press_any_key;
      }
      
      : match "exit _" {
         : mask {
            : print "You may be growing up quickly, you still have a lot to learn. This <map<#cc0>> may be useful. You take it!";
            : pocket "map";
            : print "The <map<#cc0>> has been added to your <INVENTORY<#cc0>>.";
            : press_any_key;

         }
      }
   }
   : match "wake up; exit _" {
      : if (is_at "dream") {
         : goto "cc_room";
         : gosub "play_music";
      }
   }
   : match "examine map; map _; use map; m _" {
   
      : if (is_carried "map") {
            : clear_screen;
            : set_true "is_using_map";
            : update_graphic;
            : print "Close the map with <M<#cc0>> or <CLOSE<#cc0>>.";
      /*
          : set_theme "theme_mono";
          : clear_screen;
          : print {("^n^^c^<______<#000>><________<#000>>|<CC's Bedroom<#" + (is_at "cc_room"?"afa" : "faa")+">>|")};
          : print "^n^^c^--------------------------";
          : print {("^n^^c^|<Wool's Wheels<#" + (is_at "wools_wheels"?"afa" : "faa")+">>| <Common Room<#" + (is_at "living_room"?"afa" : "faa")+">>|")};
          : print "^n^^c^--------------------------";
          : print {("^n^^c^|<Party Planet<#" + (is_at "party_planet"?"afa" : "faa")+">><_<#000>>| <Crispy Yard<#" + (is_at "crispy_garden"?"afa" : "faa")+">>|")};
          : print "^n^^c^--------------------------";
          : print {("^n^^c^⬇<_____________<#000>>")};
          : print {("^n^^c^<Inside<#" + (is_at "party_planet_inside"?"afa" : "aaf")+">><_____________<#000>>")};

          : press_any_key;
          : set_theme "theme_base";
          : redescribe;
          */
          : if (is_at "dream") {
            : print "Well done! <Use the map<#cc0>> any time you are lost! (then close it with <close<#cc0>> or clicking on red cross in top-right)";
          }
      }
      : else_if (is_present "map") {
         : print "A <map<#cc0>> of the ship, could it be useful?";
      }
   }
   : match "sound _; music _; volume _" {
      : if (noun1_is "lower" || noun1_is "higher") {
         : set_integer var="current_volume_index" value="-1";
         : iterate "sound_volume_labels" {
            : if (int(sound_volume_values[index()]) == sound_volume) {
               : set_integer var="current_volume_index" (index());
            }
         }
         : if (current_volume_index != -1) {
            :if (noun1_is "lower") {
               : if (current_volume_index > 0) {
                  : decrement "current_volume_index";
               }
               : else {
                  : print "You are already at the lowest sound volume.";
                  : set_sentence "nothing";
               }
            }
            : else {
               : if (current_volume_index + 1 < count "sound_volume_labels") {
                  : increment "current_volume_index";
               }
               : else {
                  : print "You are already at the highest sound volume.";
                  : set_sentence "nothing";
               }
            }
            : set_noun1 (sound_volume_labels[current_volume_index]);
         } : else {
            : print "You are not on a named sound level (<LOWEST<#cc0>> | <LOW<#cc0>> | <NORMAL<#cc0>> | <HIGH<#cc0>> | <HIGHEST<#cc0>>) but at {sound_volume}%%";
            : set_sentence "nothing";
         }
      }
      : if (! verb_is "nothing") {
         : set_integer var="current_volume_index" value="-1";
         : iterate "sound_volume_labels" {
            : if (rationalized "noun1" == item()) {
               : set_integer var="current_volume_index" (index());
            }
         }
      }
      : if (! verb_is "nothing" && (preposition_is "on" || current_volume_index != -1 || (is_int( original "noun1") && int( original "noun1") >= 0 && int( original "noun1") <= 100))) {
         : mask {
            : set_string var="string_tmp" {(rationalized "noun1")}
            : set_sentence "nothing";
            : if (music_ever_enabled) {
               : if (!sysvar_bool "sysvar_sound_enabled") {
                  : set_sentence "sound on";
                  : set_false "is_sound_muted";
               }
            }
            : else {
               : gosub "set_sound_on";
               : if (music_ever_enabled) {
                  : gosub "play_music";
               }
               : else {
                  : set_string var="nothing_message" value="You have not enabled the music";
               }
            }
            : if (is_int(string_tmp)) {
               : set_integer var="sound_volume" (int(string_tmp));
               : print "Sound volume set to {sound_volume}%%.";
            } : else_if (current_volume_index != -1) {
               : set_integer var="sound_volume" (int(sound_volume_values[current_volume_index]));
               : print ("Sound volume set to "+string_tmp+" ("+sound_volume+"%%).");
            }
            : gosub "update_volume";
            : gosub "play_music";
         }
      }
      : else_if(noun1_is "off") {
         : mask {
           : set_sentence "sound off";
           # to prevent not restarting on SOUND ON
           : play_music "music_win";
           : set_string var = "current_track" value="";
           : set_true "is_sound_muted";
           : gosub "update_volume";
         }
      }
      : else_if (!verb_is "nothing") {
         : if (sysvar_bool "sysvar_sound_enabled") {
            : print "<SOUND OFF<#cc0>> | <LOWEST<#cc0>> | <LOW<#cc0>> | <NORMAL<#cc0>> | <HIGH<#cc0>> | <HIGHEST<#cc0>> | <0-100<#cc0>> to disable sound or change volume.";
         }
         : else {
            : print "<SOUND ON<#cc0>> | <LOWEST<#cc0>> | <LOW<#cc0>> | <NORMAL<#cc0>> | <HIGH<#cc0>> | <HIGHEST<#cc0>> | <0-100<#cc0>> to enable sound and change volume.";
         }
     }
   }
   : match "talk mirror; talk -"   {
      : if (is_at "cc_room" && !talked_to_mirror_and_solved_puzzles) {
         : set_true "talked_to_mirror" ;
         : print "The mirror says:" ;
         : print "\'To answer your question: " ;
         : print "Will you become the most famous superstar of the Cosmooverse?" ;
         : press_any_key ;
         : clear_screen;
         : print "No, the most famous superstar of the <Cosmooverse<#cc0>> will be a <pigeon<#cc0>>. Either musician <OK Feather<#cc0>> or bling foodie traveller <E<#cc0>>." ;
         : print "That being said, I'm just a talking mirror, whereas you are the true master of your destiny. Follow your dreams or die trying! That's the lesson I learned from <SnowWhite<#cc0>>." ;
         : print "Wow I'm tired after talking so much, I'll take a break. You can replay my previous answer any time. Ciao!\'" ;
         : press_any_key ;
         : clear_screen;
         : print "You wonder: Why pigeons though? You need to investigate and make sure to become the most famous idol of the Cosmooverse! Let's go." ;
         : press_any_key ;
         : redescribe;
      }
      : else_if (is_at "cc_room" && talked_to_mirror_and_solved_puzzles) {
         : print "The mirror says:" ;
         : print "\'The stars are watching you CC. You crave security and stability. " ;
         : print "This is exactly what you will get this month. " ;
         : print "Your career graph looks as promising as your deepest wishes, but beware of boredom. " ;
         : print "What? This wasn't your question? Well, this is my answer anyways. I feel exhausted, I'm taking a break. \'" ;
         : print "A study shows that kids get bored of a new toy after a month, but you are already tired of this mirror." ;
      }
   }
   : match "examine cosmooverse"   {
      : print "The universe where you live." ;
   }
   : match "examine ok"   {
      : print "YOU CAN FOLLOW OR CHECK OK FEATHER EVERYWHERE: <okfeather.com>[https://www.okfeather.com]." ;
   }
   : match "examine e"   {
      : print "E is a pigeon influencer. A good friend of June. His phone is full of <Dovalingo<#cc0>> missed lessons notifications." ;
   }
   : match "examine florrie"  {
       : print "Florrie is an AI programmer, she is currently busy preparing for a <Pyghon<#cc0>> programming certification." ;
   }
   : match "get florrie" {
      : if (is_present "florrie") {
         : print "Florrie is nice, but she is not a thing you can take." ;
      }
   }
   : match "examine pyghon"  {
       : print "One of the most popular programming languages, along with Lava, Rudy, Purrl, E and CC+ (your favorite)." ;
   }
   : match "examine june"   {
      : print "June is your inventor friend. She also makes a lot of music." ;
   }
   : match "get june" {
      : if (is_present "june" || is_present "june_kitchen") {
         : print "You try to catch June, but now she is the one running after you with a toy pistol." ;
      }
   }
   : match "examine pigeon; examine dove"   {
      : print "Pigeons are wonderful creatures. If you are not convinced yet, check out how they saved Christmas here: <okfeather.itch.io/feathery-christmas>[https://okfeather.itch.io/feathery-christmas]." ;
   }
   : match "get pigeon; get e" {
      : if (is_at "wools_wheels") {
         : print "You are not a baby anymore. No need to take toys with you." ;
      }
      : else_if (is_present "ee" || is_present "ee_kitchen") {
         : print "E may do some \'Meet and Greet\' from time to time, but he doesn't like to be touched." ;
      }
   }
   : match "examine snow; talk snow"   {
      : print "Everyone in the Cosmooverse knows the story of SnowWhite. The shared destiny of two women with seemingly nothing in common. One had unlimited beauty and ambition, while the other became a major figure of survivalism after pulling through a severe case of food poisoning." ;
   }
   : match "kill *" {
      : if (is_carried (s1())) {
         : print {("It would be a waste to "+original "verb" + " what I have taken!!!")};
      }
      : else_if (is_present (s1())) {
         : print "The thought could never even start to cross my mind.";
      }
      : else {
        : print "Violence is never the solution.";
      }
   }
   : match "examine comment" {
      : set_sentence "comment";
   }
   : match "comment _" {
      : set_string var="string_tmp" {(substring {offset -> (strlen {(original "verb")}) string -> (command_text())})};
      : if (string_tmp == "") {
        : if (comments == "") {
            : print "I have not made any <comment<#cc0>> yet";
        }
        : else {
            : print "Here are all the comments I have made:{comments}";
        }
     }
     : else {
        : print "I'm adding that to my list of <comments<#cc0>>.";
        : set_string var="comments" {(comments + "\n<_<#000>>" + string_tmp)};
     }

   }

   : match "examine puzzle" {
      : if (is_at "puzzle_florrie_laptop") {
        : print "The screen displays:" ;
        : print "Password = answer to this riddle: " ;
        : print "\'My feathers take me anywhere. The tones of grey in my plumage are reminiscent of everyone's favorite weather." ;
        : print "I am a star in the city, where admirers fawn over my shiny iridescent neck." ;
        : print "I brighten everyone's day by leaving white traces of my visit on cars and fresh air-dried laundry." ;
        : print "Who am I? UNLOCK me!\' " ;
      }
      : else_if (is_at "puzzle_hat" && !is_puzzle_wool_solved) {
        : print "An albatross, a bald eagle and a chicken each wear a hat. They see the colors of the others’ hats but not their own. " ;
        : print "Their hats were randomly drawn among 5 hats, 3 <RED<#c00>> ones, and 2 <BLUE<#00c>> ones. " ;
        : print "The albatross is asked to guess its hat color, but responds \'No idea\'. The bald eagle cannot guess its color either." ;
        : print "Then the chicken says \'I know my color\'. Which one is it? Type <GUESS<#cc0>> color." ;
      }
      : else {
        : print "Puzzles strengthen connections between brain cells, improve short-term memory and mental speed.";
      }
   }

   : match "clear -; redescribe -" {
        : redescribe;
   }

   : match "examine laptop; read laptop; use laptop"  {
      : if (is_at "living_room" && !is_laptop_unlocked) {
         : print "This laptop belongs to <Florrie<#cc0>>." ;
         : print "Maybe she left a note for you on it? Only one way to know." ;
         : goto "puzzle_florrie_laptop";
         : press_any_key ;
         : redescribe ;
      }
      : else_if (is_at "living_room" && is_laptop_unlocked) {
         : print "You swore not to touch Florrie's laptop ever again." ;
      }
      : if (is_at "puzzle_florrie_laptop") {
        : print "The screen displays:" ;
        : print "Password = answer to this riddle: " ;
        : print "\'My feathers take me anywhere. The tones of grey in my plumage are reminiscent of everyone's favorite weather." ;
        : print "I am a star in the city, where admirers fawn over my shiny iridescent neck." ;
        : print "I brighten everyone's day by leaving white traces of my visit on cars and fresh air-dried laundry." ;
        : print "Who am I? <UNLOCK<#cc0>> me!\' " ;
      }
      : else_if (is_at "party_planet_inside") {
         : print "The computer seems a bit sticky with all the spilled energy drink." ;
      }
      : else_if (is_at "living_room" && !is_exists "laptop") {
        : print "Florrie must have taken her laptop." ;
      }
   }

   : match "examine tree"  {
      : if (is_at "living_room" || is_at "puzzle_florrie_laptop") {
        : print "How can so many trees grow indoors?" ;
      }
   }
   : match "get tree" {
      : if (is_at "living_room" || is_at "puzzle_florrie_laptop") {
         : print "These trees won't come off the ground." ;
      }
   }
   : match "examine bench; examine table; examine chair "  {
      : if (is_at "living_room"|| is_at "puzzle_florrie_laptop") {
        : print "The perfect place to work, chat and drink coffee." ;
      }
   }
   : match "get bench; get table; get chair" {
      : if (is_at "living_room" || is_at "puzzle_florrie_laptop") {
         : print "You would probably need assistance to move the furniture." ;
      }
   }
   : match "examine screen; read screen; read information; examine information"  {
      : if (is_at "living_room" && !is_labyrinth_open ) {
        : print "This screen sometimes displays important information. Not now, for sure." ;
      }
      : if (is_at "living_room" && is_labyrinth_open ) {
        : print "The screen shows imminent danger. Who will save us? <ENTER<#cc0>> the command system!" ;
      }
      : if (is_at "puzzle_florrie_laptop") {
        : print "This laptop may be expensive, but you mainly notice the bread and chocolate crumbs stuck inside the keyboard. Florrie is a gourmet." ;
        : print "The screen displays:" ;
        : print "Password = answer to this riddle: " ;
        : print "\'My feathers take me anywhere. The tones of grey in my plumage are reminiscent of everyone's favorite weather." ;
        : print "I am a star in the city, where admirers fawn over my shiny iridescent neck.";
        : print "I brighten everyone's day by leaving white traces of my visit on cars and fresh air-dried laundry." ;
        : print "Who am I? UNLOCK me!\' " ;
      }
      : if (is_at "party_planet_inside" ) {
        : print "The screen displays what looks like a space game." ;
      }
   }
   : match "get screen" {
      : if (is_at "living_room" || is_at "puzzle_florrie_laptop" || is_at "party_planet_inside") {
         : print "It probably shouldn't be moved." ;
      }
   }
   : match "exit -"  {
      : if (is_at "puzzle_florrie_laptop" || (is_present "rud_sad" && is_at "party_planet_inside") || is_at "puzzle_hat") {
         : print "Come back and try to solve this puzzle whenever you want. Don't forget to use <HINT<#cc0>> if you are really stuck.";
         : press_any_key ;
         : goto "back";
         : redescribe;
      }
   }

    # : if (is_at "puzzle_florrie_laptop") {
    #  : if (!verb_is "pigeon" && !is_first_entered ()) {
    #        : print "Try again." ;
    #        : failure ;
    #     }
    #  }

    : match "pigeon -; unlock _"  {
      : if (is_at "puzzle_florrie_laptop") {
        : if (laptop_password == original "noun1" || verb_is "pigeon") {
            : print "How can Florrie need clues to remember such an easy password??? " ;
            : print "You wish you had never seen this... Florrie's browser history is nothing but..." ;
            : print "PIGEONS!!!" ;
            : print "Video \'TEQ Talk: Improve Office Efficiency\' shows a pigeon at a desk drinking a protein-packed cheese beverage, and then there's \'Learn Programming in Pyghon with E\'... " ;
            : print "How can you compete? So unfair!!! You quickly lock the computer and swear not to touch it ever again." ;
            : press_any_key;
            : success ;
            : set_true "is_laptop_unlocked" ;
            : goto "living_room";
            : redescribe;
        }
        : print "Try again." ;
        : failure ;
     }
   }

    : match "unlock dove; dove -"  {
      : if (is_at "puzzle_florrie_laptop") {
        : failure ;
        : print "Almost there, too bad there can only be one password." ;
        : press_any_key;
      }
    }

    : match "examine penguin"  {
      : if (is_at "puzzle_florrie_laptop") {
        : print "This logo was inspired by a scientist contracting penguinitis after a penguin bite. The most notable symptom is unconditional love towards penguins. Similar to pigeonitis." ;
      }
    }

   : match "get laptop"  {
      : if (is_at "living_room" || is_at "puzzle_florrie_laptop") {
        : print "This is not your <laptop<#cc0>>. <Florrie<#cc0>> should need it soon." ;
      }
   }

   : match "talk wool; talk - ; puzzle -"   {
      : if (is_at "wools_wheels" && !is_puzzle_wool_solved) {
         : print "You ask Wool about pigeons. He replies: \'Why are pigeons so popular?" ;
         : print "I don't know, as I am not interested in physical entities. Only logic moves me.\'" ;
         : goto "puzzle_hat" ;
         : redescribe ;
      }
      : if (is_at "puzzle_hat") {
         : print "An albatross, a bald eagle and a chicken each wear a hat. They see the colors of the others’ hats but not their own. " ;
         : print "Their hats were randomly drawn among 5 hats, 3 <RED<#c00>> ones, and 2 <BLUE<#00c>> ones. " ;
         : print "The albatross is asked to guess its hat color, but responds \'No idea\'. The bald eagle cannot guess its color either." ;
         : print "Then the chicken says \'I know my color\'. Which one is it? Type <GUESS<#cc0>> color." ;
      }
      : if (is_at "wools_wheels" && is_puzzle_wool_solved && is_wool_wheeled) {
         : print "Wool says: \'Alright, I'll continue my alternate proof of <Wooluum<#cc0>> Hypothesis' independence from ZFC. Isn't logic beautiful?\'" ;
         : print "You have no idea what this is about but it sounds boring." ;
      }
      : if (is_at "wools_wheels" && !is_wool_wheeled) {
        : print "Finally Wool might be getting some fresh air elsewhere." ;
      }
      : else_if ((is_present "wool" || is_present "wool_kitchen") && (is_florrie_in_living_room_with_cake || is_everybody_here)) {
         : print "Wool says: \'One thing you might observe after each birthday is the loss of collagen and its change from ordered bundles of fibres to fragmented and messy fibres." ;
         : print "One consequence is that wound healing doesn't work as well.\'" ;
         : print "Err... Thanks for wishing a happy birthday I guess???" ;
         : set_true "talked_to_someone_before_cake" ;
      }
   }

   : match "thank wool ; thank -" {
    : if (is_at "wools_wheels" && is_puzzle_wool_solved && is_wool_wheeled) {
         : print "Wool says: \'Alright, I'll continue my alternate proof of <Wooluum<#cc0>> Hypothesis' independence from ZFC. Isn't logic beautiful?\'" ;
         : print "You have no idea what this is about but it sounds boring." ;
    }
   }

   : match "examine wooluum; examine hypothesis; examine zfc" {
      : print "Wooluum Hypothesis states that: " ;
      : print "Party Planet has the smallest uncountable number of chicken trees." ;
      : print "Planet NL-21 has as many chicken trees as there exist real numbers." ;
      : print "The hypothesis is that Party Planet and Planet NL-21 actually have the same amount of chicken trees." ;
      : print "It's kinda hard to prove, but one can show that it's independent from Zestful Fried Chicken (ZFC) theory." ;
   }

   : match "examine wool"   {
      : print "Wool is a mysterious mechanic who can repair anything. Not very talkative, but can be a bit judgemental." ;
      : if (is_at "puzzle_hat" || is_at "wools_wheels") {
        : print "Wool can solve most problems with his brain. That's why he's often just standing there, not moving." ;
      }
   }

   : match "get wool" {
      : if (is_present "wool" || is_present "wool_kitchen") {
         : print "Wool may look like a giant plushie, but you cannot take Wool, he has feelings too." ;
      }
   }

   : match "a -; b -; c - "   {
      : if (is_at "puzzle_hat") {
        : print "A is an albatross, B is a bald eagle and C is a chicken. But we are not here to learn about the animal kingdom." ;
      }
   }

   : match "red -; guess _"  {
      : if (is_at "puzzle_hat") {
        : if (hat_color == original "noun1" || verb_is "red") {
            : print "Wool says: \'Correct. The chicken's hat is <red<#c00>> of course.";
            : print "I can <EXPLAIN<#cc0>> if you want.\'";
            : success ;
            : set_true "is_puzzle_wool_solved";
            : set_true "talked_to_mirror_and_solved_puzzles" ;
            : print "Alright, maybe answering riddles is one way to become famous? You should try with someone else. Let's go.";
            : goto "wools_wheels" ;
        }
        : else_if (hat_blue == original "noun1") {
            : print "Wool says: \'Nope.";
            : print "If you study a bit of logic (even Tarski theories should suffice), you should be able to guess the correct color next try.\'";
            : failure ;
        }
        : else {
            : print "Wool says: \'Did you hurt your head or something?";
            : print "You only have a choice between two colors, <red<#c00>> and <blue<#00c>>.";
            : print "If you study a bit of logic (even Tarski theories should suffice), you should be able to guess the correct color next try.\'";
            : failure ;
        }
     }
   }

   :match "blue -"  {
      : if (is_at "puzzle_hat" && !is_puzzle_wool_solved) {
         : print "\'Nope.";
         : print "If you study a bit of logic (even Tarski theories should suffice), you should be able to guess the correct color next try.\'";
         : failure ;
      }
   }

   :match "explain _ ; explain -"  {
      : if (is_at "wools_wheels" && is_puzzle_wool_solved) {
         : print "Let's call our 3 characters A, B and C." ;
         : print "A cannot guess its own color unless both B and C are <BLUE<#00c>>. So there must be at least one <RED<#c00>> hat among B and C." ;
         : print "Same for B." ;
         : print "But B could guess its own color if C was <BLUE<#00c>> and A was <RED<#c00>>. In this case it would mean B must be <RED<#c00>> too." ;
         : print "Since B's Big Brain cannot guess its own color, C must be <RED<#c00>>." ;
      }
   }

   : match "examine tool ; examine pyjeon ; examine bin; examine kirby; examine liqueon; examine guneon; examine mailbox"  {
      : if (is_at "wools_wheels") {
         : print "Wool likes his tools so much that he gave them names. There is mailbox Kirby, smart devices Liqueon, Guneon, Pyjeon..." ;
      }
   }
   : match "examine helmet"  {
      : if (is_present "wool" || is_present "wool_kitchen") {
         : print "Why would you assume Wool is wearing a helmet? " ;
      }
   }
   : match "get tool ; get bin" {
      : if (is_at "wools_wheels") {
         : print "Wool cannot live without this, you should leave it here." ;
      }
   }

   : match "get sign" {
      : if (is_at "party_planet") {
         : print "It's too heavy, and it wouldn't be nice." ;
      }
   }

   : match "examine poster ; examine pigeon ; examine game"  {
      : if (is_at "party_planet_inside") {
         : print "Tweet Fighter, a classic game. There's a poster too." ;
      }
   }

   : match "examine tweet ; examine fighter"  {
      : if (is_at "party_planet_inside") {
         : print "Tweet Fighter is a classic fighting game." ;
      }
   }

   : match "get poster; get guitar; get headphones; get frog ; get joystick ; get mouse ; get keyboard; get chair" {
      : if (is_at "party_planet_inside") {
         : failure ;
         : print "RuD will probably be very angry if someone touches his stuff." ;
      }
   }

   : match "examine door ; examine party; examine corridor; examine sign ; examine wall ; examine neon"  {
      : if (is_at "party_planet") {
         : print "There is not much here. Probably you should <ENTER<#cc0>> inside, or go somewhere else." ;
      }
   }

   : match "examine guitar ; examine headphones"  {
      : if (is_at "party_planet_inside") {
         : print "RuD has been learning music making since joining Windy Music Feedback." ;
         : print "It's a lovely place, you can join too by clicking this link: <windymusicfeedback.com>[https://indiemusicfeedback.com]." ;
      }
   }

   : match "examine frog"  {
      : if (is_at "party_planet_inside") {
         : print "The frog is an homage to RuD's mentor, an expert in martial arts who happens to be a frog. " ;
      }
   }

   : match "examine joystick ; examine keyboard ; examine mouse ; examine table"  {
      : if (is_at "party_planet_inside") {
         : print "The computer seems a bit sticky with all the spilled energy drink." ;
      }
      : else_if (is_at "puzzle_florrie_laptop") {
        : print "This laptop may be expensive, but you mainly notice the bread and chocolate crumbs stuck inside the keyboard. Florrie is a gourmet." ;
      }
   }
   : match "examine chair "  {
      : if (is_at "party_planet_inside") {
         : print "It's a gaming chair of course! You've seen DewDieDie try to sell some of these." ;
      }
   }

   : match "examine dewdiedie "  {
      : if (is_at "party_planet_inside") {
         : print "A popular gaming expert." ;
      }
   }

   : match "talk rud; talk -"  {
      : if (is_present "rud_sad" && is_at "party_planet_inside") {
         : set_true "talked_to_rud" ;
         : print "RuD greets you warmly: \'CC!!! You look so cute today!!!!\', then begins to whisper:" ;
         : print "\'I'm in great trouble CC. I made a bet with Wool that I'd reach the Diamond Rank in Tweet Fighter before the season ends, but the deadline is in 1 hour!" ;
         : print "Wool is so sneaky, he invited me to this <Windy Music Feedback>[https://indiemusicfeedback.com] club, so I spent the whole time making songs instead of gaming! Not fair!" ;
         : print "I can do a mini-game to catch up, but I can only choose one!!! And after a few hours some of them stop working!" ;
         : print "Can you help me choose? I only have 10 cans left of RedGull, but I'll let you take one!\'" ;
         : print "He takes a sip of energy drink." ;
         : print "Can you <ASSIST RuD<#cc0>> when you are ready?" ;
         : set_true "is_puzzle_rud_in_progress" ;
         : set_true "has_seen_rud_puzzle" ;
         : press_any_key ;
         : redescribe ;
      }
      : else_if (is_present "rud_happy" && is_at "party_planet_inside") {
         : set_true "talked_to_rud" ;
         : print "RuD is very focused, and doesn't want to be disturbed." ;
         : print "He takes a sip of energy drink." ;
      }
      : else_if ((is_everybody_here || is_florrie_in_living_room_with_cake) && is_at "party_planet_inside") {
        : print "RuD followed you to the gaming room." ;
        : print "It's probably because he wants to guard his energy drink reserve." ;
      }
      : else_if ((is_present "rud_happy"|| is_present "rud_kitchen")  && (is_florrie_in_living_room_with_cake || is_everybody_here)) {
             : print "RuD sings: \'Happy birthday CC!";
             : print "If you're happy and you know it, clap your hands, clap your hands!\'";
             : print "He takes a sip of energy drink." ;
             : set_true "talked_to_someone_before_cake" ;
      }
   }

   : match "examine bet"  {
       : if (talked_to_rud) {
         : print "RuD and Wool often make bets. This time, if RuD wins:";
         : print "Wool will repair RuD's broken and rusty umbrella drone. It has a built-in energy drink case (protecting it from shocks and leaks).";
         : print "If Wool wins:";
         : print "Wool will keep RuD's umbrella drone and turn it into a device that makes one float in the air, and protects from attacks and falling objects." ;
       }
   }

   : match "examine umbrella; examine drone"  {
       : if (talked_to_rud) {
         : print "RuD's umbrella drone is buried under a pile of old junk.";
         : print "It's a hands-free umbrella that can protect from the rain, but makes a lot of noise.";
       }
   }

   : match "examine rud"  {
       : if ((is_everybody_here || is_florrie_in_living_room_with_cake) && is_at "party_planet_inside") {
        : print "RuD followed you to the gaming room." ;
        : print "It's probably because he wants to guard his energy drink deposit." ;
       }
       : if (is_present "rud_sad" && is_at "party_planet_inside") {
         : print "RuD looks a bit sadder than usual. A future idol could surely cheer him up!" ;
         : print "He takes a sip of energy drink." ;
       }
       : else_if (is_present "rud_happy" && is_at "party_planet_inside") {
         : print "RuD is always working hard to beat his highest score." ;
         : print "He takes a sip of energy drink." ;
       }
       : else {
         : print "RuD is a pilot and occasional postman, very skilled but he can be lazy." ;
       }

   }

   : match "get rud; get drink" {
      : if (is_present "rud_happy" || is_present "rud_sad" || is_present "rud_kitchen") {
         : print "RuD replies: \'Heeeey this is my drink! Go buy your own! \'" ;
         : print "He takes a sip of energy drink." ;
      }
   }

   : match "examine drink"  {
      : if (is_at "party_planet_inside") {
        : print "These delicious drinks are a secret mix of artificial sweeteners and flavors, high fructose corn syrup, and stimulants. " ;
        : print "They also contain amino sulfonic acids like taurine, which may reverse nerve defects in experimental diabetic neuropathic rats." ;
        : print "You should try them!" ;
      }
   }

   : match "assist rud; assist -"  {
       : if (is_present "rud_sad" && is_at "party_planet_inside") {
         : print "RuD says: \'I have 1 hour left to gain 1444 points, and I can only play 1 mini-game among these three: " ;
         : print "1 - AKAFeather, a cursive writing game. You can earn 80 points per minute, but it stops working after 15 minutes, and you need to wait 43 minutes to start again." ;
         : print "2 - Brooms, a cleaning game. You can earn 26 points per minute, but it stops working after 54 minutes, and you need to wait 5 minutes to start again." ;
         : print "3 - Cosmoogang, a space cow farming game. You can earn 97 points per minute, but it stops working after 10 minutes, and you need to wait 20 minutes to start again." ;
         : print "Can you <GUESS<#cc0>> GAMENAME, for the game I should focus on?\'. " ;
         : print "He takes a sip of energy drink." ;
       }
   }

   : match "c - ; cosmoogang - ; 3 - "  {
       : if (is_present "rud_sad" && is_at "party_planet_inside") {
         : set_sentence "guess cosmoogang";
       }
   }

   : match "guess _"  {
       : if (is_present "rud_sad" && is_at "party_planet_inside") {
            : if (correct_game == original "noun1"|| "3" == original "noun1"|| "c" == original "noun1") {
             : create "energydrink";
             : pocket "energydrink";
             : print "RuD rushes to play Cosmoogang. Looks like he will win his bet! He looks so happy now. " ;
             : print "He takes a sip of energy drink." ;
             : print "But he doesn't look too impressed by your deduction skills." ;
             : print "He gives you a can of energy drink, as promised. " ;
             : print "It's in your <INVENTORY<#cc0>>, you can <GIVE<#cc0>>, <USE<#cc0>> it." ;
             : success ;
             : set_false "is_rud_sad";
             : set_false "is_puzzle_rud_in_progress" ;
             : destroy "rud_sad";
             : create "rud_happy";
             : set_true "is_seven_seas_crispy" ;
             : create "seven_seas" target = "crispy_garden" ;

            }
            : else_if ((incorrect_game_1 == original "noun1") || "1" == original "noun1" || "a" == original "noun1") {
                : print "You are about to suggest \'AKAFeather\', but notice a drawing pad is required to play. RuD excels with any controller... Except this one." ;
                : print "RuD takes a sip of energy drink." ;
                : failure ;
            }
            : else_if ((incorrect_game_2 == original "noun1") || "2" == original "noun1" || "b" == original "noun1") {
                : print "You are about to suggest \'Brooms\', but remember that RuD never cleans his room or anything, there's no way he can get Diamond with this game!" ;
                : print "RuD takes a sip of energy drink." ;
                : failure ;
            }
            : else {
                : print " RuD doesn't look too impressed by your deduction skills. \'Does this even exist?\' he asks." ;
                : print " He takes a sip of energy drink." ;
                : failure ;
            }
       }
   }

   : match "a - ; 1 - ; akafeather -"  {
       : if (is_present "rud_sad" && is_at "party_planet_inside") {
         : print "You are about to suggest \'AKAFeather\', but notice a drawing pad is required to play. RuD excels with any controller... Except this one." ;
         : print "RuD takes a sip of energy drink." ;
         : failure ;
       }
   }

   : match "b - ; 2 - ; brooms -"  {
       : if (is_present "rud_sad" && is_at "party_planet_inside") {
         : print "You are about to suggest \'Brooms\', but remember that RuD never cleans his room or anything, there's no way he can get Diamond with this game!" ;
         : print "RuD takes a sip of energy drink." ;
         : failure ;
       }
   }

   : match "take road"  {
      : if (is_at "party_planet" && is_exists "rud_sad") {
         : print "You can't right now, it's too early.";
      }
   }

   : match "give laptop"  {
      : if (is_at "living_room") {
         : print "This is not your <laptop<#cc0>>." ;
      }
   }

   : match "give drink "  {
      : if ((is_present "rud_happy" || is_present "rud_kitchen") && is_carried "energydrink") {
         : play_incidental "incidental_ok";
         : print "RuD says: \'Look I promised that if you helped I'd give you this can. It already hurts me to see it go, so please keep it out of my sight.\'" ;
         : print "He takes a sip of his own energy drink." ;
      }
      : if ((is_present "seven_seas" || is_present "sevenseas_kitchen") && is_carried "energydrink") {
         : play_incidental "incidental_ok";
         : print "Seven Seas says: \'I really appreciate your gesture but I think I am allergic to one component of this drink." ;
         : print "Last time I tried it, I began shaking everywhere and lost all control of my movements." ;
         : print "It might contain too much taurine.\'" ;
      }
      : if ((is_present "june"|| is_present "june_kitchen") && is_carried "energydrink") {
         : play_incidental "incidental_ok";
         : print "June says: \'Oh it's the juice that looks like Clayrox toilet cleaner! Yeah tastes great, I don't want to deprive you of it!\'" ;
      }
      : if ((is_present "wool"|| is_present "wool_kitchen") && is_carried "energydrink") {
         : play_incidental "incidental_ok";
         : print "Wool says: \'No thanks. People think energy drinks boosts your attention, but it's all a lie.\'" ;
      }
      : if ((is_present "ee" || is_present "ee_kitchen") && is_carried "energydrink") {
         : play_incidental "incidental_ok";
         : print "E says: \'When I tried this, my disappointment was immeasurable and my day was ruined.\'" ;
      }
      : if (is_present "florrie" && is_carried "energydrink" && !has_florrie_drank) {
         : play_incidental "incidental_ok";
         : print "Florrie takes a sip of energy drink..." ;
         : press_any_key ;
         : print "She coughs for a while, then disappears for a minute, then comes back and whispers:" ;
         : print "\'Thanks CC, it was so thoughtful of you!" ;
         : print "Please do not think I am being ungrateful, I truly cherish your gesture." ;
         : print "Maybe I am coughing because of post-exam stress? " ;
         : print "It could have affected my sense of taste... Look CC, the only thing that matters is what you think. " ;
         : print "Don't put too much focus on other people's opinions. " ;
         : print "If you enjoy this drink, then more power and energy to you!\' " ;
         : set_true "has_florrie_drank" ;
      }
      : else_if (is_present "florrie" && is_carried "energydrink" && has_florrie_drank) {
         : play_incidental "incidental_failing_failure";
         : print "Florrie says she hears her phone ringing, and excuses herself." ;
      }
   }

   : match "drink drink; drink -"  {
      : if (is_carried "energydrink") {
         : print "You take a sip of energy drink." ;
         : print "It reminds you of cough syrup, weird but a bit addictive." ;
      }
      : else {
         : print "You think about taking a sip of energy drink." ;
      }
   }

   : match "examine leaderboard; examine leaders; examine leader"  {
      : if (is_at "party_planet_inside" && is_exists "rud_sad") {
        : print "RuD is so close to the top!!!! Only beaten by a certain OK.F, who must be a nerd." ;
      }
   }

   : match "show compassion"  {
      : if (is_at "party_planet_inside") {
         : print "RuD looks at you with glassy eyes and takes a sip of energy drink." ;
      }
   }

   : match "get chicken; taste chicken; grab chicken; seize chicken; eat chicken"  {
    : if (is_at "crispy_garden" && is_present "chicken_wing" && !is_carried "chicken_wing") {
        : play_incidental "incidental_useless_success";
        : print "You take a chicken fruit from the tree. It's delicious, full of vitamins, and grown without pesticides." ;
        : pocket "chicken_wing" ;
        : print "This <WING<#cc0>> is now in your <INVENTORY<#cc0>>." ;
    }
    : else_if (is_at "crispy_garden") {
        : print "These fruits from the tree are delicious, full of vitamins, and grown without pesticides." ;
    }
    : else {
        : print "The Crispy Yard has some crispy chicken on the trees." ;
    }
   }

   : match "get spherificator; take spherificator"  {
    : if (is_at "wools_wheels" && is_present "spherificator" && !is_carried "spherificator") {
        : play_incidental "incidental_useless_success";
        : print "You sneakily take the Banach-Spherificator. You don't know how to use it though." ;
        : pocket "spherificator" ;
        : print "This <SPHERIFICATOR<#cc0>> is now in your <INVENTORY<#cc0>>." ;
    }
    : else_if (is_at "wools_wheels") {
        : print "Wool has only one Banach-Spherificator, he takes good care of his tools." ;
    }
    : else {
        : print "Only Wool uses this kind of tool." ;
    }
   }

   : match "give chicken"  {
       : if (is_carried "chicken_wing") {
         : if ((is_present "rud_happy" || is_present "rud_kitchen")) {
            : play_incidental "incidental_ok";
            : print "RuD says: \'Thanks, but I don't want to get my fingers dirty while gaming.\'" ;
            : print "He takes a sip of energy drink." ;
         }
      : if ((is_present "seven_seas" || is_present "sevenseas_kitchen")) {
         : play_incidental "incidental_ok";
         : print "Seven Seas says: \'Interesting, as this contains vitamin C and carotenoids, it is considered a CC-rich food." ;
         : print "Certainly nutritious for you, but not as useful for me.\'" ;
      }
      : if ((is_present "june"|| is_present "june_kitchen")) {
         : failure;
         : print "June says: \'Thanks, but I grow my own in my lab and they are way tastier. Please try them some time!\'" ;
      }
      : if ((is_present "wool"|| is_present "wool_kitchen")) {
         : failure;
         : print "Wool says: \'Thanks, but my flying tool friend Pyjeon can go and grab some for me anytime.\'" ;
      }
      : if ((is_present "ee" || is_present "ee_kitchen")) {
         : play_incidental "incidental_ok";
         : print "E takes a bite of the chicken wing." ;
         : print "E says: \'Not too bad, but I prefer the ones that June give me.\'" ;
      }
      : if (is_present "florrie") {
         : play_incidental "incidental_ok";
         : print "Florrie takes a bite of the chicken wing..." ;
         : print "Florrie says: \'Thanks CC, it tastes super good! \'" ;
         
      }
    }
   }
   : match "give spherificator"  {
       : if (is_carried "spherificator") {
         : if ((is_present "rud_happy" || is_present "rud_kitchen")) {
            : play_incidental "incidental_ok";
            : print "RuD says: \'I've seen wool guarding it like a treasure, how did you get it? Hey I'll trade an energy drink for it!\'" ;
            : print "You politely decline, while he takes a sip of energy drink." ;
         }
         : if ((is_present "seven_seas" || is_present "sevenseas_kitchen")) {
             : play_incidental "incidental_ok";
             : print "Seven Seas says: \'Interesting, is it some kind of measuring device?" ;
             : print "My data does not contain any usage manual. How unfortunate.\'" ;
         }
         : if ((is_present "june"|| is_present "june_kitchen")) {
             : play_incidental "incidental_ok";
             : print "June says: \'No thanks, I don't understand why he uses such primitive tools." ;
             : print "I can measure everything perfectly with my gyro-bubble gum device!\'" ;
         }
         : if ((is_present "wool" || is_present "wool_kitchen")) {
             : print "Wool is deep in thoughts, he does not even notice you." ;
         }
         : if ((is_present "ee" || is_present "ee_kitchen")) {
             : play_incidental "incidental_ok";
             : print "E looks puzzled, like chicken in front of a knife." ;
         }
         : if (is_present "florrie") {
             : play_incidental "incidental_ok";
             : print "Florrie says: \'Thanks, but I would prefer some chicken wing or chocolate!\'" ;
         }
       }
   }

   : match "get mirror ; get tree"  {
      : if (is_present "mirror") {
        : print "Wow, you really have strong muscles. Thankfully this mirror is very sturdy.";
      }
      : if (is_present "tree") {
        : print "Wow, you really have strong muscles. Thankfully these trees grow back very fast." ;
      }
   }



   : match "examine chicken; examine tree"  {
      : if (is_carried "chicken_wing") {
        : print "Fruits from the chicken tree are delicious, full of vitamins, and grown without pesticides." ;
      }
   }
   : match "examine garden; examine greenhouse; examine shrub ; examine glass; examine chicken; examine tree"  {
      : if (is_at "crispy_garden") {
        : print "Everyone loves chicken trees here. The sweet smell of wings, drums, and flats evokes summertime." ;
      }
   }

   : match "examine plant ; examine grass"  {
      : if (is_at "crispy_garden") {
        : print "The stars of this place are the chicken trees." ;
      }
   }

   : match "examine spherificator"  {
      : if (is_carried "spherificator") {
        : print "You turn is around in your paws, but have no idea how that can work." ;
      }
      : else_if (is_at "wools_wheels") {
        : print "Wool said the Banach-Spherificator is the best measuring tool around. Old but reliable." ;
      }
   }

   : match "examine seven"  {
       : if (is_at "crispy_garden") {
         : print "SevenSeas is the walking encyclopedia we all dream of living with. An AI who can analyze any set of data. She <sing<#cc0>>s during her free time." ;
       }
       : else {
         : print "SevenSeas is an AI who can analyze any set of data." ;
       }
   }

   : match "talk seven ; talk -"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && !is_puzzle_seven_seas_now && !can_leave_crispy_garden) {
       
         : print "You ask SevenSeas about pigeons. She replies: \'Pigeons dominating online stardom? That does not coincide with the data I have!" ;
         : print "To become a successful online entertainer, one must upload regular content with professional editing, also find a unique style and niche audience, it's a lot of work!\'" ;
         : print "Hmm... You think she sounds really dull. By the way, who's the most famous star? Let's ask SevenSeas." ;
         : print "She says: \'The most famous star is... Wait CC, are you even listening to me? You look so bored." ;
         : print "Why don't you try to find out by yourself? \'" ;
         : print "Hmm... Maybe you should <TALK<#cc0>> to her again." ;
         : set_true "is_puzzle_seven_seas_now" ;
         : press_any_key ;
         : set_true "has_seen_7c_puzzle";
         : redescribe ;
         }
         : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
             : print "\'The four current most popular online hosts are:" ;
             : print "\'beats to mow the lawn to\', a music DJ" ;
             : print "\'C-Cherries\', introducing movie trailers" ;
             : print "\'DewDieDie\', a video game expert" ;
             : print "\'8k-Minute Recipes\', a cooking enthusiast." ;
             : print "Let's call them B, C, D and E. 3 of them are equally popular, but there is only 1 number one!" ;
             : print "I'll give you a <CLUE<#cc0>> for the channel you want, can you then <GUESS<#cc0>> who is the most popular?\'" ;
             : print "Use \'<CLUE<#cc0>> channel\' (e.g. CLUE E) whenever you are ready for SevenSeas to give a clue." ;
             : print "If you know the answer, \'<GUESS<#cc0>> channel\' (e.g. GUESS E) whenever you are ready." ;
         }
         : if (is_at "crispy_garden" && is_exists "seven_seas" && !is_puzzle_seven_seas_now && can_leave_crispy_garden) {
             : print "You are becoming a puzzle master!" ;
         }
         : else_if ((is_present "seven_seas" || is_present "sevenseas_kitchen") && (is_florrie_in_living_room_with_cake || is_everybody_here)) {
             : print "SevenSeas sings: \'Please don't let it define ya";
             : print "We were all made to die-ya";
             : print "Like worker bees, like compost bags" ;
             : print "That makes you want to feel alive, yeah\'" ;
             : print "Well... You had no idea SevenSeas could be so heavy-hearted. You will definitely throw her a huge party one of these days." ;
             : set_true "talked_to_someone_before_cake" ;
      }
   }

   : match "clue b ; clue beat ; clue - ; ask clue"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
            : print "\'beats to mow the lawn to\' is as popular as \'DewDieDie\'." ;
       }
   }

   : match "get seven" {
      : if (is_present "seven_seas" || is_present "sevenseas_kitchen") {
         : print "SevenSeas starts singing: \'Please please release me, let me go... \', then takes a more menacing tone" ;
         : print "\'Stop it or I'll sing The Daphne Song! \'" ;
      }
   }

   : match "examine daphne" {
         : print "\'The Daphne Song\' is a lullaby from \'The Guy Who Sings Your Name Over and Over\'." ;
   }

   : match "clue c; clue cherries; clue cherry; clue ccherries"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
            : print "I love \'C-Cherries\', they really use cutting edge cinema technology." ;
       }
   }

   : match "clue d; clue dew; clue dewdiedie"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
            : print "\'DewDieDie\' is as popular as \'beats to mow the lawn to\'." ;
       }
   }

   : match "clue e; clue eight; clue 8; clue 8k; clue eightk; clue eightkminuterecipes"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
            : print "I love \'8k-Minute Recipes\'!!! They have a great cheese lasagna recipe with everything made from scratch. It's as popular as \'beats to mow the lawn to\'." ;
       }
   }

   : match "2 -; two -; c -; cherry -; cherries -; ccheries -" {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
         : set_sentence "guess C";
       }
   }
   : match "guess two; guess 2; guess c; guess cherries; guess cherry; guess ccherries"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
         : print "Well-done! Indeed, C-Cherries is currently the top star." ;
         : print "C-Cherries looks very wealthy. That's probably the main explanation for this incredible success." ;
         : success ;
         : print "SevenSeas says: \'CC, I may have another suggestion for becoming popular." ;
         : press_any_key ;
         : print "My data shows heroes are popular. You could become one? " ;
         : print "A hero is someone who saves lives." ;
         : print "According to statistics, choking is a most common emergency. Here are the first-aid steps: " ;
         : print "1. Give 5 back blows. " ;
         : print "2. Give 5 abdominal thrusts (also known as the Heimlich maneuver)." ;
         : print "3. Alternate between 5 blows and 5 thrusts until the blockage is dislodged." ;
         : press_any_key ;
         : print "And voilà. I cannot wait to watch you experiment this technique!\'" ;
         : print "This sounds like too much information, of the boring kind. Let's scram." ;
         : set_true "can_leave_crispy_garden" ;
         : set_true "can_create_june_e" ;
         : create "june" target = "living_room";
         : create "ee" target = "living_room";
         : destroy "laptop" ;
         : set_true "is_june_in_living_room" ;
         : set_true "is_e_in_living_room" ;
         : set_false "is_puzzle_seven_seas_now" ;
         : set_true "is_puzzle_7c_solved";
         : press_any_key ;
         : redescribe ;
       }
   }

   : match "one -; 1 -; three -; 3 -; four -; 4 -; b -; beat -; d -; dew -; dewdiedie - ; e -; eight -; 8 -; 8k -; eightk -; eightkminuterecipes -; wrong -"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
         : set_sentence "guess wrong";
       }
   }
   : match "guess one; guess 1; guess three; guess 3; guess four; guess 4; guess b; guess beat; guess d; guess dew; guess dewdiedie ; guess e; guess eight; guess 8; guess 8k; guess eightk; guess eightkminuterecipes; guess wrong"  {
       : if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
         : print "Maybe you need another <CLUE<#cc0>>?" ;
         : failure ;
       }
   }

   : match "sing _" {
      : if (is_present "seven_seas") {
        : print "SevenSeas starts to sing: \'I have a dream, about a place I wanna go...\' but suddenly takes a louder deeper voice and frenetically repeats \'DAPHNE DAPHNE DAPHNE...\'." ;
      }
      : else_if (is_present "rud_sad") {
        : print "RuD sings Cosmoose's hit \'Release Me\': \'If we'll make it outta here, I'll need a vacation \'" ;
        : print "He takes a sip of energy drink." ;
      }
      : else_if (is_present "rud_happy") {
        : print "RuD sings Cosmoose's hit \'I wanna conquer youuuuu yeah!\'. Who knew he had such golden pipes?" ;
        : print "He takes a sip of energy drink." ;
      }
      : else_if (is_present "wool") {
        : print "Wool sings \'Time to clap your hands, clap your hands and GO!\'. Who knew he liked such mainstream music?" ;
      }
      : else_if (is_present "florrie") {
        : print "Florrie sings \'So crispy, so happy, all the other wings now seem so mushy!\'. She must have been to the chicken tree not long ago." ;
      }
      : else_if (is_present "june" && is_present "ee") {
        : print "June and E sing OK Feather's hit \'Coocoo Cafe\'. You can listen to this song at the end of the game <Feathery Christmas>[https://okfeather.itch.io/feathery-christmas]." ;
      }
      : else_if (is_puzzle_florrie_solved) {
        : print "All the people in the room begin singing \'생일 축하합니다 지구에서 우주에서 제일 사랑합니다\'." ;
      }
      : else {
         : print "You start singing your favorite viral song, \"Cosmoose Gang\".";
      }
   }

   : match "x fresh; x air; x smell; get fresh; get air; x smell; smell _ ; breathe *; breathe -"  {
      : if (is_at "cc_room") {
         : print "Let's <EXIT<#cc0>> and get some fresh air.";
      }
      : else_if (is_at "party_planet_inside") {
         : print "The mixed smell of spilled energy drinks and crisps really makes me want to cook a proper meal.";
      }
      : else {
         : print "It's nice to get some fresh air.";
      }
   }

   : match "talk korean ; talk -"  {
    : if (is_at "living_room" && is_exists "june") {
        : print "June sings the song she wrote: \'빨리 빨리 빨리 time to start\'" ;
    }
    : else_if (is_at "living_room" && is_exists "ee") {
        : print "E sings the song June wrote: \'빨리 빨리 빨리 time to start\'" ;
    }
   }

   : match "talk june"  {
      : if (is_at "living_room" && is_exists "june" && !talked_to_e) {
          : print "You ask June how a pigeon could be more popular than you. It deserves an explanation!" ;
          : print "June replies: \'Why ask me, while you have a pigeon right here! Talk to E and ask him away!" ;
      }
      : else_if (is_at "living_room" && is_exists "june" && !is_puzzle_ee_solved && !talked_to_june) {
          : set_false "is_seven_seas_crispy" ;
          : set_false "is_wool_wheeled" ;
          : destroy "seven_seas" ;
          : destroy "wool" ;
          : print "June says: \'Hey CC! Wanna see my Pigeoshop software? It transforms any face or body into a realistic pigeon!" ;
          : print "Florrie uses it all the time. Well... Might be because I hacked her laptop, but her password is so easy to remember! \'" ;
          : print "OK... That explains Florrie's pigeon browsing history. What does June have to say about the mirror's prediction?" ;
          : press_any_key ;
          : print "She replies: \'Does the mirror always tell the whole truth? Well, no machine can tell the whole truth! " ;
          : print "Imagine a mirror giving all the answers! Then the world would be forever at peace, which is definitely NOT happening now hahaha. " ;
          : print "However, what I know for sure is MY TRUTH!" ;
          : print "In my world, pigeons will always be number 1!\'" ;
            # : redescribe ;
          : press_any_key ;
          : print "You start feeling hungry. Also, it's your birthday and no one said anything. Why is the world so unfair?" ;
          : print "You wrap yourself in your safety blanket, feeling so sad your eyes begin to water." ;
          : print "Where is your cake???" ;
          : set_true "talked_to_june" ;
      }
      : else_if (is_at "living_room" && is_exists "june" && is_puzzle_ee_solved && !is_labyrinth_open) {
          : print "June says: \'Wow, you're a real hero! Thank you for saving E, I'm looking forward to his new videos!\'" ;
      }
      : else_if (is_at "living_room" && is_exists "june" && is_labyrinth_open) {
            : print "She is watching a video of E, giggling. Does she really enjoy that content?" ;
            : print "She seems totally unfazed by the alarm though." ;
      }
      : else_if ((is_present "june" || is_present "june_kitchen") && (is_florrie_in_living_room_with_cake || is_everybody_here)) {
         : print "June sings: \'꽃보다 더 곱게 별보다 더 밝게 사자보다 용감하게";
         : print "Happy birthday to you 깃털 같은 내 친구야 만수무강 하시라~~~~~~!!!!";
         : print "Brighter than flowers, brighter than stars, braver than lions" ;
         : print "Happy birthday to you, my feather-like friend, you shall live forever!!!!\'" ;
         : print "Beautiful. This version of the song is your favorite." ;
         : set_true "talked_to_someone_before_cake" ;
      }
   }

   : match "talk pigeon"  {
        : print "You start coocooing like you've seen pigeons do. What a great sound!" ;
        : if (is_present "ee") {
              : print "Pigeon E is looking at you funny. He doesn't seem too impressed." ;
        }
        : if (is_present "june") {
              : print "June starts coocoing with you!" ;
        }
   }

   : match "talk e"  {
        : if (is_at "living_room" && is_exists "ee" && !is_puzzle_ee_solved) {
              : set_false "is_seven_seas_crispy" ;
              : set_false "is_wool_wheeled" ;
              : destroy "seven_seas" ;
              : destroy "wool" ;
              : print "E says: \'Want to know the secret of my viral videos?" ;
              : print "I am passionate about what I do. Everyday, fans send me coupons to try new pizzas, and I document my journey eating pizzas. " ;
              : print "Sometimes I receive 50, even 100 coupons the same day, but I am committed to using every fresh daily coupon. I think my dedication is what brings happiness to my fans." ;
              : print "One fan gifted me this gold necklace, I will always cherish it." ;
              : press_any_key ;
              : print "It's still a real job though, you don't just do this for yourself. One subscriber called RuDenergy paid a hefty amount to see a comparison review of different energy drinks." ;
              : print "How to describe these beverages... My disappointment was immeasurable and my day was ruined. But your fans are always more important, and it was good money.\'" ;
              : set_true "talked_to_e" ;
        }
        : if (is_at "living_room" && is_exists "ee" && is_puzzle_ee_solved && !is_labyrinth_open) {
            : print "After you carefully followed SevenSeas' instructions, E collapses on the floor..." ;
            : print "..." ;
            : press_any_key ;
            : print "Suddenly, he hysterically jumps at you!!! \'Hohoho I bet that scared you!!! But I swear I wasn't faking the first time!\'" ;
            : print "What an unfunny guy. How can he be so popular, young punks these days have no taste." ;
            : print "June is also crying with laughter, while filming. She says \'This video will be viral HeroCC, great job!\'" ;
            : press_any_key ;
            : print "Oh no!!!!!! The screen is flashing and beeping!!!! What's going on?" ;
            : print "Let's <ENTER<#cc0>> the command panel to know, quick!" ;
            : set_true "is_labyrinth_open" ;
            : redescribe ;
        }
        : else_if (is_at "living_room" && is_exists "ee" && is_labyrinth_open) {
            : print "\'Don't you think you have something more pressing to do than talk to me again?\'" ;
        }
        : else_if ((is_present "ee" || is_present "ee_kitchen") && (is_florrie_in_living_room_with_cake || is_everybody_here)) {
         : print "E says: \'This cake is rather small." ;
         : print "For my birthday my subscribers sent me 77 cakes. ";
         : print "I also received flour, milk and sugar to prepare for food shortage.\'" ;
         : print "Okaaaaay... Don't meet your idols, they say. " ;
         : set_true "talked_to_someone_before_cake" ;
      }
   }


   : match "examine necklace"  {
      : if (is_exists "ee") {
        : print "<E<#cc0>> always wears this bling gold necklace. Its symbol means wealth, and refers to the authorities supervising credit institutions and the stability of the financial system." ;
      }
   }

   : match "get necklace" {
      : if (is_present "ee" || is_present "ee_kitchen") {
         : print "When you become a big star you will get way nicer stuff than this tacky necklace." ;
      }
   }

   : match "ask cake ; ask june ; ask -"  {
       : if (is_at "living_room" && is_exists "june" && is_exists "ee" && !is_puzzle_ee_solved && talked_to_june && talked_to_e) {
            : print "E notices your distress and starts laughing." ;
            : print "He says: \'Hehehe, I was secretly filming you, now I know what my next viral video will be!" ;
            : print "The Cosmooverse's most notorious CRYBABY! Cry CC Cry!\'" ;
            : press_any_key ;
            : print "You are mortified. You don't want to be that kind of celebrity." ;
            : print "June gives you a small plastic thing:" ;
            : print "\'This is a magic <beak<#cc0>>, it transforms you into a superhero called HeroCC.\'" ;
            : print "As fishy as it sounds, you try it on and..." ;
            : press_any_key ;
            : goto "cc_hero_june" ;
            : redescribe ;
       }
   }

   : match "examine beak; examine herocc; examine hero; talk june; thank june; beak -; talk -; get beak"  {
      : if (is_at "cc_hero_june") {
        : success ;
        : print "This thing looks like a Belgian cuberdon, those raspberry gummy candies." ;
        : print "Wow! You feel lighter and different." ;
        : press_any_key ;
        : play_incidental "incidental_failing_failure";
        : print "You hear a strangled noise." ;
        : print "E, who was eating popcorn, is starting to choke!!!!!" ;
        : press_any_key ;
        : print "June asks: \'E are you choking??? If so, make an OK sign!!\'" ;
        : print "You know well that pigeons don't make OK signs... And remember SevenSeas' wise advice." ;
         : print "Some of your friends are passing by and can help you, but do you remember SevenSeas' advice?" ;
         : gosub "play_choking_e_puzzle";
         : print "Awesome! Thanks for helping save E! Now try to <TALK<#fee>> to him." ;
      }
   }
   : match "transform -; transform _" {
      : print "You wish you could transform yourself into the most famous idol. But life is hard.";
   }
   : match "cry -; cry _" {
      : print "Today is your birthday CC. Which means you are all grown up, and grown-ups don't cry unless they accidentally reboot their computer and lose unsaved files.";
   }

   : match "stalk _" {
      : if (is_present "florrie") {
        : print "You quickly go and cut a flower stalk, and give it to Florrie." ;
        : print "Thanks to you, Florrie has accumulated a huge pile of flower stalks." ;
      }
      : else {
        : print "You start pretending you are a detective and hide to observe the room. ";
        : print "But then realize you are too old to play like this." ;
        : print "Now you find fruitful conversations more refined. Especially when they're about chicken wings." ;
      }
   }

   : match "talk florrie ; talk -"  {
      : if (is_exists "florrie" && is_at "living_room" && !is_puzzle_florrie_solved ) {
        : print "Florrie warmly greets you and listens to your accomplishments." ;
        : print "She says: \' So now you are a hero and a puzzle master? Wonderful!!!" ;
        : print "Speaking of puzzles, I officially passed my Pyghon exam! But I almost failed because I couldn't remember my password..." ;
        : print "Also, there was this question to quickly solve! Can you try it CC? Here it is:\'" ;
        : press_any_key ;
        : set_true "is_puzzle_florrie_now" ;
        : print "The following sentence:" ;
        : print "\'Few radios play June's song.\'" ;
        : print "translates to (thanks to a mysterious mathematical formula):" ;
        : print "19-14-257" ;
        : print "157-4-10-40-109-175" ;
        : print "124-70-4-304" ;
        : print "49-214-95-14'175" ;
        : print "175-109-95-25" ;
        : press_any_key ;
        : print "Can you guess the original sentence behind the following:" ;
        : print "109-124-14-95" ;
        : print "175-109-214-157-7-14" ;
        : print "95-109-257" ;
        : print "<TYPE<#cc0>> THEFULLANSWER (without spaces)." ;
        : print "<HINT<#cc0>> can help if you are stuck. " ;
      }
      : else_if (is_present "florrie"  && (is_florrie_in_living_room_with_cake || is_everybody_here)) {
             : print "Florrie sings: \'Happy birthday CC!";
             : print "Try this cake we made with plenty of";
             : print "C6H12O6 it's so sweet\'" ;
             : print "Hmm... Not sure what this is all about." ;
             : set_true "talked_to_someone_before_cake" ;
      }
   }

   : match "open source"  {
      : if (noun2_is "now") {
         : set_sentence "opensourcenow";
      }
   }
   : match "opensourcenow -; open sourcenow; opensource now" {
        : if (is_exists "florrie" && is_at "living_room" && is_puzzle_florrie_now ) {
            : print "Awesome!!! I wonder what it means though." ;
            : success ;
            : set_false "is_puzzle_florrie_now" ;
            : set_true "is_puzzle_florrie_solved" ;
            : set_true "is_everybody_here" ;
            : set_false "is_florrie_alone_in_living_room" ;
            : print "Everybody has arrived!!!!" ;
            : print "Wool, RuD, SevenSeas, are here with June, E and Florrie!" ;
            : print "<TALK<#cc0>> to them, so you can <EAT<#cc0>> cake!" ;
            : create "wool_kitchen" ;
            : create "sevenseas_kitchen" ;
            : create "rud_kitchen" ;
            : create "june_kitchen" ;
            : create "ee_kitchen" ;
            : press_any_key ;
            : set_true "you_win" ;
            : redescribe ;
        }
   }

   : match "type _ ; guess _ ; write _"  {
    : if (is_exists "florrie" && is_at "living_room" && is_puzzle_florrie_now ) {
        : if (florrie_code == original "noun1") {
            : print "Awesome!!! I wonder what it means though." ;
            : success ;
            : set_false "is_puzzle_florrie_now" ;
            : set_true "is_puzzle_florrie_solved" ;
            : set_true "is_everybody_here" ;
            : set_false "is_florrie_alone_in_living_room" ;
            : print "Everybody has arrived!!!!" ;
            : print "Wool, RuD, SevenSeas, are here with June, E and Florrie!" ;
            : print "<TALK<#cc0>> to them, so you can <EAT<#cc0>> cake!" ;
            : create "wool_kitchen" ;
            : create "sevenseas_kitchen" ;
            : create "rud_kitchen" ;
            : create "june_kitchen" ;
            : create "ee_kitchen" ;
            : press_any_key ;
            : set_true "you_win" ;
            : redescribe ;
        }
        : else {
            : print "Florrie says: \'It's a tough question, do you need a <HINT<#cc0>>?\'";
            : failure ;
        }
     }
    }

   : match "examine cake; examine flame; examine candle; examine birthday" {
    : if (is_florrie_in_living_room_with_cake) {
        : print "Today it's your one-year birthday. You can't wait to eat cake!" ;
    }
    : else {
        : print "You think of the famous song about the delicious and moist cake." ;
    }
   }

   : match "eat cake; get cake; get candle; ask cake; eat -" {
   : if (is_everybody_here) {
        : set_true "is_florrie_in_living_room_with_cake";
        : set_false "is_everybody_here";
        : print "Florrie adds: \'It's your birthday CC!!! Let's eat your cake!" ;
        : print "Everybody is here, we're going to the kitchen!\' Let's <GO<#cc0>> there!" ;
        : press_any_key ;
        : redescribe ;
    }
    : else_if (is_florrie_in_living_room_with_cake) {
        : print "We're going to eat cake with everybody! Let's <GO<#cc0>> to the kitchen!" ;
    }
    : else {
        : print "You think of the famous song about the delicious and moist cake." ;
    }
   }

   : match "go - ; go _" {
    : if (you_win) {
        : goto "cc_win" ;
        : redescribe;
    }
    : else {
        : print "\'If you don't know where you're going, you're probably going wrong\' - Terry Pratchett" ;
    }
   }
   : match "go kitchen ; kitchen -" {
    : if (you_win) {
        : goto "cc_win" ;
        : redescribe;
    }
   }

   : match "examine yourself; talk yourself"  {
      : if (is_hero_cc) {
        : print "You are so cute, whether it's as CC or HeroCC." ;
      }
      : else {
        : print "You are so cute. If only you could be everywhere at once so the world could see your cuteness. This is why your goal is to become a superstar." ;
      }
   }

   : match "help -" {
       : print "- Type '<I<#cc0>>' to see what you are holding";
       : print "- Type '<GET<#cc0>> <objectname<#cc0>>' to pick up an item";
       : print "- Type '<GIVE<#cc0>> <objectname<#cc0>>' to give an object to someone";
       : print "- Type '<X<#cc0>>' or '<X<#cc0>> <objectname<#cc0>>' to examine clues";
       : if (is_carried "map") {
         : print "- Type '<M<#cc0>>' or '<MAP<#cc0>>' to display map and type it again to close it";
       }
       : print "- Type <N<#cc0>>, <S<#cc0>>, <E<#cc0>>, <W<#cc0>>, <ENTER<#cc0>>, <EXIT<#cc0>> to move";
       : print "- Type '<LOAD<#cc0>>' or  '<SAVE<#cc0>>' to load or save a game";
       : print "- Type '<UNDO<#cc0>>' to go back in time and undo what you have just done";
       : print "- Type '<CLEAR<#cc0>>' or  '<REDESCRIBE<#cc0>>' to clear the screen";
       : print "- Type '<HINT<#cc0>>' to get a hint on a puzzle\n  If a HINT is not sufficient, check the solution in the PDF guide. Don't give up!";
       : print "- Type '<QUIT<#cc0>>' to restart a game";
       : if (is_at "dream" && tuto_used_map) {
            : press_any_key;
            : print "Well done! I'm waking up! Let's start the day, and don't forget to use <HELP<#cc0>> or <MAP<#cc0>> if you are stuck.";
            : press_any_key;
            : goto "cc_room";
            : gosub "play_music";
       }
   }

   : match "hint -" {
       : if (is_at "puzzle_florrie_laptop") {
        : print "The screen displays:" ;
        : print "Password = answer to this riddle: " ;
        : print "\'My feathers take me anywhere. The tones of grey in my plumage are reminiscent of everyone's favorite weather." ;
        : print "I am a star in the city, where admirers fawn over my shiny iridescent neck." ;
        : print "I brighten everyone's day by leaving white traces of my visit on cars and fresh air-dried laundry." ;
        : print "Who am I? UNLOCK me!\' " ;
        : print "Hint: it's a famous bird, most kids like to run after them in the streets." ;
      }
      : else_if (is_at "puzzle_hat") {
        : print "All birds will know their hat color as soon as they have enough information to do so. " ;
        : print "If they don't know, it means they do not see enough hats of the same color. " ;
        : print "Think about how the chicken could use it to deduce his own hat color. " ;
        : print "Type <GUESS<#cc0>> color when you are ready." ;
      }
      : else_if (is_present "rud_sad" && is_at "party_planet_inside") {
         : print "You simply need to multiply the time interval per number of points to know which mini-game wins more points." ;
         : print "When you're done <GUESS<#cc0>> the game name!" ;
       }
       : else_if (is_at "crispy_garden" && is_exists "seven_seas" && is_puzzle_seven_seas_now) {
             : print "Equality is transitive, so you just need to keep track of the one channel that has no equal!" ;
             : print "Just ask for more <CLUE<#cc0>>S until you know enough!" ;
             : print "When you know the answer, \'<GUESS<#cc0>> channel\' whenever you are ready." ;
         }
       : else_if (is_at "living_room" && is_exists "florrie" && is_puzzle_florrie_now) {
        : print "Letters are translated to numbers following a mathematical sequence. Can you see the pattern?" ;
        : print "D = 10" ;
        : print "E = 14" ;
        : print "F = 19" ;
        : print "G = 25" ;
        }
        : else_if (is_at "living_room" && is_exists "june" && is_exists "ee" ) {
            : print "Make sure you talk to both June and E." ;
        }
        : else_if (is_at "cc_hero_june") {
            : print "What's going on with this <beak<#cc0>>?" ;
        }
        : else_if (you_win && is_everybody_here) {
            : print "Where is your cake? <EAT CAKE<#cc0>> whenever you are ready to eat!" ;
        }
        : else_if (you_win && is_florrie_in_living_room_with_cake) {
            : print "Everybody is going to the kitchen! Let's <GO<#cc0>> there!" ;
        }
        : else {
            : print "No specific hint. For now, try exploring a bit!" ;
        }


   }

   : match "examine bedroom"  {
      : if (is_at "cc_room") {
         : print "This room is so cute, just like me. Lots of toys: a bull, a plushie, a boat... And a small window on the surrounding skies." ;
      }
   }

   : match "examine - ; examine room"  {
      : if (is_at "cc_room") {
         : print "This room is so cute, just like me. Lots of toys: a bull, a plushie, a boat... And a small window on the surrounding skies." ;
      }
      : if (is_at "crispy_garden") {
         : print "It's quite warm in here." ;
         : if (is_present "seven_seas") {
            : print "Do not hesitate to <TALK<#cc0>> to SevenSeas." ;
         }
      }
      : if (is_at "puzzle_florrie_laptop") {
         : print "Florrie's laptop screen shows the <Cosmoose<#cc0>> logo and a mysterious <penguin<#cc0>>." ;
      }
      : if (is_at "living_room") {
         : print "This room has everything, from nature to technology, and what a nice view on the neighboring planets." ;
      }
      : if (is_at "living_room" && is_labyrinth_open) {
         : print "The screen is flashing brightly and making alarming sounds. It may be time to do something, urgently.";
      }
      : if (is_at "living_room" && you_win) {
         : print "You can try to <TALK<#cc0>> with your friends.";
         : print "Whenever you are ready, you can <GO<#cc0>> and eat cake." ;
      }
      : if (is_at "party_planet") {
         : print "It may look gloomy from the outside, but some people spend their nights and day inside." ;
      }
      : if (is_at "party_planet_inside") {
         : print "RuD is almost always here. He moved his guitar and all the stuff from his own bedroom (which looks like an empty garage now) to this common gaming room." ;
         : print "He takes a sip of energy drink." ;
      }
      : if (is_at "wools_wheels") {
         : print "Wool can repair any gear, mostly with the power of his brain. He is always surrounded by lots of tools." ;
      }
      : if (is_at "puzzle_hat") {
         : print "You've never seen Wool so excited. He must love a good puzzle." ;
      }
      : if (is_at "cc_hero_june") {
            : print "What's going on with this <beak<#cc0>>?" ;
        }
      : if (in_labyrinth) {
         : print "Escape without being detected by any drone, while getting the blueprint!" ;
      }
   }

   : match "examine - ; examine _ ; talk - ; talk _" {
      : if (talked_to_someone_before_cake && is_at "living_room") {
        : print "Let's <EAT<#cc0>> cake!" ;
      }
      : else_if (talked_to_someone_before_cake && is_at "living_room" && is_florrie_in_living_room_with_cake) {
        : print "Whenever you are ready, you can <GO<#cc0>> and eat cake." ;
      }
   }
   : match "nothing -" {
      : print "{nothing_message}";
      : set_string var="nothing_message" value="";
   }
   : match "repair gear" {
      : if (is_present "wool" || is_present "wool_kitchen") {
        : print "Wool says: \'Not sure there's much left to repair. I have too much free time these days.\'";
      }
   }

   : match "examine table ; examine drawer" {
      : if (is_at "wools_wheels") {
        : print "You have no idea how to use what's in this room.";
      }
   }

   : match "play *; play -" {
      : print "It's always fun to play!";
   }

   : match "wait *; wait -" {
      : print "What are you waiting for? Life is too short to stay passive.";
   }

   : match "examine map" {
      : if (is_at "dream") {
         : print "To use the map, you need to first get it by typing <TAKE MAP<#cc0>>.";
      }
   }
   : if (is_at "dream") {
      : match "take stars" {
         : pocket "stars";
         : update_graphic;
         : print "You got some shiny stars! They are too big, you can only <drop<#ee0>> them here.";
      }
      : match "drop stars" {
         : if (is_carried "stars") {
             : drop "stars";
             : update_graphic;
             : set_sentence "nothing";
             : print "The stars are back.";
         }
      }
      : match "look stars" {
         : print "Those are very bright abstral objects! I should not look at them for too long.";
         : set_sentence "nothing";
      }
      : match "look _" {
         : if (!noun1_is "map" && !is_carried "map" && !noun1_is "stars") {
            : if(noun1_is "") {
               : print ("Great, now add <MAP<#cc0>> after the command <" + upper(original "verb") + "<#cc0>> then press enter.");
            }
            : else {
               : print ("Great, now replace <" + upper(original "noun1") + "<#ee0>> by <MAP<#cc0>> and type <LOOK MAP<#cc0>> then press enter.");
            }
         }
         : else_if (!noun1_is "map" && !is_carried "map" && !noun1_is "sign") {
         }
      }
      : match "look inventory" {
         : set_sentence "inventory";
      }
      : match "inventory _" {
         : mask {
            : set_true "seen_inventory_tuto";
         }
      }
      : if (is_movement_command() && verb_is "north") {
         : set_integer var="dream_cc_y" (dream_cc_y - 20);
         : set_false "dream_cc_go_bottom";
         : update_graphic;
         : increment "tuto_directions";
         : print ("Well done going <"+ original "verb" + "<#cc0>>, in the game you would have gone to the room to the top."+(tuto_directions < 4 ? " Move "+(4 - tuto_directions)+" more time" +(tuto_directions < 3 ? "s" : "") + "." : ""));
      }
      : if (is_movement_command() && verb_is "south") {
         : set_integer var="dream_cc_y" (dream_cc_y + 20);
         : set_true "dream_cc_go_bottom";
         : update_graphic;
         : increment "tuto_directions";
         : print ("Well done going <"+ original "verb" + "<#cc0>>, in the game you would have gone to the room to the bottom."+(tuto_directions < 4 ? " Move "+(4 - tuto_directions)+" more time" +(tuto_directions < 3 ? "s" : "") + "." : ""));
      }
      : if (is_movement_command() && verb_is "west") {
         : set_integer var="dream_cc_x" (dream_cc_x - 32);
         : set_true "dream_cc_go_right";
         : update_graphic;
         : increment "tuto_directions";
         : print ("Well done going <"+ original "verb" + "<#cc0>>, in the game you would have gone to the room to the right."+(tuto_directions < 4 ? " Move "+(4 - tuto_directions)+" more time" +(tuto_directions < 3 ? "s" : "") + "." : ""));
      }
      : if (is_movement_command() && verb_is "east") {
         : set_integer var="dream_cc_x" (dream_cc_x + 32);
         : set_false "dream_cc_go_right";
         : update_graphic;
         : increment "tuto_directions";
         : print ("Well done going <"+ original "verb" + "<#cc0>>, in the game you would have gone to the room to the left."+(tuto_directions < 4 ? " Move "+(4 - tuto_directions)+" more time" +(tuto_directions < 3 ? "s" : "") + "." : ""));
      }
   }
   
   : match "examine dovalingo" {
      : if (is_present "ee") {
         : print "So many notifications, I should help E to do some <Dovalingo<#cc0>>™ lessons.";
      } : else_if (is_carried "communicator") {
         : print "I should do some <Dovalingo<#cc0>>™ lessons for Florrie.";
      } : else {
         : print "I can't <Dovalingo<#cc0>>™ without Florrie communicator";
      }
   }
   
   : match "play dovalingo; dovalingo -; open dovalingo; open notification; use dovalingo; do dovalingo; train dovalingo" {
      : if (is_present "ee") {
         : print "I should help E to do some Dovalingo™ lessons.";
         : press_any_key;
         : gosub "play_dovalingo";
      } : else_if (is_carried "communicator") {

         : print "I should do some Dovalingo™ lessons for Florrie.";
         : press_any_key;
         : gosub "play_dovalingo";
      } : else {
         : print "I can't <Dovalingo<#cc0>>™ without Florrie communicator";
      }
   }
   
   : match "drop *" {
      : if (noun1_is "chicken_wing" && is_carried "chicken_wing") {
         : print "You may need it if you get hungry at night." ;
      }
      : else_if (noun1_is "spherificator" && is_carried "spherificator" && !is_at "wools_wheels") {
         : print "If Wool finds it away, he may be more careful next time. Better keep it." ;
      }
      : else_if (noun1_is "spherificator" && is_carried "spherificator" && is_at "wools_wheels") {
         : print "Better put it back in its place so that Wool doesn't notice its disappearance." ;
         : drop "spherificator";
      }
      : else_if (noun1_is "energydrink" && is_carried "energydrink") {
         : print "Please honor the present that was given to you." ;
      }
      : else {
         : print "You don't need to drop anything.";
      }
   }
   : match "cheat *" {
      : print "Unknown verb - \"cheat\".";
   }
   
   : match "exit -" {
      : if (!is_puzzle_wool_solved && is_at "puzzle_hat") {
        : print "If you need help here, type <HINT<#cc0>>." ;
        : print "You don't have many possible answers though, so you should be able to guess quickly." ;
      }
   }

   : if (in_labyrinth) {
      : match "start -; in -; enter -; retry -" {
          : goto "labyrinth_1_1";
          : redescribe;
      }
      : match "exit -; leave -" {
          : goto "living_room";
          : redescribe;
      }
      : match "e _" {
         : mask {
           : if (try_move() != "") {
              : increment "day_spend_labyrinth_enigma";
              : set_integer var = "labyrinth_position_x" {( labyrinth_position_x + 8)}
              : update_graphic;
              : pause "50" ;
              : set_integer var = "labyrinth_position_x" {( labyrinth_position_x + 8)}
              : update_graphic;
              : pause "50" ;
           }
         }
      }
      : match "s _" {
         : mask {
           : if (try_move() != "") {
              : increment "day_spend_labyrinth_enigma";
              : set_integer var = "labyrinth_position_y" {( labyrinth_position_y + 7)}
              : update_graphic;
              : pause "50" ;
              : set_integer var = "labyrinth_position_y" {( labyrinth_position_y + 7)}
              : update_graphic;
              : pause "50" ;
           }
         }
      }
      : match "n _" {
         : mask {
           : if (try_move() != "") {
              : increment "day_spend_labyrinth_enigma";
              : set_integer var = "labyrinth_position_y" {( labyrinth_position_y - 7)}
              : update_graphic;
              : pause "50" ;
              : set_integer var = "labyrinth_position_y" {( labyrinth_position_y - 7)}
              : update_graphic;
              : pause "50" ;
           }
         }
      }
      : match "w _" {
         : mask {
           : if (try_move() != "") {
              : increment "day_spend_labyrinth_enigma";
              : set_integer var = "labyrinth_position_x" {( labyrinth_position_x - 8)}
              : update_graphic;
              : pause "50" ;
              : set_integer var = "labyrinth_position_x" {( labyrinth_position_x - 8)}
              : update_graphic;
              : pause "50" ;
           }
         }
      }
   }
}

on_post_tick {
   : if (is_at "dream") {
      : set_integer var = "cc_x" value = "-145";
      : set_integer var = "cc_y" value = "10";
   }
   : else_if (is_at "cc_room") {
      : set_integer var = "cc_x" value = "-2";
      : set_integer var = "cc_y" value = "-1";
   }
   : else_if (is_at "living_room") {
      : set_integer var = "cc_x" value = "-2";
      : set_integer var = "cc_y" value = "20";
   }
   : else_if (is_at "wools_wheels") {
      : set_integer var = "cc_x" value = "-50";
      : set_integer var = "cc_y" value = "20";
   }
   : else_if (is_at "party_planet") {
      : set_integer var = "cc_x" value = "-51";
      : set_integer var = "cc_y" value = "52";
   }
   : else_if (is_at "crispy_garden") {
      : set_integer var = "cc_x" value = "-1";
      : set_integer var = "cc_y" value = "54";
   }
   : if (is_at "puzzle_florrie_laptop") {
      : set_true "has_seen_laptop_puzzle";
   }
   : if (is_at "puzzle_hat") {
      : set_true "has_seen_wool_puzzle";
   }
}

on_render {
 : if (is_using_map) {
   : overlay "new_map";
   : if (!has_seen_laptop_puzzle) {
      : overlay "map_wool_grey";
   }
   : if (has_seen_laptop_puzzle && !is_puzzle_wool_solved) {
      : overlay (has_seen_wool_puzzle ? "exclamation_mark_orange" :  "exclamation_mark_grey") x="163" y="35" experimental_command = "look wool";
   }
   #: experimental_text_overlay text -> ("yoh"+has_seen_laptop_puzzle) x="20" y="20" ;
   : if (!is_laptop_unlocked) {
      : overlay (has_seen_laptop_puzzle ? "exclamation_mark_orange" :  "exclamation_mark_grey") x="225" y="35" experimental_command = "look lounge";
   }
   : if (is_puzzle_7c_solved && is_laptop_unlocked && is_exists "rud_happy" && is_puzzle_wool_solved) {
      : overlay "exclamation_mark_grey" x="225" y="35" experimental_command = "look lounge";
   }
   : if (!has_seen_wool_puzzle) {
      : overlay "map_game_grey";
   }
   : if (has_seen_wool_puzzle && is_exists "rud_sad") {
      : overlay (has_seen_rud_puzzle ? "exclamation_mark_orange" :  "exclamation_mark_grey") x="162" y="67" experimental_command = "look game";
   }
   : if (is_rud_sad || !is_puzzle_wool_solved || !is_laptop_unlocked) {
      : overlay "map_yard_grey";
   }
   : if (!(is_rud_sad || !is_puzzle_wool_solved || !is_laptop_unlocked) && !is_puzzle_7c_solved) {
      : overlay (has_seen_7c_puzzle ? "exclamation_mark_orange" :  "exclamation_mark_grey") x="218" y="67" experimental_command = "look yard";
   }
   : overlay "icon_cross" x="235" y="1" experimental_command = "exit";
   : overlay {
      graphic -> ("icon_cc")
      x -> (cc_x)
      y -> (cc_y)
   }
 }
}

######################################
#  Assets                     #
######################################

assets {
   sounds {
      music_beat_1 : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/Beat_1.mp3" ;
      music_beat_2 : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/Beat_2_ccs_room.mp3" ;
      music_dream : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/Beat_12_ccs_dream_70bpm.mp3" ;
      music_wools_wheels : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/Beat07_Wools_room.mp3" ;
      music_laptop : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/lofi2_wool.mp3" ;
      music_living_room : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/lofi3_livingroom.mp3" ;
      music_party_planet_inside : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/lofi4_partyplanet.mp3" ;
      music_party_planet_outside: sound_sample "https://cosmoose.org/adventuron_april_2022/Music/lofi8_party_planet_outside.mp3" ;
      music_crispy_garden : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/lofi10_crispy.mp3" ;
      music_labyrinth_1 : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/Beat08_puzzle.mp3" ;
      music_labyrinth_2 : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/Beat11_Puzzle.mp3" ;
      music_living_room_pigeon : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/Beat09_living_room_june_E_ganggang.mp3" ;
      music_win : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/funprio.mp3" ;
      incidental_success : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/SFX_usefull_sucess_100bpm.mp3" ;
      incidental_failing_failure : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/SFX_failure_130bpm.mp3" ;
      incidental_useless_success : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/SFX_useless_sucess_130bpm.mp3" ;
      incidental_failure : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/SFX_error_130bpm.mp3" ;
      incidental_ok : sound_sample "https://cosmoose.org/adventuron_april_2022/Music/SFX_OK_130bpm.mp3" ;
   }
   graphics {
         cc_room : png "https://cosmoose.org/adventuron_april_2022/Images/cc_room.png" {
         : overlay "transparent_40x40" x="113" y="8" experimental_command = "look mirror"; 
         : overlay "transparent_40x40" x="133" y="8" experimental_command = "look mirror"; 
      };
      crispy_garden : png "https://cosmoose.org/adventuron_april_2022/Images/crispy_garden_no7Cs.png" {
        : if (is_seven_seas_crispy) {
               : overlay "crispy_garden_7Cs";
               : overlay "transparent_20x20" x="177" y="18" experimental_command = "click 7Cs";
               : overlay "transparent_20x20" x="177" y="38" experimental_command = "click 7Cs";
               : overlay "transparent_20x20" x="177" y="58" experimental_command = "click 7Cs";
        }
        : if (is_puzzle_seven_seas_now) {
               : overlay "puzzle_channels";
        }
      } ;
      wools_wheels : png "https://cosmoose.org/adventuron_april_2022/Images/wools_wheels.png" {
        : if (is_wool_wheeled) {
               : overlay "wool";
               : overlay "transparent_20x20" x="52" y="15" experimental_command = "click wool";
               : overlay "transparent_20x20" x="52" y="35" experimental_command = "click wool";
               : overlay "transparent_20x20" x="52" y="55" experimental_command = "click wool";
               
               
        }
      } ;
      party_planet : png "https://cosmoose.org/adventuron_april_2022/Images/party_planet.png" ;
      party_planet_inside : png "https://cosmoose.org/adventuron_april_2022/Images/rud.png" {
        : if (is_rud_sad) {
               : overlay "rudface";
               : overlay "transparent_20x20" x="143" y="20" experimental_command = "click RuD";
               : overlay "transparent_20x20" x="143" y="40" experimental_command = "click RuD";
               : overlay "transparent_20x20" x="143" y="60" experimental_command = "click RuD";
               : if (is_puzzle_rud_in_progress) {
                : overlay "puzzle_rud";
               }
        }
        : if (is_puzzle_rud_in_progress) {
               : overlay "puzzle_rud";
        }
      } ;
      rudface : png "https://cosmoose.org/adventuron_april_2022/Images/rudface.png" ;
      crispy_garden_7Cs : png "https://cosmoose.org/adventuron_april_2022/Images/crispy_garden_7Cs.png" ;
      wool : png "https://cosmoose.org/adventuron_april_2022/Images/wool.png" ;
      june : png "https://cosmoose.org/adventuron_april_2022/Images/june.png" ;
      etana : png "https://cosmoose.org/adventuron_april_2022/Images/etana.png" ;
      florrie : png "https://cosmoose.org/adventuron_april_2022/Images/florrie.png" ;
      florrie_cake : png "https://cosmoose.org/adventuron_april_2022/Images/florrie_cake.png" ;
      living_room_danger : png "https://cosmoose.org/adventuron_april_2022/Images/common_room_danger.png" ;
      living_room : png "https://cosmoose.org/adventuron_april_2022/Images/common_room.png" {
        : if (is_labyrinth_open) {
               : overlay "living_room_danger";
        }
        : if (is_june_in_living_room) {
               : overlay "june";
               : overlay "transparent_40x40" x="138" y="9" experimental_command = "click june";
               : overlay "transparent_40x40" x="138" y="40" experimental_command = "click june";
               : if (is_e_in_living_room) {
                 : overlay "etana";
                 : overlay "transparent_20x20" x="91" y="24" experimental_command = "click e";
                 : overlay "transparent_40x40" x="69" y="50" experimental_command = "click e";
               }
        }
        : else_if (is_e_in_living_room) {
               : overlay "etana";
               : overlay "transparent_20x20" x="91" y="24" experimental_command = "click e";
               : overlay "transparent_40x40" x="69" y="50" experimental_command = "click e";
        }
        : else_if (is_florrie_alone_in_living_room) {
               : overlay "florrie";
               : overlay "transparent_40x40" x="68" y="20" experimental_command = "click florrie";
               : overlay "transparent_40x40" x="68" y="60" experimental_command = "click florrie";
        }
        : else_if (is_florrie_in_living_room_with_cake) {
            : overlay "florrie_cake";
            : overlay "transparent_40x40" x="68" y="20" experimental_command = "click florrie";
            : overlay "transparent_40x40" x="68" y="60" experimental_command = "click florrie";
            : overlay "transparent_40x40" x="107" y="19" experimental_command = "click cake";
        }

        : else_if (is_everybody_here) {
               : overlay "everyone";
        }
        : if (!is_everybody_here && !is_florrie_in_living_room_with_cake) {
            : if (!is_e_in_living_room) {
               : overlay "transparent_10x10" x="114" y="50" experimental_command = "look laptop";
            }
               
           : overlay "transparent_20x20" x="190" y="23" experimental_command = "look screen";
           : overlay "transparent_20x20" x="190" y="23" experimental_command = "look screen";
           : overlay "transparent_20x20" x="210" y="23" experimental_command = "look screen";
           : overlay "transparent_20x20" x="226" y="23" experimental_command = "look screen";
         }
      } ;
      everyone : png "https://cosmoose.org/adventuron_april_2022/Images/everyone.png" ;
      loading_screen : png "https://cosmoose.org/adventuron_april_2022/Images/loading.png" ;
      cc_hero_june : png "https://cosmoose.org/adventuron_april_2022/Images/cc_hero.png" ;
      cc_win : png "https://cosmoose.org/adventuron_april_2022/Images/feast.png" ;
      puzzle_florrie_laptop : png "https://cosmoose.org/adventuron_april_2022/Images/laptop.png" ;
      puzzle_channels : png "https://cosmoose.org/adventuron_april_2022/Images/puzzle_channels.png" ;
      puzzle_hat : png "https://cosmoose.org/adventuron_april_2022/Images/puzzle_hat.png" ;
      puzzle_rud : png "https://cosmoose.org/adventuron_april_2022/Images/puzzle_rud.png" ;
      puzzle_ship : png "https://cosmoose.org/adventuron_april_2022/Images/puzzle_ship.png" ;
      puzzle_ship_destroyed : png "https://cosmoose.org/adventuron_april_2022/Images/puzzle_ship_destroyed.png" ;
      puzzle_labyrinth_danger : png "https://cosmoose.org/adventuron_april_2022/Images/puzzle_labyrinth_danger.png" ;
      puzzle_labyrinth : png "https://cosmoose.org/adventuron_april_2022/Images/puzzle_labyrinth.png" {
              : if (is_at "labyrinth_ship_destroyed") {
                 : overlay "puzzle_labyrinth_danger";
              }
              : overlay {
                  graphic -> (is_at "labyrinth_ship_destroyed" ? "puzzle_ship_destroyed" : "puzzle_ship")
                  x       -> ( labyrinth_position_x )
                  y       -> ( labyrinth_position_y )
            }
            : if (! is_at "labyrinth_ship_destroyed") {
               : overlay {
                  graphic -> ("transparent_10x10")
                  experimental_command -> ("east")
                  x       -> ( labyrinth_position_x + 10 + 110 )
                  y       -> ( labyrinth_position_y + 15 )
                  
               }
               : overlay {
                  graphic -> ("transparent_10x10")
                  experimental_command -> ("west")
                  x       -> ( labyrinth_position_x - 10 +110 )
                  y       -> ( labyrinth_position_y + 15 )
               }
               : overlay {
                  graphic -> ("transparent_10x10")
                  experimental_command -> ("north")
                  x       -> ( labyrinth_position_x + 110 )
                  y       -> ( labyrinth_position_y - 10 + 15 )
               }
               : overlay {
                  graphic -> ("transparent_10x10")
                  experimental_command -> ("south")
                  x       -> ( labyrinth_position_x + 110 )
                  y       -> ( labyrinth_position_y + 10 + 15 )
               }
            }
         };

      dream: png "https://cosmoose.org/adventuron_april_2022/Images/dream.png" {
         : if (is_present "stars" && !is_carried "stars") {
            : overlay "dream_stars";
         }
         : overlay "dream_cc" {
            x -> (dream_cc_x)
            y -> (dream_cc_y)
            flip_x -> (dream_cc_go_right)
            flip_y -> (dream_cc_go_bottom)
         }
         : if (dream_look_map && !is_carried "map") {
            : overlay "map_object" x = "30" y = "20";
            : overlay "transparent_20x20" x="140" y="60" experimental_command = "click map";
            : overlay "transparent_20x20" x="160" y="60" experimental_command = "click map";
         }
      };
      // test for text overlay but not great yet
      /*
      dream: png "data:image/svg+xml;utf8,<svg xmalns=\"http://www.w3.org/2000/svg\"  ><g><text >Hello World!</text></g></svg>";
      */
      dream_cc: png "https://cosmoose.org/adventuron_april_2022/Images/dream_cc.png";
      dream_stars: png "https://cosmoose.org/adventuron_april_2022/Images/dream_stars.png";
      map_object: png "https://cosmoose.org/adventuron_april_2022/Images/icon_map.png";
      new_map:  png "https://cosmoose.org/adventuron_april_2022/Images/map.png";
      map_game_grey: png "https://cosmoose.org/adventuron_april_2022/Images/map_game_grey.png";
      map_wool_grey: png "https://cosmoose.org/adventuron_april_2022/Images/map_wool_grey.png";
      map_yard_grey: png "https://cosmoose.org/adventuron_april_2022/Images/map_yard_grey.png";
      transparent_10x10: png "https://cosmoose.org/adventuron_april_2022/Images/transparent_10x10.png";
      transparent_20x20: png "https://cosmoose.org/adventuron_april_2022/Images/transparent_20x20.png";
      transparent_40x40: png "https://cosmoose.org/adventuron_april_2022/Images/transparent_40x40.png";
      exclamation_mark_grey: png "https://cosmoose.org/adventuron_april_2022/Images/bang_grey.png";
      exclamation_mark_orange: png "https://cosmoose.org/adventuron_april_2022/Images/bang_red.png";
      icon_cc: png "https://cosmoose.org/adventuron_april_2022/Images/icon_cc.png";
      icon_cross: png "https://cosmoose.org/adventuron_april_2022/Images/icon_cross.png";
   }
   fonts {
/*
      userfont_dovalingo : ttf {
         // Extracted from https://fonts.googleapis.com/css2?family=Montserrat&display=swap
         filepath     = "https://fonts.gstatic.com/s/nunito/v23/XRXI3I6Li01BKofiOc5wtlZ2di8HDLshdTk3j77e.woff2"
         // This is the balance between average vertical pixels and average horz pixels for
         // use in mapping the font's sizing to the 'columns' property in the theme settings.
         horz_pixels  = "20"
         vert_pixels  = "30"
         supports_arrows = true
      }*/
       userfont_dovalingo : base64_ttf "" vert_pixels = "16" horz_pixels = "20" experimental_always_bold = "true";

      
   }
}

